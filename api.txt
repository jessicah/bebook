       __initialize_locale_kit()
       __ls__7BStringR7BString
       _BAlertFilter_::_BAlertFilter_(BAlert*)
       _BAlertFilter_::_BAlertFilter_(BAlert*)
       _BAlertFilter_::~_BAlertFilter_()
       _BAlertFilter_::~_BAlertFilter_()
       _BAlertFilter_::~_BAlertFilter_()
       _BAlertFilter_::Filter(BMessage*, BHandler**)
       _BMCFilter_::_BMCFilter_(BMenuField*, unsigned int)
       _BMCFilter_::_BMCFilter_(BMenuField*, unsigned int)
       _BMCFilter_::~_BMCFilter_()
       _BMCFilter_::~_BMCFilter_()
       _BMCFilter_::~_BMCFilter_()
       _BMCFilter_::Filter(BMessage*, BHandler**)
       _BMCMenuBar_::_BMCMenuBar_(BMenuField*)
       _BMCMenuBar_::_BMCMenuBar_(BMenuField*)
       _BMCMenuBar_::_BMCMenuBar_(BMessage*)
       _BMCMenuBar_::_BMCMenuBar_(BMessage*)
       _BMCMenuBar_::_BMCMenuBar_(BRect, bool, BMenuField*)
       _BMCMenuBar_::_BMCMenuBar_(BRect, bool, BMenuField*)
       _BMCMenuBar_::_Init()
       _BMCMenuBar_::~_BMCMenuBar_()
       _BMCMenuBar_::~_BMCMenuBar_()
       _BMCMenuBar_::~_BMCMenuBar_()
       _BMCMenuBar_::AttachedToWindow()
       _BMCMenuBar_::Draw(BRect)
       _BMCMenuBar_::FrameResized(float, float)
       _BMCMenuBar_::Instantiate(BMessage*)
       _BMCMenuBar_::MakeFocus(bool)
       _BMCMenuBar_::MaxSize()
       _BMCMenuBar_::MessageReceived(BMessage*)
       _BMCMenuBar_::MinSize()
       _BMCMenuBar_::SetEnabled(bool)
       _BMCMenuBar_::SetMaxContentWidth(float)
       _BPictureExtent_::_BPictureExtent_(int)
       _BPictureExtent_::_BPictureExtent_(int)
       _BPictureExtent_::~_BPictureExtent_()
       _BPictureExtent_::~_BPictureExtent_()
       _BPictureExtent_::Flatten(BDataIO*)
       _BPictureExtent_::ImportData(void const*, int)
       _BPictureExtent_::SetSize(int)
       _BPictureExtent_::Unflatten(BDataIO*)
       _BStyleRecordBuffer_::_BStyleRecordBuffer_()
       _BStyleRecordBuffer_::_BStyleRecordBuffer_()
       _BStyleRecordBuffer_::CommitRecord(int)
       _BStyleRecordBuffer_::InsertRecord(BFont const*, rgb_color const*)
       _BStyleRecordBuffer_::MatchRecord(BFont const*, rgb_color const*, int*)
       _BStyleRecordBuffer_::RemoveRecord(int)
       _BStyleRunDescBuffer_::_BStyleRunDescBuffer_()
       _BStyleRunDescBuffer_::_BStyleRunDescBuffer_()
       _BStyleRunDescBuffer_::BumpOffset(int, int)
       _BStyleRunDescBuffer_::InsertDesc(STEStyleRunDesc*, int)
       _BStyleRunDescBuffer_::OffsetToRun(int) const
       _BStyleRunDescBuffer_::RemoveDescs(int, int)
       _BZombieReplicantView_::_BZombieReplicantView_(BRect, int)
       _BZombieReplicantView_::_BZombieReplicantView_(BRect, int)
       _BZombieReplicantView_::~_BZombieReplicantView_()
       _BZombieReplicantView_::~_BZombieReplicantView_()
       _BZombieReplicantView_::~_BZombieReplicantView_()
       _BZombieReplicantView_::Archive(BMessage*, bool) const
       _BZombieReplicantView_::Draw(BRect)
       _BZombieReplicantView_::MessageReceived(BMessage*)
       _BZombieReplicantView_::MouseDown(BPoint)
       _BZombieReplicantView_::SetArchive(BMessage*)
       _control_input_server_(BMessage*, BMessage*)
       _fini
       _fini_interface_kit_
       _font_control_(BFont*, int, void*)
       _get_key_map(key_map**, char**, long*)
       _get_looper_port_(BLooper const*)
       _get_system_default_font_(char const*, char*, char*, float*)
       _gSharedObjectHaikuABI
       _gSharedObjectHaikuVersion
       _init
       _init_global_fonts_()
       _init_interface_kit_
       _menu_info_ptr_
       _PointerList_::_PointerList_(_PointerList_ const&)
       _PointerList_::_PointerList_(_PointerList_ const&)
       _PointerList_::_PointerList_(int, bool)
       _PointerList_::_PointerList_(int, bool)
       _PointerList_::~_PointerList_()
       _PointerList_::~_PointerList_()
       _PointerList_::~_PointerList_()
       _PointerList_::BinarySearch(void const*, int (*)(void const*, void const*, void*), void*) const
       _PointerList_::BinarySearch(void const*, int (*)(void const*, void const*)) const
       _PointerList_::BinarySearchIndex(void const*, int (*)(void const*, void const*, void*), void*) const
       _PointerList_::BinarySearchIndex(void const*, int (*)(void const*, void const*)) const
       _PointerList_::BinarySearchIndexByPredicate(void const*, int (*)(void const*, void*)) const
       _PointerList_::EachElement(void* (*)(void*, void*), void*)
       _PointerList_::HSortItems(int (*)(void const*, void const*, void*), void*)
       _PointerList_::HSortItems(int (*)(void const*, void const*))
       _PointerList_::MoveItem(int, int)
       _PointerList_::ReplaceItem(int, void*)
       _PointerList_::SortItems(int (*)(void const*, void const*, void*), void*)
       _PointerList_::SortItems(int (*)(void const*, void const*))
       _ReservedPositionIO1__11BPositionIO
       _ReservedShelf1__6BShelfFv
       _ReservedStatusBar1__10BStatusBar
       _ReservedWindow1__7BWindow
       _restore_key_map_()
       _set_menu_sem_(BWindow*, int)
       _set_system_font_(char const*, char*, char*, float)
       AbstractPointerListHelper::~AbstractPointerListHelper()
       AbstractPointerListHelper::~AbstractPointerListHelper()
       AbstractPointerListHelper::~AbstractPointerListHelper()
       AbstractPointerListHelper::BinarySearch(void const*, BList const*)
       AbstractPointerListHelper::BinarySearch(void const*, void const**, int, int&)
       AbstractPointerListHelper::BinarySearchIndex(void const*, BList const*)
       AbstractPointerListHelper::HSortItems(BList*)
       AbstractPointerListHelper::QuickSort(void**, int, int)
       AbstractPointerListHelper::SortItems(BList*)
       accept_first_click()
       activate_workspace(int)
       add_system_beep_event(char const*, unsigned int)
       app_info::~app_info()
       app_info::~app_info()
       app_info::app_info()
       app_info::app_info()
       B_ADD_ON_FIELD
       B_AFFINE_IDENTITY_TRANSFORM
       B_APP_MIME_TYPE
       B_CLASS_FIELD
       B_CURSOR_I_BEAM
       B_CURSOR_SYSTEM_DEFAULT
       B_ELF_APP_MIME_TYPE
       B_EMPTY_STRING
       B_FILE_MIME_TYPE
       B_HAND_CURSOR
       B_I_BEAM_CURSOR
       B_MAIN_SCREEN_ID
       B_MIXED_COLORS
       B_NOTIFICATION_SENDER
       B_ORIGIN
       B_PE_APP_MIME_TYPE
       B_PEF_APP_MIME_TYPE
       B_PROPERTY_ENTRY
       B_PROPERTY_NAME_ENTRY
       B_RESOURCE_MIME_TYPE
       B_SOLID_HIGH
       B_SOLID_LOW
       B_SPECIFIER_ENTRY
       B_TRANSPARENT_32_BIT
       B_TRANSPARENT_8_BIT
       B_TRANSPARENT_COLOR
       B_TRANSPARENT_MAGIC_CMAP8
       B_TRANSPARENT_MAGIC_RGBA15
       B_TRANSPARENT_MAGIC_RGBA15_BIG
       B_TRANSPARENT_MAGIC_RGBA32
       B_TRANSPARENT_MAGIC_RGBA32_BIG
       B_URL_FILE
       B_URL_FTP
       B_URL_GOPHER
       B_URL_HTTP
       B_URL_HTTPS
       B_URL_MAILTO
       B_URL_NEWS
       B_URL_NNTP
       B_URL_RLOGIN
       B_URL_TELNET
       B_URL_TN3270
       B_URL_WAIS
       BAboutWindow::_ReservedAboutWindow1()
       BAboutWindow::_ReservedAboutWindow10()
       BAboutWindow::_ReservedAboutWindow11()
       BAboutWindow::_ReservedAboutWindow12()
       BAboutWindow::_ReservedAboutWindow13()
       BAboutWindow::_ReservedAboutWindow14()
       BAboutWindow::_ReservedAboutWindow15()
       BAboutWindow::_ReservedAboutWindow16()
       BAboutWindow::_ReservedAboutWindow17()
       BAboutWindow::_ReservedAboutWindow18()
       BAboutWindow::_ReservedAboutWindow19()
       BAboutWindow::_ReservedAboutWindow2()
       BAboutWindow::_ReservedAboutWindow20()
       BAboutWindow::_ReservedAboutWindow3()
       BAboutWindow::_ReservedAboutWindow4()
       BAboutWindow::_ReservedAboutWindow5()
       BAboutWindow::_ReservedAboutWindow6()
       BAboutWindow::_ReservedAboutWindow7()
       BAboutWindow::_ReservedAboutWindow8()
       BAboutWindow::_ReservedAboutWindow9()
       BAboutWindow::~BAboutWindow()
       BAboutWindow::~BAboutWindow()
       BAboutWindow::~BAboutWindow()
       BAboutWindow::AboutPosition(float, float)
       BAboutWindow::AddAuthors(char const**)
       BAboutWindow::AddCopyright(int, char const*, char const**)
       BAboutWindow::AddDescription(char const*)
       BAboutWindow::AddExtraInfo(char const*)
       BAboutWindow::AddSpecialThanks(char const**)
       BAboutWindow::AddText(char const*, char const**)
       BAboutWindow::AddVersionHistory(char const**)
       BAboutWindow::BAboutWindow(char const*, char const*)
       BAboutWindow::BAboutWindow(char const*, char const*)
       BAboutWindow::Icon()
       BAboutWindow::Name()
       BAboutWindow::SetIcon(BBitmap*)
       BAboutWindow::SetName(char const*)
       BAboutWindow::SetVersion(char const*)
       BAboutWindow::Show()
       BAboutWindow::Version()
       BAbstractLayout::_ReservedAbstractLayout1()
       BAbstractLayout::_ReservedAbstractLayout10()
       BAbstractLayout::_ReservedAbstractLayout2()
       BAbstractLayout::_ReservedAbstractLayout3()
       BAbstractLayout::_ReservedAbstractLayout4()
       BAbstractLayout::_ReservedAbstractLayout5()
       BAbstractLayout::_ReservedAbstractLayout6()
       BAbstractLayout::_ReservedAbstractLayout7()
       BAbstractLayout::_ReservedAbstractLayout8()
       BAbstractLayout::_ReservedAbstractLayout9()
       BAbstractLayout::~BAbstractLayout()
       BAbstractLayout::~BAbstractLayout()
       BAbstractLayout::~BAbstractLayout()
       BAbstractLayout::Alignment()
       BAbstractLayout::AllArchived(BMessage*) const
       BAbstractLayout::AllUnarchived(BMessage const*)
       BAbstractLayout::AncestorVisibilityChanged(bool)
       BAbstractLayout::Archive(BMessage*, bool) const
       BAbstractLayout::AttachedToLayout()
       BAbstractLayout::BAbstractLayout()
       BAbstractLayout::BAbstractLayout()
       BAbstractLayout::BAbstractLayout(BMessage*)
       BAbstractLayout::BAbstractLayout(BMessage*)
       BAbstractLayout::BaseAlignment()
       BAbstractLayout::BaseMaxSize()
       BAbstractLayout::BaseMinSize()
       BAbstractLayout::BasePreferredSize()
       BAbstractLayout::DetachedFromLayout(BLayout*)
       BAbstractLayout::Frame()
       BAbstractLayout::IsVisible()
       BAbstractLayout::ItemAdded(BLayoutItem*, int)
       BAbstractLayout::ItemArchived(BMessage*, BLayoutItem*, int) const
       BAbstractLayout::ItemRemoved(BLayoutItem*, int)
       BAbstractLayout::ItemUnarchived(BMessage const*, BLayoutItem*, int)
       BAbstractLayout::LayoutInvalidated(bool)
       BAbstractLayout::MaxSize()
       BAbstractLayout::MinSize()
       BAbstractLayout::OwnerChanged(BView*)
       BAbstractLayout::Perform(unsigned int, void*)
       BAbstractLayout::PreferredSize()
       BAbstractLayout::SetExplicitAlignment(BAlignment)
       BAbstractLayout::SetExplicitMaxSize(BSize)
       BAbstractLayout::SetExplicitMinSize(BSize)
       BAbstractLayout::SetExplicitPreferredSize(BSize)
       BAbstractLayout::SetFrame(BRect)
       BAbstractLayout::SetVisible(bool)
       BAbstractLayoutItem::_ReservedAbstractLayoutItem1()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem10()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem2()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem3()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem4()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem5()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem6()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem7()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem8()
       BAbstractLayoutItem::_ReservedAbstractLayoutItem9()
       BAbstractLayoutItem::~BAbstractLayoutItem()
       BAbstractLayoutItem::~BAbstractLayoutItem()
       BAbstractLayoutItem::~BAbstractLayoutItem()
       BAbstractLayoutItem::Alignment()
       BAbstractLayoutItem::AllArchived(BMessage*) const
       BAbstractLayoutItem::AllUnarchived(BMessage const*)
       BAbstractLayoutItem::AncestorVisibilityChanged(bool)
       BAbstractLayoutItem::Archive(BMessage*, bool) const
       BAbstractLayoutItem::AttachedToLayout()
       BAbstractLayoutItem::BAbstractLayoutItem()
       BAbstractLayoutItem::BAbstractLayoutItem()
       BAbstractLayoutItem::BAbstractLayoutItem(BMessage*)
       BAbstractLayoutItem::BAbstractLayoutItem(BMessage*)
       BAbstractLayoutItem::BaseAlignment()
       BAbstractLayoutItem::BaseMaxSize()
       BAbstractLayoutItem::BaseMinSize()
       BAbstractLayoutItem::BasePreferredSize()
       BAbstractLayoutItem::DetachedFromLayout(BLayout*)
       BAbstractLayoutItem::LayoutInvalidated(bool)
       BAbstractLayoutItem::MaxSize()
       BAbstractLayoutItem::MinSize()
       BAbstractLayoutItem::Perform(unsigned int, void*)
       BAbstractLayoutItem::PreferredSize()
       BAbstractLayoutItem::SetExplicitAlignment(BAlignment)
       BAbstractLayoutItem::SetExplicitMaxSize(BSize)
       BAbstractLayoutItem::SetExplicitMinSize(BSize)
       BAbstractLayoutItem::SetExplicitPreferredSize(BSize)
       BAbstractSpinner::_DrawLabel(BRect)
       BAbstractSpinner::_DrawTextView(BRect)
       BAbstractSpinner::_InitObject()
       BAbstractSpinner::_LayoutTextView()
       BAbstractSpinner::_ReservedAbstractSpinner1()
       BAbstractSpinner::_ReservedAbstractSpinner10()
       BAbstractSpinner::_ReservedAbstractSpinner11()
       BAbstractSpinner::_ReservedAbstractSpinner12()
       BAbstractSpinner::_ReservedAbstractSpinner13()
       BAbstractSpinner::_ReservedAbstractSpinner14()
       BAbstractSpinner::_ReservedAbstractSpinner15()
       BAbstractSpinner::_ReservedAbstractSpinner16()
       BAbstractSpinner::_ReservedAbstractSpinner17()
       BAbstractSpinner::_ReservedAbstractSpinner18()
       BAbstractSpinner::_ReservedAbstractSpinner19()
       BAbstractSpinner::_ReservedAbstractSpinner2()
       BAbstractSpinner::_ReservedAbstractSpinner20()
       BAbstractSpinner::_ReservedAbstractSpinner3()
       BAbstractSpinner::_ReservedAbstractSpinner4()
       BAbstractSpinner::_ReservedAbstractSpinner5()
       BAbstractSpinner::_ReservedAbstractSpinner6()
       BAbstractSpinner::_ReservedAbstractSpinner7()
       BAbstractSpinner::_ReservedAbstractSpinner8()
       BAbstractSpinner::_ReservedAbstractSpinner9()
       BAbstractSpinner::_UpdateFrame()
       BAbstractSpinner::_UpdateTextViewColors(bool)
       BAbstractSpinner::_ValidateLayoutData()
       BAbstractSpinner::~BAbstractSpinner()
       BAbstractSpinner::~BAbstractSpinner()
       BAbstractSpinner::~BAbstractSpinner()
       BAbstractSpinner::AllArchived(BMessage*) const
       BAbstractSpinner::AllUnarchived(BMessage const*)
       BAbstractSpinner::Archive(BMessage*, bool) const
       BAbstractSpinner::AttachedToWindow()
       BAbstractSpinner::BAbstractSpinner(BMessage*)
       BAbstractSpinner::BAbstractSpinner(BMessage*)
       BAbstractSpinner::BAbstractSpinner(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BAbstractSpinner::BAbstractSpinner(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BAbstractSpinner::BAbstractSpinner(char const*, char const*, BMessage*, unsigned int)
       BAbstractSpinner::BAbstractSpinner(char const*, char const*, BMessage*, unsigned int)
       BAbstractSpinner::CreateLabelLayoutItem()
       BAbstractSpinner::CreateTextViewLayoutItem()
       BAbstractSpinner::DoLayout()
       BAbstractSpinner::Draw(BRect)
       BAbstractSpinner::FrameResized(float, float)
       BAbstractSpinner::GetSupportedSuites(BMessage*)
       BAbstractSpinner::Instantiate(BMessage*)
       BAbstractSpinner::IsDecrementEnabled() const
       BAbstractSpinner::IsIncrementEnabled() const
       BAbstractSpinner::LabelLayoutItem::Archive(BMessage*, bool) const
       BAbstractSpinner::LabelLayoutItem::BaseAlignment()
       BAbstractSpinner::LabelLayoutItem::BaseMaxSize()
       BAbstractSpinner::LabelLayoutItem::BaseMinSize()
       BAbstractSpinner::LabelLayoutItem::BasePreferredSize()
       BAbstractSpinner::LabelLayoutItem::Frame()
       BAbstractSpinner::LabelLayoutItem::FrameInParent() const
       BAbstractSpinner::LabelLayoutItem::Instantiate(BMessage*)
       BAbstractSpinner::LabelLayoutItem::IsVisible()
       BAbstractSpinner::LabelLayoutItem::LabelLayoutItem(BAbstractSpinner*)
       BAbstractSpinner::LabelLayoutItem::LabelLayoutItem(BAbstractSpinner*)
       BAbstractSpinner::LabelLayoutItem::LabelLayoutItem(BMessage*)
       BAbstractSpinner::LabelLayoutItem::LabelLayoutItem(BMessage*)
       BAbstractSpinner::LabelLayoutItem::SetFrame(BRect)
       BAbstractSpinner::LabelLayoutItem::SetParent(BAbstractSpinner*)
       BAbstractSpinner::LabelLayoutItem::SetVisible(bool)
       BAbstractSpinner::LabelLayoutItem::View()
       BAbstractSpinner::LayoutAlignment()
       BAbstractSpinner::LayoutInvalidated(bool)
       BAbstractSpinner::MakeFocus(bool)
       BAbstractSpinner::MaxSize()
       BAbstractSpinner::MessageReceived(BMessage*)
       BAbstractSpinner::MinSize()
       BAbstractSpinner::PreferredSize()
       BAbstractSpinner::ResizeToPreferred()
       BAbstractSpinner::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BAbstractSpinner::SetAlignment(alignment)
       BAbstractSpinner::SetButtonStyle(spinner_button_style)
       BAbstractSpinner::SetDecrementEnabled(bool)
       BAbstractSpinner::SetDivider(float)
       BAbstractSpinner::SetEnabled(bool)
       BAbstractSpinner::SetFlags(unsigned int)
       BAbstractSpinner::SetIncrementEnabled(bool)
       BAbstractSpinner::SetLabel(char const*)
       BAbstractSpinner::TextView() const
       BAbstractSpinner::TextViewLayoutItem::Archive(BMessage*, bool) const
       BAbstractSpinner::TextViewLayoutItem::BaseAlignment()
       BAbstractSpinner::TextViewLayoutItem::BaseMaxSize()
       BAbstractSpinner::TextViewLayoutItem::BaseMinSize()
       BAbstractSpinner::TextViewLayoutItem::BasePreferredSize()
       BAbstractSpinner::TextViewLayoutItem::Frame()
       BAbstractSpinner::TextViewLayoutItem::FrameInParent() const
       BAbstractSpinner::TextViewLayoutItem::Instantiate(BMessage*)
       BAbstractSpinner::TextViewLayoutItem::IsVisible()
       BAbstractSpinner::TextViewLayoutItem::SetFrame(BRect)
       BAbstractSpinner::TextViewLayoutItem::SetParent(BAbstractSpinner*)
       BAbstractSpinner::TextViewLayoutItem::SetVisible(bool)
       BAbstractSpinner::TextViewLayoutItem::TextViewLayoutItem(BAbstractSpinner*)
       BAbstractSpinner::TextViewLayoutItem::TextViewLayoutItem(BAbstractSpinner*)
       BAbstractSpinner::TextViewLayoutItem::TextViewLayoutItem(BMessage*)
       BAbstractSpinner::TextViewLayoutItem::TextViewLayoutItem(BMessage*)
       BAbstractSpinner::TextViewLayoutItem::View()
       BAbstractSpinner::ValueChanged()
       BAbstractSpinner::WindowActivated(bool)
       BAffineTransform::~BAffineTransform()
       BAffineTransform::~BAffineTransform()
       BAffineTransform::~BAffineTransform()
       BAffineTransform::AffineRotation(double)
       BAffineTransform::AffineScaling(double, double)
       BAffineTransform::AffineScaling(double)
       BAffineTransform::AffineShearing(double, double)
       BAffineTransform::AffineTranslation(double, double)
       BAffineTransform::Apply(BPoint const&) const
       BAffineTransform::Apply(BPoint*, unsigned int) const
       BAffineTransform::Apply(BPoint*) const
       BAffineTransform::ApplyInverse(BPoint const&) const
       BAffineTransform::ApplyInverse(BPoint*, unsigned int) const
       BAffineTransform::ApplyInverse(BPoint*) const
       BAffineTransform::BAffineTransform()
       BAffineTransform::BAffineTransform()
       BAffineTransform::BAffineTransform(BAffineTransform const&)
       BAffineTransform::BAffineTransform(BAffineTransform const&)
       BAffineTransform::BAffineTransform(double, double, double, double, double, double)
       BAffineTransform::BAffineTransform(double, double, double, double, double, double)
       BAffineTransform::Flatten(void*, long) const
       BAffineTransform::FlattenedSize() const
       BAffineTransform::FlipX()
       BAffineTransform::FlipY()
       BAffineTransform::GetAffineParameters(double*, double*, double*, double*, double*, double*, double*) const
       BAffineTransform::GetScale(double*, double*) const
       BAffineTransform::GetScaleAbs(double*, double*) const
       BAffineTransform::GetTranslation(double*, double*) const
       BAffineTransform::Invert()
       BAffineTransform::IsDilation(double) const
       BAffineTransform::IsEqual(BAffineTransform const&, double) const
       BAffineTransform::IsFixedSize() const
       BAffineTransform::IsIdentity(double) const
       BAffineTransform::IsValid(double) const
       BAffineTransform::PreMultiply(BAffineTransform const&)
       BAffineTransform::Reset()
       BAffineTransform::RotateBy(BPoint const&, double)
       BAffineTransform::RotateByCopy(BPoint const&, double) const
       BAffineTransform::RotateByCopy(double) const
       BAffineTransform::Rotation() const
       BAffineTransform::Scale() const
       BAffineTransform::ScaleBy(BPoint const&, BPoint const&)
       BAffineTransform::ScaleBy(BPoint const&, double, double)
       BAffineTransform::ScaleBy(BPoint const&, double)
       BAffineTransform::ScaleBy(BPoint const&)
       BAffineTransform::ScaleByCopy(BPoint const&, BPoint const&) const
       BAffineTransform::ScaleByCopy(BPoint const&, double, double) const
       BAffineTransform::ScaleByCopy(BPoint const&, double) const
       BAffineTransform::ScaleByCopy(BPoint const&) const
       BAffineTransform::ScaleByCopy(double, double) const
       BAffineTransform::ScaleByCopy(double) const
       BAffineTransform::SetScale(double, double)
       BAffineTransform::SetScale(double)
       BAffineTransform::ShearBy(BPoint const&, BPoint const&)
       BAffineTransform::ShearBy(BPoint const&, double, double)
       BAffineTransform::ShearBy(BPoint const&)
       BAffineTransform::ShearByCopy(BPoint const&, BPoint const&) const
       BAffineTransform::ShearByCopy(BPoint const&, double, double) const
       BAffineTransform::ShearByCopy(BPoint const&) const
       BAffineTransform::ShearByCopy(double, double) const
       BAffineTransform::TranslateBy(BPoint const&)
       BAffineTransform::TranslateByCopy(BPoint const&) const
       BAffineTransform::TranslateByCopy(double, double) const
       BAffineTransform::TypeCode() const
       BAffineTransform::Unflatten(unsigned int, void const*, long)
       BAlert::_CreateButton(int, char const*)
       BAlert::_CreateTypeIcon()
       BAlert::_Init(char const*, char const*, char const*, char const*, button_width, button_spacing, alert_type)
       BAlert::_Prepare()
       BAlert::_ReservedAlert1()
       BAlert::_ReservedAlert2()
       BAlert::_ReservedAlert3()
       BAlert::~BAlert()
       BAlert::~BAlert()
       BAlert::~BAlert()
       BAlert::AddButton(char const*, char)
       BAlert::AlertPosition(float, float)
       BAlert::Archive(BMessage*, bool) const
       BAlert::BAlert()
       BAlert::BAlert()
       BAlert::BAlert(BMessage*)
       BAlert::BAlert(BMessage*)
       BAlert::BAlert(char const*, char const*, char const*, char const*, char const*, button_width, alert_type)
       BAlert::BAlert(char const*, char const*, char const*, char const*, char const*, button_width, alert_type)
       BAlert::BAlert(char const*, char const*, char const*, char const*, char const*, button_width, button_spacing, alert_type)
       BAlert::BAlert(char const*, char const*, char const*, char const*, char const*, button_width, button_spacing, alert_type)
       BAlert::ButtonAt(int) const
       BAlert::CountButtons() const
       BAlert::DispatchMessage(BMessage*, BHandler*)
       BAlert::FrameResized(float, float)
       BAlert::GetSupportedSuites(BMessage*)
       BAlert::Go()
       BAlert::Go(BInvoker*)
       BAlert::Instantiate(BMessage*)
       BAlert::MessageReceived(BMessage*)
       BAlert::Perform(unsigned int, void*)
       BAlert::Quit()
       BAlert::QuitRequested()
       BAlert::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BAlert::SetButtonSpacing(button_spacing)
       BAlert::SetButtonWidth(button_width)
       BAlert::SetIcon(BBitmap*)
       BAlert::SetShortcut(int, char)
       BAlert::SetText(char const*)
       BAlert::SetType(alert_type)
       BAlert::Shortcut(int) const
       BAlert::TextView() const
       BAlert::Type() const
       BAlignment::RelativeHorizontal() const
       BAlignment::RelativeVertical() const
       BAppFileInfo::_ReadData(char const*, int, unsigned int, void*, unsigned long, unsigned long&, void**) const
       BAppFileInfo::_RemoveData(char const*, unsigned int)
       BAppFileInfo::_ReservedAppFileInfo1()
       BAppFileInfo::_ReservedAppFileInfo2()
       BAppFileInfo::_ReservedAppFileInfo3()
       BAppFileInfo::_WriteData(char const*, int, unsigned int, void const*, unsigned long, bool)
       BAppFileInfo::~BAppFileInfo()
       BAppFileInfo::~BAppFileInfo()
       BAppFileInfo::~BAppFileInfo()
       BAppFileInfo::BAppFileInfo()
       BAppFileInfo::BAppFileInfo()
       BAppFileInfo::BAppFileInfo(BFile*)
       BAppFileInfo::BAppFileInfo(BFile*)
       BAppFileInfo::GetAppFlags(unsigned int*) const
       BAppFileInfo::GetCatalogEntry(char*) const
       BAppFileInfo::GetIcon(BBitmap*, icon_size) const
       BAppFileInfo::GetIcon(unsigned char**, unsigned long*) const
       BAppFileInfo::GetIconForType(char const*, BBitmap*, icon_size) const
       BAppFileInfo::GetIconForType(char const*, unsigned char**, unsigned long*) const
       BAppFileInfo::GetMetaMime(BMimeType*) const
       BAppFileInfo::GetSignature(char*) const
       BAppFileInfo::GetSupportedTypes(BMessage*) const
       BAppFileInfo::GetType(char*) const
       BAppFileInfo::GetVersionInfo(version_info*, version_kind) const
       BAppFileInfo::IsSupportedType(char const*) const
       BAppFileInfo::IsUsingAttributes() const
       BAppFileInfo::IsUsingResources() const
       BAppFileInfo::RemoveAppFlags()
       BAppFileInfo::SetAppFlags(unsigned int)
       BAppFileInfo::SetCatalogEntry(char const*)
       BAppFileInfo::SetIcon(BBitmap const*, icon_size, bool)
       BAppFileInfo::SetIcon(BBitmap const*, icon_size)
       BAppFileInfo::SetIcon(unsigned char const*, unsigned long, bool)
       BAppFileInfo::SetIcon(unsigned char const*, unsigned long)
       BAppFileInfo::SetIconForType(char const*, BBitmap const*, icon_size, bool)
       BAppFileInfo::SetIconForType(char const*, BBitmap const*, icon_size)
       BAppFileInfo::SetIconForType(char const*, unsigned char const*, unsigned long, bool)
       BAppFileInfo::SetIconForType(char const*, unsigned char const*, unsigned long)
       BAppFileInfo::SetInfoLocation(info_location)
       BAppFileInfo::SetSignature(char const*)
       BAppFileInfo::SetSupportedTypes(BMessage const*, bool, bool)
       BAppFileInfo::SetSupportedTypes(BMessage const*, bool)
       BAppFileInfo::SetSupportedTypes(BMessage const*)
       BAppFileInfo::SetTo(BFile*)
       BAppFileInfo::SetType(char const*)
       BAppFileInfo::SetVersionInfo(version_info const*, version_kind)
       BAppFileInfo::Supports(BMimeType*) const
       BApplication::_ArgvReceived(BMessage*)
       BApplication::_ConnectToServer()
       BApplication::_CountWindows(bool) const
       BApplication::_GetPort(char const*)
       BApplication::_InitAppResources()
       BApplication::_InitData(char const*, bool, int*)
       BApplication::_InitGUIContext()
       BApplication::_QuitAllWindows(bool)
       BApplication::_ReconnectToServer()
       BApplication::_ReservedApplication1()
       BApplication::_ReservedApplication2()
       BApplication::_ReservedApplication3()
       BApplication::_ReservedApplication4()
       BApplication::_ReservedApplication5()
       BApplication::_ReservedApplication6()
       BApplication::_ReservedApplication7()
       BApplication::_ReservedApplication8()
       BApplication::_SetupServerAllocator()
       BApplication::_WindowAt(unsigned int, bool) const
       BApplication::_WindowQuitLoop(bool, bool)
       BApplication::~BApplication()
       BApplication::~BApplication()
       BApplication::~BApplication()
       BApplication::AboutRequested()
       BApplication::AppActivated(bool)
       BApplication::AppResources()
       BApplication::Archive(BMessage*, bool) const
       BApplication::ArgvReceived(int, char**)
       BApplication::BApplication(BMessage*)
       BApplication::BApplication(BMessage*)
       BApplication::BApplication(char const*, char const*, int, bool, int*)
       BApplication::BApplication(char const*, char const*, int, bool, int*)
       BApplication::BApplication(char const*, int*)
       BApplication::BApplication(char const*, int*)
       BApplication::BApplication(char const*)
       BApplication::BApplication(char const*)
       BApplication::BeginRectTracking(BRect, bool)
       BApplication::CountLoopers() const
       BApplication::CountWindows() const
       BApplication::DispatchMessage(BMessage*, BHandler*)
       BApplication::EndRectTracking()
       BApplication::GetAppInfo(app_info*) const
       BApplication::GetSupportedSuites(BMessage*)
       BApplication::HideCursor()
       BApplication::InitCheck() const
       BApplication::InitialWorkspace()
       BApplication::Instantiate(BMessage*)
       BApplication::IsCursorHidden() const
       BApplication::IsLaunching() const
       BApplication::LooperAt(int) const
       BApplication::MessageReceived(BMessage*)
       BApplication::ObscureCursor()
       BApplication::Perform(unsigned int, void*)
       BApplication::Pulse()
       BApplication::Quit()
       BApplication::QuitRequested()
       BApplication::ReadyToRun()
       BApplication::RefsReceived(BMessage*)
       BApplication::RegisterLooper(BLooper*)
       BApplication::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BApplication::Run()
       BApplication::sAppResources
       BApplication::ScriptReceived(BMessage*, int, BMessage*, int, char const*)
       BApplication::SetCursor(BCursor const*, bool)
       BApplication::SetCursor(void const*)
       BApplication::SetPulseRate(long)
       BApplication::ShowCursor()
       BApplication::Signature() const
       BApplication::UnregisterLooper(BLooper*)
       BApplication::WindowAt(int) const
       BArchivable::_ReservedArchivable1()
       BArchivable::_ReservedArchivable2()
       BArchivable::_ReservedArchivable3()
       BArchivable::~BArchivable()
       BArchivable::~BArchivable()
       BArchivable::~BArchivable()
       BArchivable::AllArchived(BMessage*) const
       BArchivable::AllUnarchived(BMessage const*)
       BArchivable::Archive(BMessage*, bool) const
       BArchivable::BArchivable()
       BArchivable::BArchivable()
       BArchivable::BArchivable(BMessage*)
       BArchivable::BArchivable(BMessage*)
       BArchivable::Instantiate(BMessage*)
       BArchivable::Perform(unsigned int, void*)
       BArchiver::~BArchiver()
       BArchiver::~BArchiver()
       BArchiver::AddArchivable(char const*, BArchivable*, bool)
       BArchiver::ArchiveMessage() const
       BArchiver::BArchiver(BMessage*)
       BArchiver::BArchiver(BMessage*)
       BArchiver::Finish(int)
       BArchiver::GetTokenForArchivable(BArchivable*, bool, int&)
       BArchiver::IsArchived(BArchivable*)
       BArchiver::RegisterArchivable(BArchivable const*)
       BBitmap::_AssertPointer()
       BBitmap::_CleanUp()
       BBitmap::_InitObject(BRect, color_space, unsigned int, int, screen_id)
       BBitmap::_ReconnectToAppServer()
       BBitmap::_ReservedBitmap1()
       BBitmap::_ReservedBitmap2()
       BBitmap::_ReservedBitmap3()
       BBitmap::_ServerToken() const
       BBitmap::~BBitmap()
       BBitmap::~BBitmap()
       BBitmap::~BBitmap()
       BBitmap::AddChild(BView*)
       BBitmap::Archive(BMessage*, bool) const
       BBitmap::Area() const
       BBitmap::BBitmap(BBitmap const*, bool, bool)
       BBitmap::BBitmap(BBitmap const*, bool, bool)
       BBitmap::BBitmap(BBitmap const&, unsigned int)
       BBitmap::BBitmap(BBitmap const&, unsigned int)
       BBitmap::BBitmap(BBitmap const&)
       BBitmap::BBitmap(BBitmap const&)
       BBitmap::BBitmap(BMessage*)
       BBitmap::BBitmap(BMessage*)
       BBitmap::BBitmap(BRect, color_space, bool, bool)
       BBitmap::BBitmap(BRect, color_space, bool, bool)
       BBitmap::BBitmap(BRect, unsigned int, color_space, int, screen_id)
       BBitmap::BBitmap(BRect, unsigned int, color_space, int, screen_id)
       BBitmap::Bits() const
       BBitmap::BitsLength() const
       BBitmap::Bounds() const
       BBitmap::BytesPerRow() const
       BBitmap::ChildAt(int) const
       BBitmap::ColorSpace() const
       BBitmap::CountChildren() const
       BBitmap::FindView(BPoint) const
       BBitmap::FindView(char const*) const
       BBitmap::Flags() const
       BBitmap::GetOverlayRestrictions(overlay_restrictions*) const
       BBitmap::ImportBits(BBitmap const*, BPoint, BPoint, BSize)
       BBitmap::ImportBits(BBitmap const*, BPoint, BPoint, int, int)
       BBitmap::ImportBits(BBitmap const*)
       BBitmap::ImportBits(void const*, int, int, color_space, BPoint, BPoint, BSize)
       BBitmap::ImportBits(void const*, int, int, color_space, BPoint, BPoint, int, int)
       BBitmap::ImportBits(void const*, int, int, int, color_space)
       BBitmap::InitCheck() const
       BBitmap::Instantiate(BMessage*)
       BBitmap::IsLocked() const
       BBitmap::IsValid() const
       BBitmap::Lock()
       BBitmap::LockBits(unsigned int*)
       BBitmap::operator=(BBitmap const&)
       BBitmap::Perform(unsigned int, void*)
       BBitmap::Private::Private(BBitmap*)
       BBitmap::Private::Private(BBitmap*)
       BBitmap::Private::ReconnectToAppServer()
       BBitmap::RemoveChild(BView*)
       BBitmap::SetBits(void const*, int, int, color_space)
       BBitmap::Unlock()
       BBitmap::UnlockBits()
       BBlockCache::_ReservedBlockCache1()
       BBlockCache::_ReservedBlockCache2()
       BBlockCache::~BBlockCache()
       BBlockCache::~BBlockCache()
       BBlockCache::~BBlockCache()
       BBlockCache::BBlockCache(unsigned int, unsigned long, unsigned int)
       BBlockCache::BBlockCache(unsigned int, unsigned long, unsigned int)
       BBlockCache::Get(unsigned long)
       BBlockCache::Save(void*, unsigned long)
       BBox::_Child() const
       BBox::_ClearLabel()
       BBox::_DrawFancy(BRect)
       BBox::_DrawPlain(BRect)
       BBox::_InitObject(BMessage*)
       BBox::_ReservedBox1()
       BBox::_ReservedBox2()
       BBox::_ValidateLayoutData()
       BBox::~BBox()
       BBox::~BBox()
       BBox::~BBox()
       BBox::AllAttached()
       BBox::AllDetached()
       BBox::Archive(BMessage*, bool) const
       BBox::AttachedToWindow()
       BBox::BBox(BMessage*)
       BBox::BBox(BMessage*)
       BBox::BBox(border_style, BView*)
       BBox::BBox(border_style, BView*)
       BBox::BBox(BRect, char const*, unsigned int, unsigned int, border_style)
       BBox::BBox(BRect, char const*, unsigned int, unsigned int, border_style)
       BBox::BBox(char const*, unsigned int, border_style, BView*)
       BBox::BBox(char const*, unsigned int, border_style, BView*)
       BBox::Border() const
       BBox::DetachedFromWindow()
       BBox::DoLayout()
       BBox::Draw(BRect)
       BBox::FrameMoved(BPoint)
       BBox::FrameResized(float, float)
       BBox::GetPreferredSize(float*, float*)
       BBox::GetSupportedSuites(BMessage*)
       BBox::InnerFrame()
       BBox::Instantiate(BMessage*)
       BBox::InvalidateLayout(bool)
       BBox::Label() const
       BBox::LabelView() const
       BBox::LayoutAlignment()
       BBox::LayoutInvalidated(bool)
       BBox::MakeFocus(bool)
       BBox::MaxSize()
       BBox::MessageReceived(BMessage*)
       BBox::MinSize()
       BBox::MouseDown(BPoint)
       BBox::MouseMoved(BPoint, unsigned int, BMessage const*)
       BBox::MouseUp(BPoint)
       BBox::operator=(BBox const&)
       BBox::Perform(unsigned int, void*)
       BBox::PreferredSize()
       BBox::ResizeToPreferred()
       BBox::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BBox::SetBorder(border_style)
       BBox::SetLabel(BView*)
       BBox::SetLabel(char const*)
       BBox::TopBorderOffset()
       BBox::WindowActivated(bool)
       BBufferedDataIO::_Reserved0(void*)
       BBufferedDataIO::_Reserved1(void*)
       BBufferedDataIO::_Reserved2(void*)
       BBufferedDataIO::_Reserved3(void*)
       BBufferedDataIO::_Reserved4(void*)
       BBufferedDataIO::~BBufferedDataIO()
       BBufferedDataIO::~BBufferedDataIO()
       BBufferedDataIO::~BBufferedDataIO()
       BBufferedDataIO::BBufferedDataIO(BDataIO&, unsigned long, bool, bool)
       BBufferedDataIO::BBufferedDataIO(BDataIO&, unsigned long, bool, bool)
       BBufferedDataIO::BufferSize() const
       BBufferedDataIO::Flush()
       BBufferedDataIO::InitCheck() const
       BBufferedDataIO::OwnsStream() const
       BBufferedDataIO::Read(void*, unsigned long)
       BBufferedDataIO::SetOwnsStream(bool)
       BBufferedDataIO::Stream() const
       BBufferedDataIO::Write(void const*, unsigned long)
       BBufferIO::_Reserved_BufferIO_0(void*)
       BBufferIO::_Reserved_BufferIO_1(void*)
       BBufferIO::_Reserved_BufferIO_2(void*)
       BBufferIO::_Reserved_BufferIO_3(void*)
       BBufferIO::_Reserved_BufferIO_4(void*)
       BBufferIO::~BBufferIO()
       BBufferIO::~BBufferIO()
       BBufferIO::~BBufferIO()
       BBufferIO::BBufferIO(BPositionIO*, unsigned long, bool)
       BBufferIO::BBufferIO(BPositionIO*, unsigned long, bool)
       BBufferIO::BufferSize() const
       BBufferIO::Flush()
       BBufferIO::OwnsStream() const
       BBufferIO::Position() const
       BBufferIO::PrintToStream() const
       BBufferIO::ReadAt(long, void*, unsigned long)
       BBufferIO::Seek(long, unsigned int)
       BBufferIO::SetOwnsStream(bool)
       BBufferIO::SetSize(long)
       BBufferIO::Stream() const
       BBufferIO::WriteAt(long, void const*, unsigned long)
       BButton::_PopUpRect() const
       BButton::_ReservedButton1()
       BButton::_ReservedButton2()
       BButton::_ReservedButton3()
       BButton::_ValidatePreferredSize()
       BButton::~BButton()
       BButton::~BButton()
       BButton::~BButton()
       BButton::AllAttached()
       BButton::AllDetached()
       BButton::Archive(BMessage*, bool) const
       BButton::AttachedToWindow()
       BButton::BButton(BMessage*)
       BButton::BButton(BMessage*)
       BButton::BButton(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BButton::BButton(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BButton::BButton(char const*, BMessage*)
       BButton::BButton(char const*, BMessage*)
       BButton::BButton(char const*, char const*, BMessage*, unsigned int)
       BButton::BButton(char const*, char const*, BMessage*, unsigned int)
       BButton::Behavior() const
       BButton::DetachedFromWindow()
       BButton::Draw(BRect)
       BButton::FrameMoved(BPoint)
       BButton::FrameResized(float, float)
       BButton::GetPreferredSize(float*, float*)
       BButton::GetSupportedSuites(BMessage*)
       BButton::Instantiate(BMessage*)
       BButton::InvalidateLayout(bool)
       BButton::Invoke(BMessage*)
       BButton::IsDefault() const
       BButton::IsFlat() const
       BButton::KeyDown(char const*, int)
       BButton::LayoutInvalidated(bool)
       BButton::MakeDefault(bool)
       BButton::MakeFocus(bool)
       BButton::MaxSize()
       BButton::MessageReceived(BMessage*)
       BButton::MinSize()
       BButton::MouseDown(BPoint)
       BButton::MouseMoved(BPoint, unsigned int, BMessage const*)
       BButton::MouseUp(BPoint)
       BButton::operator=(BButton const&)
       BButton::Perform(unsigned int, void*)
       BButton::PopUpMessage() const
       BButton::PreferredSize()
       BButton::ResizeToPreferred()
       BButton::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BButton::SetBehavior(BButton::BBehavior)
       BButton::SetFlat(bool)
       BButton::SetIcon(BBitmap const*, unsigned int)
       BButton::SetLabel(char const*)
       BButton::SetPopUpMessage(BMessage*)
       BButton::SetValue(int)
       BButton::WindowActivated(bool)
       BCardLayout::_ReservedCardLayout1()
       BCardLayout::_ReservedCardLayout10()
       BCardLayout::_ReservedCardLayout2()
       BCardLayout::_ReservedCardLayout3()
       BCardLayout::_ReservedCardLayout4()
       BCardLayout::_ReservedCardLayout5()
       BCardLayout::_ReservedCardLayout6()
       BCardLayout::_ReservedCardLayout7()
       BCardLayout::_ReservedCardLayout8()
       BCardLayout::_ReservedCardLayout9()
       BCardLayout::_ValidateMinMax()
       BCardLayout::~BCardLayout()
       BCardLayout::~BCardLayout()
       BCardLayout::~BCardLayout()
       BCardLayout::AllArchived(BMessage*) const
       BCardLayout::AllUnarchived(BMessage const*)
       BCardLayout::Archive(BMessage*, bool) const
       BCardLayout::BaseAlignment()
       BCardLayout::BaseMaxSize()
       BCardLayout::BaseMinSize()
       BCardLayout::BasePreferredSize()
       BCardLayout::BCardLayout()
       BCardLayout::BCardLayout()
       BCardLayout::BCardLayout(BMessage*)
       BCardLayout::BCardLayout(BMessage*)
       BCardLayout::DoLayout()
       BCardLayout::GetHeightForWidth(float, float*, float*, float*)
       BCardLayout::HasHeightForWidth()
       BCardLayout::Instantiate(BMessage*)
       BCardLayout::ItemAdded(BLayoutItem*, int)
       BCardLayout::ItemArchived(BMessage*, BLayoutItem*, int) const
       BCardLayout::ItemRemoved(BLayoutItem*, int)
       BCardLayout::ItemUnarchived(BMessage const*, BLayoutItem*, int)
       BCardLayout::LayoutInvalidated(bool)
       BCardLayout::Perform(unsigned int, void*)
       BCardLayout::SetVisibleItem(BLayoutItem*)
       BCardLayout::SetVisibleItem(int)
       BCardLayout::VisibleIndex() const
       BCardLayout::VisibleItem() const
       BCardView::_ReservedCardView1()
       BCardView::_ReservedCardView10()
       BCardView::_ReservedCardView2()
       BCardView::_ReservedCardView3()
       BCardView::_ReservedCardView4()
       BCardView::_ReservedCardView5()
       BCardView::_ReservedCardView6()
       BCardView::_ReservedCardView7()
       BCardView::_ReservedCardView8()
       BCardView::_ReservedCardView9()
       BCardView::~BCardView()
       BCardView::~BCardView()
       BCardView::~BCardView()
       BCardView::BCardView()
       BCardView::BCardView()
       BCardView::BCardView(BMessage*)
       BCardView::BCardView(BMessage*)
       BCardView::BCardView(char const*)
       BCardView::BCardView(char const*)
       BCardView::CardLayout() const
       BCardView::Instantiate(BMessage*)
       BCardView::Perform(unsigned int, void*)
       BCardView::SetLayout(BLayout*)
       BCatalog::~BCatalog()
       BCatalog::~BCatalog()
       BCatalog::~BCatalog()
       BCatalog::BCatalog()
       BCatalog::BCatalog()
       BCatalog::BCatalog(char const*, char const*)
       BCatalog::BCatalog(char const*, char const*)
       BCatalog::BCatalog(entry_ref const&, char const*, unsigned int)
       BCatalog::BCatalog(entry_ref const&, char const*, unsigned int)
       BCatalog::CountItems() const
       BCatalog::GetData(char const*, BMessage*)
       BCatalog::GetData(unsigned int, BMessage*)
       BCatalog::GetFingerprint(unsigned int*)
       BCatalog::GetLanguage(BString*)
       BCatalog::GetSignature(BString*)
       BCatalog::GetString(char const*, char const*, char const*)
       BCatalog::GetString(unsigned int)
       BCatalog::InitCheck() const
       BCatalog::SetTo(char const*, char const*)
       BCatalog::SetTo(entry_ref const&, char const*, unsigned int)
       BCatalogData::~BCatalogData()
       BCatalogData::~BCatalogData()
       BCatalogData::~BCatalogData()
       BCatalogData::BCatalogData(char const*, char const*, unsigned int)
       BCatalogData::BCatalogData(char const*, char const*, unsigned int)
       BCatalogData::CanHaveData() const
       BCatalogData::CanWriteData() const
       BCatalogData::CountItems() const
       BCatalogData::GetData(char const*, BMessage*)
       BCatalogData::GetData(unsigned int, BMessage*)
       BCatalogData::InitCheck() const
       BCatalogData::MakeEmpty()
       BCatalogData::ReadFromAttribute(entry_ref const&)
       BCatalogData::ReadFromFile(char const*)
       BCatalogData::ReadFromResource(entry_ref const&)
       BCatalogData::SetData(char const*, BMessage*)
       BCatalogData::SetData(unsigned int, BMessage*)
       BCatalogData::SetNext(BCatalogData*)
       BCatalogData::SetString(char const*, char const*, char const*, char const*)
       BCatalogData::SetString(int, char const*)
       BCatalogData::UpdateFingerprint()
       BCatalogData::WriteToAttribute(entry_ref const&)
       BCatalogData::WriteToFile(char const*)
       BCatalogData::WriteToResource(entry_ref const&)
       BChannelControl::_Reserverd_ChannelControl_0(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_1(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_10(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_11(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_2(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_3(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_4(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_5(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_6(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_7(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_8(void*, ...)
       BChannelControl::_Reserverd_ChannelControl_9(void*, ...)
       BChannelControl::~BChannelControl()
       BChannelControl::~BChannelControl()
       BChannelControl::~BChannelControl()
       BChannelControl::Archive(BMessage*, bool) const
       BChannelControl::AttachedToWindow()
       BChannelControl::BChannelControl(BMessage*)
       BChannelControl::BChannelControl(BMessage*)
       BChannelControl::BChannelControl(BRect, char const*, char const*, BMessage*, int, unsigned int, unsigned int)
       BChannelControl::BChannelControl(BRect, char const*, char const*, BMessage*, int, unsigned int, unsigned int)
       BChannelControl::BChannelControl(char const*, char const*, BMessage*, int, unsigned int)
       BChannelControl::BChannelControl(char const*, char const*, BMessage*, int, unsigned int)
       BChannelControl::CountChannels() const
       BChannelControl::CurrentChannel() const
       BChannelControl::DetachedFromWindow()
       BChannelControl::FrameResized(float, float)
       BChannelControl::GetLimits(int*, int*) const
       BChannelControl::GetLimitsFor(int, int, int*, int*) const
       BChannelControl::GetLimitsFor(int, int*, int*) const
       BChannelControl::GetSupportedSuites(BMessage*)
       BChannelControl::GetValue(int*, int, int) const
       BChannelControl::Invoke(BMessage*)
       BChannelControl::InvokeChannel(BMessage*, int, int, bool const*)
       BChannelControl::InvokeNotifyChannel(BMessage*, unsigned int, int, int, bool const*)
       BChannelControl::MaxLimitLabel() const
       BChannelControl::MaxLimitLabelFor(int) const
       BChannelControl::MessageReceived(BMessage*)
       BChannelControl::MinLimitLabel() const
       BChannelControl::MinLimitLabelFor(int) const
       BChannelControl::ModificationMessage() const
       BChannelControl::ResizeToPreferred()
       BChannelControl::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BChannelControl::SetAllValue(int)
       BChannelControl::SetChannelCount(int)
       BChannelControl::SetCurrentChannel(int)
       BChannelControl::SetFont(BFont const*, unsigned int)
       BChannelControl::SetLimitLabels(char const*, char const*)
       BChannelControl::SetLimitLabelsFor(int, char const*, char const*)
       BChannelControl::SetLimitLabelsFor(int, int, char const*, char const*)
       BChannelControl::SetLimits(int, int)
       BChannelControl::SetLimitsFor(int, int, int const*, int const*)
       BChannelControl::SetLimitsFor(int, int, int)
       BChannelControl::SetModificationMessage(BMessage*)
       BChannelControl::SetValue(int, int, int const*)
       BChannelControl::SetValue(int)
       BChannelControl::SetValueFor(int, int)
       BChannelControl::StuffValues(int, int, int const*)
       BChannelControl::ValueFor(int) const
       BChannelSlider::_DrawGrooveFrame(BView*, BRect const&)
       BChannelSlider::_DrawThumbs()
       BChannelSlider::_FinishChange(bool)
       BChannelSlider::_InitData()
       BChannelSlider::_MouseMovedCommon(BPoint, BPoint)
       BChannelSlider::_Reserved_BChannelSlider_0(void*, ...)
       BChannelSlider::_Reserved_BChannelSlider_1(void*, ...)
       BChannelSlider::_Reserved_BChannelSlider_2(void*, ...)
       BChannelSlider::_Reserved_BChannelSlider_3(void*, ...)
       BChannelSlider::_Reserved_BChannelSlider_4(void*, ...)
       BChannelSlider::_Reserved_BChannelSlider_5(void*, ...)
       BChannelSlider::_Reserved_BChannelSlider_6(void*, ...)
       BChannelSlider::_Reserved_BChannelSlider_7(void*, ...)
       BChannelSlider::_UpdateFontDimens()
       BChannelSlider::~BChannelSlider()
       BChannelSlider::~BChannelSlider()
       BChannelSlider::~BChannelSlider()
       BChannelSlider::AllAttached()
       BChannelSlider::AllDetached()
       BChannelSlider::Archive(BMessage*, bool) const
       BChannelSlider::AttachedToWindow()
       BChannelSlider::BChannelSlider(BMessage*)
       BChannelSlider::BChannelSlider(BMessage*)
       BChannelSlider::BChannelSlider(BRect, char const*, char const*, BMessage*, int, unsigned int, unsigned int)
       BChannelSlider::BChannelSlider(BRect, char const*, char const*, BMessage*, int, unsigned int, unsigned int)
       BChannelSlider::BChannelSlider(BRect, char const*, char const*, BMessage*, orientation, int, unsigned int, unsigned int)
       BChannelSlider::BChannelSlider(BRect, char const*, char const*, BMessage*, orientation, int, unsigned int, unsigned int)
       BChannelSlider::BChannelSlider(char const*, char const*, BMessage*, orientation, int, unsigned int)
       BChannelSlider::BChannelSlider(char const*, char const*, BMessage*, orientation, int, unsigned int)
       BChannelSlider::DetachedFromWindow()
       BChannelSlider::Draw(BRect)
       BChannelSlider::DrawChannel(BView*, int, BRect, bool)
       BChannelSlider::DrawGroove(BView*, int, BPoint, BPoint)
       BChannelSlider::DrawThumb(BView*, int, BPoint, bool)
       BChannelSlider::FrameResized(float, float)
       BChannelSlider::GetPreferredSize(float*, float*)
       BChannelSlider::GetSupportedSuites(BMessage*)
       BChannelSlider::Instantiate(BMessage*)
       BChannelSlider::KeyDown(char const*, int)
       BChannelSlider::KeyUp(char const*, int)
       BChannelSlider::MakeFocus(bool)
       BChannelSlider::MaxChannelCount() const
       BChannelSlider::MessageReceived(BMessage*)
       BChannelSlider::MouseDown(BPoint)
       BChannelSlider::MouseMoved(BPoint, unsigned int, BMessage const*)
       BChannelSlider::MouseUp(BPoint)
       BChannelSlider::Orientation() const
       BChannelSlider::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BChannelSlider::SetEnabled(bool)
       BChannelSlider::SetFont(BFont const*, unsigned int)
       BChannelSlider::SetOrientation(orientation)
       BChannelSlider::SupportsIndividualLimits() const
       BChannelSlider::ThumbDeltaFor(int)
       BChannelSlider::ThumbFor(int, bool)
       BChannelSlider::ThumbFrameFor(int)
       BChannelSlider::ThumbRangeFor(int)
       BChannelSlider::WindowActivated(bool)
       BCheckBox::_CheckBoxFrame() const
       BCheckBox::_NextState() const
       BCheckBox::_ReservedCheckBox1()
       BCheckBox::_ReservedCheckBox2()
       BCheckBox::_ReservedCheckBox3()
       BCheckBox::_ValidatePreferredSize()
       BCheckBox::~BCheckBox()
       BCheckBox::~BCheckBox()
       BCheckBox::~BCheckBox()
       BCheckBox::AllAttached()
       BCheckBox::AllDetached()
       BCheckBox::Archive(BMessage*, bool) const
       BCheckBox::AttachedToWindow()
       BCheckBox::BCheckBox(BMessage*)
       BCheckBox::BCheckBox(BMessage*)
       BCheckBox::BCheckBox(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BCheckBox::BCheckBox(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BCheckBox::BCheckBox(char const*, BMessage*)
       BCheckBox::BCheckBox(char const*, BMessage*)
       BCheckBox::BCheckBox(char const*, char const*, BMessage*, unsigned int)
       BCheckBox::BCheckBox(char const*, char const*, BMessage*, unsigned int)
       BCheckBox::DetachedFromWindow()
       BCheckBox::Draw(BRect)
       BCheckBox::FrameMoved(BPoint)
       BCheckBox::FrameResized(float, float)
       BCheckBox::GetPreferredSize(float*, float*)
       BCheckBox::GetSupportedSuites(BMessage*)
       BCheckBox::Instantiate(BMessage*)
       BCheckBox::InvalidateLayout(bool)
       BCheckBox::Invoke(BMessage*)
       BCheckBox::IsPartialStateToOff() const
       BCheckBox::KeyDown(char const*, int)
       BCheckBox::LayoutAlignment()
       BCheckBox::LayoutInvalidated(bool)
       BCheckBox::MakeFocus(bool)
       BCheckBox::MaxSize()
       BCheckBox::MessageReceived(BMessage*)
       BCheckBox::MinSize()
       BCheckBox::MouseDown(BPoint)
       BCheckBox::MouseMoved(BPoint, unsigned int, BMessage const*)
       BCheckBox::MouseUp(BPoint)
       BCheckBox::operator=(BCheckBox const&)
       BCheckBox::Perform(unsigned int, void*)
       BCheckBox::PreferredSize()
       BCheckBox::ResizeToPreferred()
       BCheckBox::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BCheckBox::SetIcon(BBitmap const*, unsigned int)
       BCheckBox::SetPartialStateToOff(bool)
       BCheckBox::SetValue(int)
       BCheckBox::WindowActivated(bool)
       BClipboard::_AssertLocked() const
       BClipboard::_DownloadFromSystem(bool)
       BClipboard::_ReservedClipboard1()
       BClipboard::_ReservedClipboard2()
       BClipboard::_ReservedClipboard3()
       BClipboard::~BClipboard()
       BClipboard::~BClipboard()
       BClipboard::~BClipboard()
       BClipboard::BClipboard(BClipboard const&)
       BClipboard::BClipboard(BClipboard const&)
       BClipboard::BClipboard(char const*, bool)
       BClipboard::BClipboard(char const*, bool)
       BClipboard::Clear()
       BClipboard::Commit()
       BClipboard::Commit(bool)
       BClipboard::Data() const
       BClipboard::DataSource() const
       BClipboard::IsLocked() const
       BClipboard::LocalCount() const
       BClipboard::Lock()
       BClipboard::Name() const
       BClipboard::operator=(BClipboard const&)
       BClipboard::Revert()
       BClipboard::StartWatching(BMessenger)
       BClipboard::StopWatching(BMessenger)
       BClipboard::SystemCount() const
       BClipboard::Unlock()
       BCollator::~BCollator()
       BCollator::~BCollator()
       BCollator::~BCollator()
       BCollator::Archive(BMessage*, bool) const
       BCollator::BCollator()
       BCollator::BCollator()
       BCollator::BCollator(BCollator const&)
       BCollator::BCollator(BCollator const&)
       BCollator::BCollator(BMessage*)
       BCollator::BCollator(BMessage*)
       BCollator::BCollator(char const*, signed char, bool)
       BCollator::BCollator(char const*, signed char, bool)
       BCollator::Compare(char const*, char const*) const
       BCollator::GetSortKey(char const*, BString*) const
       BCollator::IgnorePunctuation() const
       BCollator::Instantiate(BMessage*)
       BCollator::operator=(BCollator const&)
       BCollator::SetIgnorePunctuation(bool)
       BCollator::SetNumericSorting(bool)
       BCollator::SetStrength(signed char) const
       BColorControl::_DrawColorArea(BView*, BRect)
       BColorControl::_DrawColorRamp(BRect, BView*, rgb_color, rgb_color, short, bool, BRect)
       BColorControl::_DrawSelectors(BView*)
       BColorControl::_InitData(color_control_layout, float, bool, BMessage*)
       BColorControl::_InitOffscreen()
       BColorControl::_InvalidateSelector(short, rgb_color, bool)
       BColorControl::_LayoutView()
       BColorControl::_PaletteFrame() const
       BColorControl::_PaletteSelectorFrame(unsigned char) const
       BColorControl::_RampFrame(unsigned char) const
       BColorControl::_ReservedColorControl1()
       BColorControl::_ReservedColorControl2()
       BColorControl::_ReservedColorControl3()
       BColorControl::_ReservedColorControl4()
       BColorControl::_SelectorPosition(BRect const&, unsigned char) const
       BColorControl::_SetCellSize(float)
       BColorControl::_TextRectOffset()
       BColorControl::~BColorControl()
       BColorControl::~BColorControl()
       BColorControl::~BColorControl()
       BColorControl::AllAttached()
       BColorControl::AllDetached()
       BColorControl::Archive(BMessage*, bool) const
       BColorControl::AttachedToWindow()
       BColorControl::BColorControl(BMessage*)
       BColorControl::BColorControl(BMessage*)
       BColorControl::BColorControl(BPoint, color_control_layout, float, char const*, BMessage*, bool)
       BColorControl::BColorControl(BPoint, color_control_layout, float, char const*, BMessage*, bool)
       BColorControl::CellSize() const
       BColorControl::DetachedFromWindow()
       BColorControl::Draw(BRect)
       BColorControl::FrameMoved(BPoint)
       BColorControl::FrameResized(float, float)
       BColorControl::GetPreferredSize(float*, float*)
       BColorControl::GetSupportedSuites(BMessage*)
       BColorControl::Instantiate(BMessage*)
       BColorControl::Invoke(BMessage*)
       BColorControl::KeyDown(char const*, int)
       BColorControl::Layout() const
       BColorControl::MakeFocus(bool)
       BColorControl::MessageReceived(BMessage*)
       BColorControl::MouseDown(BPoint)
       BColorControl::MouseMoved(BPoint, unsigned int, BMessage const*)
       BColorControl::MouseUp(BPoint)
       BColorControl::operator=(BColorControl const&)
       BColorControl::Perform(unsigned int, void*)
       BColorControl::ResizeToPreferred()
       BColorControl::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BColorControl::SetCellSize(float)
       BColorControl::SetEnabled(bool)
       BColorControl::SetIcon(BBitmap const*, unsigned int)
       BColorControl::SetLayout(BLayout*)
       BColorControl::SetLayout(color_control_layout)
       BColorControl::SetValue(int)
       BColorControl::ValueAsColor()
       BColorControl::WindowActivated(bool)
       BColorMenuItem::_ColorRectWidth()
       BColorMenuItem::_LeftMargin()
       BColorMenuItem::_Padding()
       BColorMenuItem::_ReservedColorMenuItem1()
       BColorMenuItem::_ReservedColorMenuItem10()
       BColorMenuItem::_ReservedColorMenuItem11()
       BColorMenuItem::_ReservedColorMenuItem12()
       BColorMenuItem::_ReservedColorMenuItem13()
       BColorMenuItem::_ReservedColorMenuItem14()
       BColorMenuItem::_ReservedColorMenuItem15()
       BColorMenuItem::_ReservedColorMenuItem16()
       BColorMenuItem::_ReservedColorMenuItem17()
       BColorMenuItem::_ReservedColorMenuItem18()
       BColorMenuItem::_ReservedColorMenuItem19()
       BColorMenuItem::_ReservedColorMenuItem2()
       BColorMenuItem::_ReservedColorMenuItem20()
       BColorMenuItem::_ReservedColorMenuItem3()
       BColorMenuItem::_ReservedColorMenuItem4()
       BColorMenuItem::_ReservedColorMenuItem5()
       BColorMenuItem::_ReservedColorMenuItem6()
       BColorMenuItem::_ReservedColorMenuItem7()
       BColorMenuItem::_ReservedColorMenuItem8()
       BColorMenuItem::_ReservedColorMenuItem9()
       BColorMenuItem::Archive(BMessage*, bool) const
       BColorMenuItem::BColorMenuItem(BMenu*, rgb_color, BMessage*)
       BColorMenuItem::BColorMenuItem(BMenu*, rgb_color, BMessage*)
       BColorMenuItem::BColorMenuItem(BMessage*)
       BColorMenuItem::BColorMenuItem(BMessage*)
       BColorMenuItem::BColorMenuItem(char const*, BMessage*, rgb_color, char, unsigned int)
       BColorMenuItem::BColorMenuItem(char const*, BMessage*, rgb_color, char, unsigned int)
       BColorMenuItem::DrawContent()
       BColorMenuItem::GetContentSize(float*, float*)
       BColorMenuItem::Instantiate(BMessage*)
       BColorMenuItem::SetMarked(bool)
       BCompressionAlgorithm::~BCompressionAlgorithm()
       BCompressionAlgorithm::~BCompressionAlgorithm()
       BCompressionAlgorithm::~BCompressionAlgorithm()
       BCompressionAlgorithm::BAbstractInputStream::~BAbstractInputStream()
       BCompressionAlgorithm::BAbstractInputStream::~BAbstractInputStream()
       BCompressionAlgorithm::BAbstractInputStream::~BAbstractInputStream()
       BCompressionAlgorithm::BAbstractInputStream::BAbstractInputStream(BDataIO*)
       BCompressionAlgorithm::BAbstractInputStream::BAbstractInputStream(BDataIO*)
       BCompressionAlgorithm::BAbstractInputStream::Read(void*, unsigned long)
       BCompressionAlgorithm::BAbstractOutputStream::~BAbstractOutputStream()
       BCompressionAlgorithm::BAbstractOutputStream::~BAbstractOutputStream()
       BCompressionAlgorithm::BAbstractOutputStream::~BAbstractOutputStream()
       BCompressionAlgorithm::BAbstractOutputStream::BAbstractOutputStream(BDataIO*)
       BCompressionAlgorithm::BAbstractOutputStream::BAbstractOutputStream(BDataIO*)
       BCompressionAlgorithm::BAbstractOutputStream::Flush()
       BCompressionAlgorithm::BAbstractOutputStream::Write(void const*, unsigned long)
       BCompressionAlgorithm::BAbstractStream::~BAbstractStream()
       BCompressionAlgorithm::BAbstractStream::~BAbstractStream()
       BCompressionAlgorithm::BAbstractStream::~BAbstractStream()
       BCompressionAlgorithm::BAbstractStream::BAbstractStream()
       BCompressionAlgorithm::BAbstractStream::BAbstractStream()
       BCompressionAlgorithm::BAbstractStream::Init(unsigned long)
       BCompressionAlgorithm::BCompressionAlgorithm()
       BCompressionAlgorithm::BCompressionAlgorithm()
       BCompressionAlgorithm::CompressBuffer(void const*, unsigned long, void*, unsigned long, unsigned long&, BCompressionParameters const*)
       BCompressionAlgorithm::CreateCompressingInputStream(BDataIO*, BCompressionParameters const*, BDataIO*&)
       BCompressionAlgorithm::CreateCompressingOutputStream(BDataIO*, BCompressionParameters const*, BDataIO*&)
       BCompressionAlgorithm::CreateDecompressingInputStream(BDataIO*, BDecompressionParameters const*, BDataIO*&)
       BCompressionAlgorithm::CreateDecompressingOutputStream(BDataIO*, BDecompressionParameters const*, BDataIO*&)
       BCompressionAlgorithm::DecompressBuffer(void const*, unsigned long, void*, unsigned long, unsigned long&, BDecompressionParameters const*)
       BCompressionParameters::~BCompressionParameters()
       BCompressionParameters::~BCompressionParameters()
       BCompressionParameters::~BCompressionParameters()
       BCompressionParameters::BCompressionParameters()
       BCompressionParameters::BCompressionParameters()
       BControl::_ReservedControl1()
       BControl::_ReservedControl2()
       BControl::_ReservedControl3()
       BControl::_ReservedControl4()
       BControl::~BControl()
       BControl::~BControl()
       BControl::~BControl()
       BControl::AllAttached()
       BControl::AllDetached()
       BControl::Archive(BMessage*, bool) const
       BControl::AttachedToWindow()
       BControl::BControl(BMessage*)
       BControl::BControl(BMessage*)
       BControl::BControl(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BControl::BControl(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BControl::BControl(char const*, char const*, BMessage*, unsigned int)
       BControl::BControl(char const*, char const*, BMessage*, unsigned int)
       BControl::DetachedFromWindow()
       BControl::GetPreferredSize(float*, float*)
       BControl::GetSupportedSuites(BMessage*)
       BControl::IconBitmap(unsigned int) const
       BControl::InitData(BMessage*)
       BControl::Instantiate(BMessage*)
       BControl::Invoke(BMessage*)
       BControl::IsEnabled() const
       BControl::IsFocusChanging() const
       BControl::IsTracking() const
       BControl::KeyDown(char const*, int)
       BControl::Label() const
       BControl::MakeFocus(bool)
       BControl::MessageReceived(BMessage*)
       BControl::MouseDown(BPoint)
       BControl::MouseMoved(BPoint, unsigned int, BMessage const*)
       BControl::MouseUp(BPoint)
       BControl::operator=(BControl const&)
       BControl::Perform(unsigned int, void*)
       BControl::ResizeToPreferred()
       BControl::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BControl::SetEnabled(bool)
       BControl::SetIcon(BBitmap const*, unsigned int)
       BControl::SetIconBitmap(BBitmap const*, unsigned int, unsigned int)
       BControl::SetLabel(char const*)
       BControl::SetTracking(bool)
       BControl::SetValue(int)
       BControl::SetValueNoUpdate(int)
       BControl::Value() const
       BControl::WindowActivated(bool)
       BCountry::~BCountry()
       BCountry::~BCountry()
       BCountry::BCountry(BCountry const&)
       BCountry::BCountry(BCountry const&)
       BCountry::BCountry(char const*)
       BCountry::BCountry(char const*)
       BCountry::Code() const
       BCountry::GetAvailableTimeZones(BMessage*) const
       BCountry::GetIcon(BBitmap*) const
       BCountry::GetName(BString&, BLanguage const*) const
       BCountry::GetNativeName(BString&) const
       BCountry::GetPreferredLanguage(BLanguage&) const
       BCountry::InitCheck() const
       BCountry::operator=(BCountry const&)
       BCountry::SetTo(char const*)
       BCursor::_FreeCursorData()
       BCursor::_ReservedCursor1()
       BCursor::_ReservedCursor2()
       BCursor::_ReservedCursor3()
       BCursor::_ReservedCursor4()
       BCursor::~BCursor()
       BCursor::~BCursor()
       BCursor::~BCursor()
       BCursor::Archive(BMessage*, bool) const
       BCursor::BCursor(BBitmap const*, BPoint const&)
       BCursor::BCursor(BBitmap const*, BPoint const&)
       BCursor::BCursor(BCursor const&)
       BCursor::BCursor(BCursor const&)
       BCursor::BCursor(BCursorID)
       BCursor::BCursor(BCursorID)
       BCursor::BCursor(BMessage*)
       BCursor::BCursor(BMessage*)
       BCursor::BCursor(void const*)
       BCursor::BCursor(void const*)
       BCursor::InitCheck() const
       BCursor::Instantiate(BMessage*)
       BCursor::operator!=(BCursor const&) const
       BCursor::operator=(BCursor const&)
       BCursor::operator==(BCursor const&) const
       BCursor::Perform(unsigned int, void*)
       BDataIO::_ReservedDataIO1()
       BDataIO::_ReservedDataIO10()
       BDataIO::_ReservedDataIO11()
       BDataIO::_ReservedDataIO12()
       BDataIO::_ReservedDataIO2()
       BDataIO::_ReservedDataIO3()
       BDataIO::_ReservedDataIO4()
       BDataIO::_ReservedDataIO5()
       BDataIO::_ReservedDataIO6()
       BDataIO::_ReservedDataIO7()
       BDataIO::_ReservedDataIO8()
       BDataIO::_ReservedDataIO9()
       BDataIO::~BDataIO()
       BDataIO::~BDataIO()
       BDataIO::~BDataIO()
       BDataIO::BDataIO()
       BDataIO::BDataIO()
       BDataIO::BDataIO(BDataIO const&)
       BDataIO::BDataIO(BDataIO const&)
       BDataIO::Flush()
       BDataIO::operator=(BDataIO const&)
       BDataIO::Read(void*, unsigned long)
       BDataIO::ReadExactly(void*, unsigned long, unsigned long*)
       BDataIO::Write(void const*, unsigned long)
       BDataIO::WriteExactly(void const*, unsigned long, unsigned long*)
       BDataPositionIOWrapper::~BDataPositionIOWrapper()
       BDataPositionIOWrapper::~BDataPositionIOWrapper()
       BDataPositionIOWrapper::~BDataPositionIOWrapper()
       BDataPositionIOWrapper::BDataPositionIOWrapper(BDataIO*)
       BDataPositionIOWrapper::BDataPositionIOWrapper(BDataIO*)
       BDataPositionIOWrapper::GetSize(long*) const
       BDataPositionIOWrapper::Position() const
       BDataPositionIOWrapper::Read(void*, unsigned long)
       BDataPositionIOWrapper::ReadAt(long, void*, unsigned long)
       BDataPositionIOWrapper::Seek(long, unsigned int)
       BDataPositionIOWrapper::SetSize(long)
       BDataPositionIOWrapper::Write(void const*, unsigned long)
       BDataPositionIOWrapper::WriteAt(long, void const*, unsigned long)
       BDateFormat::_CreateDateFormatter(BDateFormatStyle) const
       BDateFormat::~BDateFormat()
       BDateFormat::~BDateFormat()
       BDateFormat::~BDateFormat()
       BDateFormat::BDateFormat(BDateFormat const&)
       BDateFormat::BDateFormat(BDateFormat const&)
       BDateFormat::BDateFormat(BLanguage const&, BFormattingConventions const&)
       BDateFormat::BDateFormat(BLanguage const&, BFormattingConventions const&)
       BDateFormat::BDateFormat(BLocale const*)
       BDateFormat::BDateFormat(BLocale const*)
       BDateFormat::Format(BString&, BPrivate::BDate const&, BDateFormatStyle, BTimeZone const*) const
       BDateFormat::Format(BString&, int*&, int&, long, BDateFormatStyle) const
       BDateFormat::Format(BString&, long, BDateFormatStyle, BTimeZone const*) const
       BDateFormat::Format(char*, unsigned long, long, BDateFormatStyle) const
       BDateFormat::GetDateFormat(BDateFormatStyle, BString&) const
       BDateFormat::GetDayName(int, BString&, BDateFormatStyle) const
       BDateFormat::GetFields(BDateElement*&, int&, BDateFormatStyle) const
       BDateFormat::GetMonthName(int, BString&, BDateFormatStyle) const
       BDateFormat::GetStartOfWeek(BWeekday*) const
       BDateFormat::Parse(BString, BDateFormatStyle, BPrivate::BDate&)
       BDateFormat::SetDateFormat(BDateFormatStyle, BString const&)
       BDateTimeFormat::_CreateDateTimeFormatter(BString const&) const
       BDateTimeFormat::~BDateTimeFormat()
       BDateTimeFormat::~BDateTimeFormat()
       BDateTimeFormat::~BDateTimeFormat()
       BDateTimeFormat::BDateTimeFormat(BDateTimeFormat const&)
       BDateTimeFormat::BDateTimeFormat(BDateTimeFormat const&)
       BDateTimeFormat::BDateTimeFormat(BLanguage const&, BFormattingConventions const&)
       BDateTimeFormat::BDateTimeFormat(BLanguage const&, BFormattingConventions const&)
       BDateTimeFormat::BDateTimeFormat(BLocale const*)
       BDateTimeFormat::BDateTimeFormat(BLocale const*)
       BDateTimeFormat::Format(BString&, long, BDateFormatStyle, BTimeFormatStyle, BTimeZone const*) const
       BDateTimeFormat::Format(char*, unsigned long, long, BDateFormatStyle, BTimeFormatStyle) const
       BDateTimeFormat::SetDateTimeFormat(BDateFormatStyle, BTimeFormatStyle, int)
       BDecimalSpinner::_InitObject()
       BDecimalSpinner::_ReservedDecimalSpinner1()
       BDecimalSpinner::_ReservedDecimalSpinner10()
       BDecimalSpinner::_ReservedDecimalSpinner11()
       BDecimalSpinner::_ReservedDecimalSpinner12()
       BDecimalSpinner::_ReservedDecimalSpinner13()
       BDecimalSpinner::_ReservedDecimalSpinner14()
       BDecimalSpinner::_ReservedDecimalSpinner15()
       BDecimalSpinner::_ReservedDecimalSpinner16()
       BDecimalSpinner::_ReservedDecimalSpinner17()
       BDecimalSpinner::_ReservedDecimalSpinner18()
       BDecimalSpinner::_ReservedDecimalSpinner19()
       BDecimalSpinner::_ReservedDecimalSpinner2()
       BDecimalSpinner::_ReservedDecimalSpinner20()
       BDecimalSpinner::_ReservedDecimalSpinner3()
       BDecimalSpinner::_ReservedDecimalSpinner4()
       BDecimalSpinner::_ReservedDecimalSpinner5()
       BDecimalSpinner::_ReservedDecimalSpinner6()
       BDecimalSpinner::_ReservedDecimalSpinner7()
       BDecimalSpinner::_ReservedDecimalSpinner8()
       BDecimalSpinner::_ReservedDecimalSpinner9()
       BDecimalSpinner::~BDecimalSpinner()
       BDecimalSpinner::~BDecimalSpinner()
       BDecimalSpinner::~BDecimalSpinner()
       BDecimalSpinner::Archive(BMessage*, bool) const
       BDecimalSpinner::AttachedToWindow()
       BDecimalSpinner::BDecimalSpinner(BMessage*)
       BDecimalSpinner::BDecimalSpinner(BMessage*)
       BDecimalSpinner::BDecimalSpinner(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BDecimalSpinner::BDecimalSpinner(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BDecimalSpinner::BDecimalSpinner(char const*, char const*, BMessage*, unsigned int)
       BDecimalSpinner::BDecimalSpinner(char const*, char const*, BMessage*, unsigned int)
       BDecimalSpinner::Decrement()
       BDecimalSpinner::GetSupportedSuites(BMessage*)
       BDecimalSpinner::Increment()
       BDecimalSpinner::Instantiate(BMessage*)
       BDecimalSpinner::Range(double*, double*)
       BDecimalSpinner::SetEnabled(bool)
       BDecimalSpinner::SetMaxValue(double)
       BDecimalSpinner::SetMinValue(double)
       BDecimalSpinner::SetRange(double, double)
       BDecimalSpinner::SetValue(double)
       BDecimalSpinner::SetValue(int)
       BDecimalSpinner::SetValueFromText()
       BDecompressionParameters::~BDecompressionParameters()
       BDecompressionParameters::~BDecompressionParameters()
       BDecompressionParameters::~BDecompressionParameters()
       BDecompressionParameters::BDecompressionParameters()
       BDecompressionParameters::BDecompressionParameters()
       BDeskbar::~BDeskbar()
       BDeskbar::~BDeskbar()
       BDeskbar::AddItem(BView*, int*)
       BDeskbar::AddItem(entry_ref*, int*)
       BDeskbar::BDeskbar()
       BDeskbar::BDeskbar()
       BDeskbar::CountItems() const
       BDeskbar::Expand(bool)
       BDeskbar::Frame() const
       BDeskbar::GetItemInfo(char const*, int*) const
       BDeskbar::GetItemInfo(int, char const**) const
       BDeskbar::HasItem(char const*) const
       BDeskbar::HasItem(int) const
       BDeskbar::IsAlwaysOnTop() const
       BDeskbar::IsAutoHide() const
       BDeskbar::IsAutoRaise() const
       BDeskbar::IsExpanded() const
       BDeskbar::IsRunning() const
       BDeskbar::Location(bool*) const
       BDeskbar::MaxItemHeight() const
       BDeskbar::MaxItemWidth() const
       BDeskbar::RemoveItem(char const*)
       BDeskbar::RemoveItem(int)
       BDeskbar::SetAlwaysOnTop(bool)
       BDeskbar::SetAutoHide(bool)
       BDeskbar::SetAutoRaise(bool)
       BDeskbar::SetLocation(deskbar_location, bool)
       BDirectory::_ErectorDirectory1()
       BDirectory::_ErectorDirectory2()
       BDirectory::_ErectorDirectory3()
       BDirectory::_ErectorDirectory4()
       BDirectory::_ErectorDirectory5()
       BDirectory::_ErectorDirectory6()
       BDirectory::_GetStatFor(char const*, stat_beos*) const
       BDirectory::_GetStatFor(char const*, stat*) const
       BDirectory::~BDirectory()
       BDirectory::~BDirectory()
       BDirectory::~BDirectory()
       BDirectory::BDirectory()
       BDirectory::BDirectory()
       BDirectory::BDirectory(BDirectory const*, char const*)
       BDirectory::BDirectory(BDirectory const*, char const*)
       BDirectory::BDirectory(BDirectory const&)
       BDirectory::BDirectory(BDirectory const&)
       BDirectory::BDirectory(BEntry const*)
       BDirectory::BDirectory(BEntry const*)
       BDirectory::BDirectory(char const*)
       BDirectory::BDirectory(char const*)
       BDirectory::BDirectory(entry_ref const*)
       BDirectory::BDirectory(entry_ref const*)
       BDirectory::BDirectory(node_ref const*)
       BDirectory::BDirectory(node_ref const*)
       BDirectory::close_fd()
       BDirectory::Contains(BEntry const*, int) const
       BDirectory::Contains(char const*, int) const
       BDirectory::CountEntries()
       BDirectory::CreateDirectory(char const*, BDirectory*)
       BDirectory::CreateFile(char const*, BFile*, bool)
       BDirectory::CreateSymLink(char const*, char const*, BSymLink*)
       BDirectory::FindEntry(char const*, BEntry*, bool) const
       BDirectory::get_fd() const
       BDirectory::GetEntry(BEntry*) const
       BDirectory::GetNextDirents(dirent*, unsigned long, int)
       BDirectory::GetNextEntry(BEntry*, bool)
       BDirectory::GetNextRef(entry_ref*)
       BDirectory::GetStatFor(char const*, stat*) const@LIBBE_BASE
       BDirectory::GetStatFor(char const*, stat*) const@LIBBE_BASE
       BDirectory::IsRootDirectory() const
       BDirectory::operator=(BDirectory const&)
       BDirectory::Rewind()
       BDirectory::SetTo(BDirectory const*, char const*)
       BDirectory::SetTo(BEntry const*)
       BDirectory::SetTo(char const*)
       BDirectory::SetTo(entry_ref const*)
       BDirectory::SetTo(node_ref const*)
       BDiskDevice::_AcceptVisitor(BDiskDeviceVisitor*, int)
       BDiskDevice::_ClearUserData(user_partition_data*)
       BDiskDevice::_GetData(int, bool, unsigned long, user_disk_device_data**)
       BDiskDevice::_SetTo(int, bool, unsigned long)
       BDiskDevice::_SetTo(user_disk_device_data*)
       BDiskDevice::_Update(user_disk_device_data*, bool*)
       BDiskDevice::~BDiskDevice()
       BDiskDevice::~BDiskDevice()
       BDiskDevice::~BDiskDevice()
       BDiskDevice::BDiskDevice()
       BDiskDevice::BDiskDevice()
       BDiskDevice::BDiskDevice(BDiskDevice const&)
       BDiskDevice::BDiskDevice(BDiskDevice const&)
       BDiskDevice::CancelModifications()
       BDiskDevice::CommitModifications(bool, BMessenger, bool)
       BDiskDevice::Eject(bool)
       BDiskDevice::GetFilePath(BPath*) const
       BDiskDevice::GetPath(BPath*) const
       BDiskDevice::HasMedia() const
       BDiskDevice::InitCheck() const
       BDiskDevice::IsFile() const
       BDiskDevice::IsModified() const
       BDiskDevice::IsReadOnlyMedia() const
       BDiskDevice::IsRemovableMedia() const
       BDiskDevice::IsWriteOnceMedia() const
       BDiskDevice::operator=(BDiskDevice const&)
       BDiskDevice::PrepareModifications()
       BDiskDevice::SetTo(int)
       BDiskDevice::Unset()
       BDiskDevice::Update(bool*)
       BDiskDeviceList::_DeviceAdded(BMessage*)
       BDiskDeviceList::_DeviceRemoved(BMessage*)
       BDiskDeviceList::_FindDevice(BMessage*)
       BDiskDeviceList::_FindPartition(BMessage*)
       BDiskDeviceList::_MediaChanged(BMessage*)
       BDiskDeviceList::_MountPointMoved(BMessage*)
       BDiskDeviceList::_PartitionCreated(BMessage*)
       BDiskDeviceList::_PartitionDefragmented(BMessage*)
       BDiskDeviceList::_PartitionDeleted(BMessage*)
       BDiskDeviceList::_PartitionInitialized(BMessage*)
       BDiskDeviceList::_PartitionMounted(BMessage*)
       BDiskDeviceList::_PartitionMoved(BMessage*)
       BDiskDeviceList::_PartitionRepaired(BMessage*)
       BDiskDeviceList::_PartitionResized(BMessage*)
       BDiskDeviceList::_PartitionUnmounted(BMessage*)
       BDiskDeviceList::_StartWatching()
       BDiskDeviceList::_StopWatching()
       BDiskDeviceList::_UpdateDevice(BMessage*)
       BDiskDeviceList::~BDiskDeviceList()
       BDiskDeviceList::~BDiskDeviceList()
       BDiskDeviceList::~BDiskDeviceList()
       BDiskDeviceList::BDiskDeviceList(bool)
       BDiskDeviceList::BDiskDeviceList(bool)
       BDiskDeviceList::CountDevices() const
       BDiskDeviceList::DeviceAdded(BDiskDevice*)
       BDiskDeviceList::DeviceAt(int) const
       BDiskDeviceList::DeviceRemoved(BDiskDevice*)
       BDiskDeviceList::DeviceWithID(int) const
       BDiskDeviceList::Fetch()
       BDiskDeviceList::Lock()
       BDiskDeviceList::MediaChanged(BDiskDevice*)
       BDiskDeviceList::MessageReceived(BMessage*)
       BDiskDeviceList::MountPointMoved(BPartition*)
       BDiskDeviceList::PartitionChanged(BPartition*, unsigned int)
       BDiskDeviceList::PartitionCreated(BPartition*)
       BDiskDeviceList::PartitionDefragmented(BPartition*)
       BDiskDeviceList::PartitionDeleted(BPartition*, int)
       BDiskDeviceList::PartitionInitialized(BPartition*)
       BDiskDeviceList::PartitionMounted(BPartition*)
       BDiskDeviceList::PartitionMoved(BPartition*)
       BDiskDeviceList::PartitionRepaired(BPartition*)
       BDiskDeviceList::PartitionResized(BPartition*)
       BDiskDeviceList::PartitionUnmounted(BPartition*)
       BDiskDeviceList::PartitionWithID(int) const
       BDiskDeviceList::SetNextHandler(BHandler*)
       BDiskDeviceList::Unlock()
       BDiskDeviceList::Unset()
       BDiskDeviceList::VisitEachDevice(BDiskDeviceVisitor*)
       BDiskDeviceList::VisitEachMountablePartition(BDiskDeviceVisitor*)
       BDiskDeviceList::VisitEachMountedPartition(BDiskDeviceVisitor*)
       BDiskDeviceList::VisitEachPartition(BDiskDeviceVisitor*)
       BDiskDeviceRoster::~BDiskDeviceRoster()
       BDiskDeviceRoster::~BDiskDeviceRoster()
       BDiskDeviceRoster::BDiskDeviceRoster()
       BDiskDeviceRoster::BDiskDeviceRoster()
       BDiskDeviceRoster::FindPartitionByMountPoint(char const*, BDiskDevice*, BPartition**)
       BDiskDeviceRoster::FindPartitionByVolume(BVolume const&, BDiskDevice*, BPartition**)
       BDiskDeviceRoster::GetDeviceForPath(char const*, BDiskDevice*)
       BDiskDeviceRoster::GetDeviceWithID(int, BDiskDevice*) const
       BDiskDeviceRoster::GetDiskSystem(BDiskSystem*, char const*)
       BDiskDeviceRoster::GetFileDeviceForPath(char const*, BDiskDevice*)
       BDiskDeviceRoster::GetNextDevice(BDiskDevice*)
       BDiskDeviceRoster::GetNextDiskSystem(BDiskSystem*)
       BDiskDeviceRoster::GetPartitionForPath(char const*, BDiskDevice*, BPartition**)
       BDiskDeviceRoster::GetPartitionWithID(int, BDiskDevice*, BPartition**) const
       BDiskDeviceRoster::RegisterFileDevice(char const*)
       BDiskDeviceRoster::RewindDevices()
       BDiskDeviceRoster::RewindDiskSystems()
       BDiskDeviceRoster::StartWatching(BMessenger, unsigned int)
       BDiskDeviceRoster::StopWatching(BMessenger)
       BDiskDeviceRoster::UnregisterFileDevice(char const*)
       BDiskDeviceRoster::UnregisterFileDevice(int)
       BDiskDeviceRoster::VisitEachDevice(BDiskDeviceVisitor*, BDiskDevice*)
       BDiskDeviceRoster::VisitEachMountablePartition(BDiskDeviceVisitor*, BDiskDevice*, BPartition**)
       BDiskDeviceRoster::VisitEachMountedPartition(BDiskDeviceVisitor*, BDiskDevice*, BPartition**)
       BDiskDeviceRoster::VisitEachPartition(BDiskDeviceVisitor*, BDiskDevice*, BPartition**)
       BDiskDeviceVisitor::~BDiskDeviceVisitor()
       BDiskDeviceVisitor::~BDiskDeviceVisitor()
       BDiskDeviceVisitor::~BDiskDeviceVisitor()
       BDiskDeviceVisitor::BDiskDeviceVisitor()
       BDiskDeviceVisitor::BDiskDeviceVisitor()
       BDiskDeviceVisitor::Visit(BDiskDevice*)
       BDiskDeviceVisitor::Visit(BPartition*, int)
       BDiskSystem::_SetTo(int)
       BDiskSystem::_SetTo(user_disk_system_info const*)
       BDiskSystem::_Unset()
       BDiskSystem::~BDiskSystem()
       BDiskSystem::~BDiskSystem()
       BDiskSystem::BDiskSystem()
       BDiskSystem::BDiskSystem()
       BDiskSystem::BDiskSystem(BDiskSystem const&)
       BDiskSystem::BDiskSystem(BDiskSystem const&)
       BDiskSystem::GetTypeForContentType(char const*, BString*) const
       BDiskSystem::InitCheck() const
       BDiskSystem::IsFileSystem() const
       BDiskSystem::IsPartitioningSystem() const
       BDiskSystem::Name() const
       BDiskSystem::operator=(BDiskSystem const&)
       BDiskSystem::PrettyName() const
       BDiskSystem::ShortName() const
       BDiskSystem::SupportsContentName() const
       BDiskSystem::SupportsCreatingChild() const
       BDiskSystem::SupportsDefragmenting(bool*) const
       BDiskSystem::SupportsDeletingChild() const
       BDiskSystem::SupportsInitializing() const
       BDiskSystem::SupportsMoving(bool*) const
       BDiskSystem::SupportsMovingChild() const
       BDiskSystem::SupportsName() const
       BDiskSystem::SupportsRepairing(bool, bool*) const
       BDiskSystem::SupportsResizing(bool*) const
       BDiskSystem::SupportsResizingChild() const
       BDiskSystem::SupportsSettingContentName(bool*) const
       BDiskSystem::SupportsSettingContentParameters(bool*) const
       BDiskSystem::SupportsSettingName() const
       BDiskSystem::SupportsSettingParameters() const
       BDiskSystem::SupportsSettingType() const
       BDiskSystem::SupportsWriting() const
       BDiskSystemAddOn::~BDiskSystemAddOn()
       BDiskSystemAddOn::~BDiskSystemAddOn()
       BDiskSystemAddOn::~BDiskSystemAddOn()
       BDiskSystemAddOn::BDiskSystemAddOn(char const*, unsigned int)
       BDiskSystemAddOn::BDiskSystemAddOn(char const*, unsigned int)
       BDiskSystemAddOn::CanInitialize(BMutablePartition const*)
       BDiskSystemAddOn::Flags() const
       BDiskSystemAddOn::GetParameterEditor(B_PARAMETER_EDITOR_TYPE, BPartitionParameterEditor**)
       BDiskSystemAddOn::GetTypeForContentType(char const*, BString*)
       BDiskSystemAddOn::Initialize(BMutablePartition*, char const*, char const*, BPartitionHandle**)
       BDiskSystemAddOn::IsSubSystemFor(BMutablePartition const*)
       BDiskSystemAddOn::Name() const
       BDiskSystemAddOn::ValidateInitialize(BMutablePartition const*, BString*, char const*)
       BDragger::_AddToList()
       BDragger::_BuildDefaultPopUp()
       BDragger::_DetermineRelationship()
       BDragger::_InitData()
       BDragger::_RemoveFromList()
       BDragger::_ReservedDragger2()
       BDragger::_ReservedDragger3()
       BDragger::_ReservedDragger4()
       BDragger::_SetShelf(BShelf*)
       BDragger::_SetViewToDrag(BView*)
       BDragger::_SetZombied(bool)
       BDragger::_ShowPopUp(BView*, BPoint)
       BDragger::_UpdateShowAllDraggers(bool)
       BDragger::~BDragger()
       BDragger::~BDragger()
       BDragger::~BDragger()
       BDragger::AllAttached()
       BDragger::AllDetached()
       BDragger::Archive(BMessage*, bool) const
       BDragger::AreDraggersDrawn()
       BDragger::AttachedToWindow()
       BDragger::BDragger(BMessage*)
       BDragger::BDragger(BMessage*)
       BDragger::BDragger(BRect, BView*, unsigned int, unsigned int)
       BDragger::BDragger(BRect, BView*, unsigned int, unsigned int)
       BDragger::BDragger(BView*, unsigned int)
       BDragger::BDragger(BView*, unsigned int)
       BDragger::DetachedFromWindow()
       BDragger::DragBitmap(BPoint*, drawing_mode*)
       BDragger::Draw(BRect)
       BDragger::FrameMoved(BPoint)
       BDragger::FrameResized(float, float)
       BDragger::GetPreferredSize(float*, float*)
       BDragger::GetSupportedSuites(BMessage*)
       BDragger::HideAllDraggers()
       BDragger::InShelf() const
       BDragger::Instantiate(BMessage*)
       BDragger::IsVisibilityChanging() const
       BDragger::MakeFocus(bool)
       BDragger::MessageReceived(BMessage*)
       BDragger::MouseDown(BPoint)
       BDragger::MouseMoved(BPoint, unsigned int, BMessage const*)
       BDragger::MouseUp(BPoint)
       BDragger::operator=(BDragger const&)
       BDragger::Perform(unsigned int, void*)
       BDragger::PopUp() const
       BDragger::ResizeToPreferred()
       BDragger::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BDragger::SetPopUp(BPopUpMenu*)
       BDragger::ShowAllDraggers()
       BDragger::Target() const
       BDurationFormat::~BDurationFormat()
       BDurationFormat::~BDurationFormat()
       BDurationFormat::~BDurationFormat()
       BDurationFormat::BDurationFormat(BDurationFormat const&)
       BDurationFormat::BDurationFormat(BDurationFormat const&)
       BDurationFormat::BDurationFormat(BLanguage const&, BFormattingConventions const&, BString const&, time_unit_style)
       BDurationFormat::BDurationFormat(BLanguage const&, BFormattingConventions const&, BString const&, time_unit_style)
       BDurationFormat::BDurationFormat(BString const&, time_unit_style)
       BDurationFormat::BDurationFormat(BString const&, time_unit_style)
       BDurationFormat::Format(BString&, long, long) const
       BDurationFormat::SetSeparator(BString const&)
       BDurationFormat::SetTimeZone(BTimeZone const*)
       be_app
       be_app_messenger
       be_bold_font
       be_clipboard
       be_fixed_font
       be_plain_font
       be_roster
       beep()
       BEntry::_Dump(char const*)
       BEntry::_GetStat(stat_beos*) const
       BEntry::_GetStat(stat*) const
       BEntry::_PennyEntry1()
       BEntry::_PennyEntry2()
       BEntry::_PennyEntry3()
       BEntry::_PennyEntry4()
       BEntry::_PennyEntry5()
       BEntry::_PennyEntry6()
       BEntry::_Rename(BEntry&, bool)
       BEntry::_SetName(char const*)
       BEntry::_SetTo(int, char const*, bool)
       BEntry::~BEntry()
       BEntry::~BEntry()
       BEntry::~BEntry()
       BEntry::BEntry()
       BEntry::BEntry()
       BEntry::BEntry(BDirectory const*, char const*, bool)
       BEntry::BEntry(BDirectory const*, char const*, bool)
       BEntry::BEntry(BEntry const&)
       BEntry::BEntry(BEntry const&)
       BEntry::BEntry(char const*, bool)
       BEntry::BEntry(char const*, bool)
       BEntry::BEntry(entry_ref const*, bool)
       BEntry::BEntry(entry_ref const*, bool)
       BEntry::Exists() const
       BEntry::GetName(char*) const
       BEntry::GetParent(BDirectory*) const
       BEntry::GetParent(BEntry*) const
       BEntry::GetPath(BPath*) const
       BEntry::GetRef(entry_ref*) const
       BEntry::GetStat(stat*) const@LIBBE_BASE
       BEntry::GetStat(stat*) const@LIBBE_BASE
       BEntry::InitCheck() const
       BEntry::MoveTo(BDirectory*, char const*, bool)
       BEntry::Name() const
       BEntry::operator!=(BEntry const&) const
       BEntry::operator=(BEntry const&)
       BEntry::operator==(BEntry const&) const
       BEntry::Remove()
       BEntry::Rename(char const*, bool)
       BEntry::set_stat(stat&, unsigned int)
       BEntry::SetTo(BDirectory const*, char const*, bool)
       BEntry::SetTo(char const*, bool)
       BEntry::SetTo(entry_ref const*, bool)
       BEntry::Unset()
       BEntryList::_ReservedEntryList1()
       BEntryList::_ReservedEntryList2()
       BEntryList::_ReservedEntryList3()
       BEntryList::_ReservedEntryList4()
       BEntryList::_ReservedEntryList5()
       BEntryList::_ReservedEntryList6()
       BEntryList::_ReservedEntryList7()
       BEntryList::_ReservedEntryList8()
       BEntryList::~BEntryList()
       BEntryList::~BEntryList()
       BEntryList::~BEntryList()
       BEntryList::BEntryList()
       BEntryList::BEntryList()
       BFdIO::~BFdIO()
       BFdIO::~BFdIO()
       BFdIO::~BFdIO()
       BFdIO::BFdIO()
       BFdIO::BFdIO()
       BFdIO::BFdIO(int, bool)
       BFdIO::BFdIO(int, bool)
       BFdIO::GetSize(long*) const
       BFdIO::Position() const
       BFdIO::Read(void*, unsigned long)
       BFdIO::ReadAt(long, void*, unsigned long)
       BFdIO::Seek(long, unsigned int)
       BFdIO::SetSize(long)
       BFdIO::SetTo(int, bool)
       BFdIO::Unset()
       BFdIO::Write(void const*, unsigned long)
       BFdIO::WriteAt(long, void const*, unsigned long)
       BFile::_PhiloFile1()
       BFile::_PhiloFile2()
       BFile::_PhiloFile3()
       BFile::_PhiloFile4()
       BFile::_PhiloFile5()
       BFile::_PhiloFile6()
       BFile::~BFile()
       BFile::~BFile()
       BFile::~BFile()
       BFile::BFile()
       BFile::BFile()
       BFile::BFile(BDirectory const*, char const*, unsigned int)
       BFile::BFile(BDirectory const*, char const*, unsigned int)
       BFile::BFile(BEntry const*, unsigned int)
       BFile::BFile(BEntry const*, unsigned int)
       BFile::BFile(BFile const&)
       BFile::BFile(BFile const&)
       BFile::BFile(char const*, unsigned int)
       BFile::BFile(char const*, unsigned int)
       BFile::BFile(entry_ref const*, unsigned int)
       BFile::BFile(entry_ref const*, unsigned int)
       BFile::close_fd()
       BFile::get_fd() const
       BFile::GetSize(long*) const
       BFile::IsReadable() const
       BFile::IsWritable() const
       BFile::operator=(BFile const&)
       BFile::Position() const
       BFile::Read(void*, unsigned long)
       BFile::ReadAt(long, void*, unsigned long)
       BFile::Seek(long, unsigned int)
       BFile::SetSize(long)
       BFile::SetTo(BDirectory const*, char const*, unsigned int)
       BFile::SetTo(BEntry const*, unsigned int)
       BFile::SetTo(char const*, unsigned int)
       BFile::SetTo(entry_ref const*, unsigned int)
       BFile::Write(void const*, unsigned long)
       BFile::WriteAt(long, void const*, unsigned long)
       BFileDescriptorIO::~BFileDescriptorIO()
       BFileDescriptorIO::~BFileDescriptorIO()
       BFileDescriptorIO::~BFileDescriptorIO()
       BFileDescriptorIO::BFileDescriptorIO(int, bool)
       BFileDescriptorIO::BFileDescriptorIO(int, bool)
       BFileDescriptorIO::GetSize(long*) const
       BFileDescriptorIO::Position() const
       BFileDescriptorIO::Read(void*, unsigned long)
       BFileDescriptorIO::ReadAt(long, void*, unsigned long)
       BFileDescriptorIO::Seek(long, unsigned int)
       BFileDescriptorIO::SetSize(long)
       BFileDescriptorIO::Write(void const*, unsigned long)
       BFileDescriptorIO::WriteAt(long, void const*, unsigned long)
       BFileIO::_Seek(long, unsigned int) const
       BFileIO::~BFileIO()
       BFileIO::~BFileIO()
       BFileIO::~BFileIO()
       BFileIO::BFileIO(_IO_FILE*, bool)
       BFileIO::BFileIO(_IO_FILE*, bool)
       BFileIO::GetSize(long*) const
       BFileIO::Position() const
       BFileIO::Read(void*, unsigned long)
       BFileIO::ReadAt(long, void*, unsigned long)
       BFileIO::Seek(long, unsigned int)
       BFileIO::SetSize(long)
       BFileIO::Write(void const*, unsigned long)
       BFileIO::WriteAt(long, void const*, unsigned long)
       BFlattenable::_ReservedFlattenable1()
       BFlattenable::_ReservedFlattenable2()
       BFlattenable::_ReservedFlattenable3()
       BFlattenable::~BFlattenable()
       BFlattenable::~BFlattenable()
       BFlattenable::~BFlattenable()
       BFlattenable::AllowsTypeCode(unsigned int) const
       BFont::_GetBoundingBoxes(char const*, int, font_metric_mode, bool, escapement_delta*, BRect*, bool) const
       BFont::_GetExtraFlags() const
       BFont::BFont()
       BFont::BFont()
       BFont::BFont(BFont const*)
       BFont::BFont(BFont const*)
       BFont::BFont(BFont const&)
       BFont::BFont(BFont const&)
       BFont::Blocks() const
       BFont::BoundingBox() const
       BFont::CountTuned() const
       BFont::Direction() const
       BFont::Encoding() const
       BFont::Face() const
       BFont::FalseBoldWidth() const
       BFont::FamilyAndStyle() const
       BFont::FileFormat() const
       BFont::Flags() const
       BFont::GetBoundingBoxesAsGlyphs(char const*, int, font_metric_mode, BRect*) const
       BFont::GetBoundingBoxesAsString(char const*, int, font_metric_mode, escapement_delta*, BRect*) const
       BFont::GetBoundingBoxesForStrings(char const**, int, font_metric_mode, escapement_delta*, BRect*) const
       BFont::GetEdges(char const*, int, edge_info*) const
       BFont::GetEscapements(char const*, int, escapement_delta*, BPoint*, BPoint*) const
       BFont::GetEscapements(char const*, int, escapement_delta*, BPoint*) const
       BFont::GetEscapements(char const*, int, escapement_delta*, float*) const
       BFont::GetEscapements(char const*, int, float*) const
       BFont::GetFamilyAndStyle(char (*) [64], char (*) [64]) const
       BFont::GetGlyphShapes(char const*, int, BShape**) const
       BFont::GetHasGlyphs(char const*, int, bool*) const
       BFont::GetHeight(font_height*) const
       BFont::GetStringWidths(char const**, int const*, int, float*) const
       BFont::GetTruncatedStrings(char const**, int, unsigned int, float, BString*) const
       BFont::GetTruncatedStrings(char const**, int, unsigned int, float, char**) const
       BFont::GetTunedInfo(int, tuned_font_info*) const
       BFont::IncludesBlock(unsigned int, unsigned int) const
       BFont::IsFixed() const
       BFont::IsFullAndHalfFixed() const
       BFont::operator!=(BFont const&) const
       BFont::operator=(BFont const&)
       BFont::operator==(BFont const&) const
       BFont::PrintToStream() const
       BFont::Rotation() const
       BFont::SetEncoding(unsigned char)
       BFont::SetFace(unsigned short)
       BFont::SetFalseBoldWidth(float)
       BFont::SetFamilyAndFace(char const*, unsigned short)
       BFont::SetFamilyAndStyle(char const*, char const*)
       BFont::SetFamilyAndStyle(unsigned int)
       BFont::SetFlags(unsigned int)
       BFont::SetRotation(float)
       BFont::SetShear(float)
       BFont::SetSize(float)
       BFont::SetSpacing(unsigned char)
       BFont::Shear() const
       BFont::Size() const
       BFont::Spacing() const
       BFont::StringWidth(char const*, int) const
       BFont::StringWidth(char const*) const
       BFont::TruncateString(BString*, unsigned int, float) const
       BFormat::_Initialize(BLanguage const&, BFormattingConventions const&)
       BFormat::_Initialize(BLocale const&)
       BFormat::~BFormat()
       BFormat::~BFormat()
       BFormat::~BFormat()
       BFormat::BFormat(BFormat const&)
       BFormat::BFormat(BFormat const&)
       BFormat::BFormat(BLanguage const&, BFormattingConventions const&)
       BFormat::BFormat(BLanguage const&, BFormattingConventions const&)
       BFormat::BFormat(BLocale const*)
       BFormat::BFormat(BLocale const*)
       BFormat::InitCheck() const
       BFormattingConventions::~BFormattingConventions()
       BFormattingConventions::~BFormattingConventions()
       BFormattingConventions::~BFormattingConventions()
       BFormattingConventions::Archive(BMessage*, bool) const
       BFormattingConventions::AreCountrySpecific() const
       BFormattingConventions::BFormattingConventions(BFormattingConventions const&)
       BFormattingConventions::BFormattingConventions(BFormattingConventions const&)
       BFormattingConventions::BFormattingConventions(BMessage const*)
       BFormattingConventions::BFormattingConventions(BMessage const*)
       BFormattingConventions::BFormattingConventions(char const*)
       BFormattingConventions::BFormattingConventions(char const*)
       BFormattingConventions::CoerceFormatForClock(BString&) const
       BFormattingConventions::CountryCode() const
       BFormattingConventions::GetDateFormat(BDateFormatStyle, BString&) const
       BFormattingConventions::GetDateTimeFormat(BDateFormatStyle, BTimeFormatStyle, BString&) const
       BFormattingConventions::GetMonetaryFormat(BString&) const
       BFormattingConventions::GetName(BString&, BLanguage const*) const
       BFormattingConventions::GetNativeName(BString&) const
       BFormattingConventions::GetNumericFormat(BString&) const
       BFormattingConventions::GetTimeFormat(BTimeFormatStyle, BString&) const
       BFormattingConventions::ID() const
       BFormattingConventions::LanguageCode() const
       BFormattingConventions::MeasurementKind() const
       BFormattingConventions::operator!=(BFormattingConventions const&) const
       BFormattingConventions::operator=(BFormattingConventions const&)
       BFormattingConventions::operator==(BFormattingConventions const&) const
       BFormattingConventions::SetExplicitDateFormat(BDateFormatStyle, BString const&)
       BFormattingConventions::SetExplicitDateTimeFormat(BDateFormatStyle, BTimeFormatStyle, BString const&)
       BFormattingConventions::SetExplicitMonetaryFormat(BString const&)
       BFormattingConventions::SetExplicitNumericFormat(BString const&)
       BFormattingConventions::SetExplicitTimeFormat(BTimeFormatStyle, BString const&)
       BFormattingConventions::SetExplicitUse24HourClock(bool)
       BFormattingConventions::SetUseStringsFromPreferredLanguage(bool)
       BFormattingConventions::UnsetExplicitUse24HourClock()
       BFormattingConventions::Use24HourClock() const
       BFormattingConventions::UseStringsFromPreferredLanguage() const
       BGradient::~BGradient()
       BGradient::~BGradient()
       BGradient::~BGradient()
       BGradient::AddColor(rgb_color const&, float)
       BGradient::AddColorStop(BGradient::ColorStop const&, int)
       BGradient::Archive(BMessage*, bool) const
       BGradient::BGradient()
       BGradient::BGradient()
       BGradient::BGradient(BGradient const&)
       BGradient::BGradient(BGradient const&)
       BGradient::BGradient(BMessage*)
       BGradient::BGradient(BMessage*)
       BGradient::ColorStop::ColorStop()
       BGradient::ColorStop::ColorStop()
       BGradient::ColorStop::ColorStop(BGradient::ColorStop const&)
       BGradient::ColorStop::ColorStop(BGradient::ColorStop const&)
       BGradient::ColorStop::ColorStop(rgb_color, float)
       BGradient::ColorStop::ColorStop(rgb_color, float)
       BGradient::ColorStop::ColorStop(unsigned char, unsigned char, unsigned char, unsigned char, float)
       BGradient::ColorStop::ColorStop(unsigned char, unsigned char, unsigned char, unsigned char, float)
       BGradient::ColorStop::operator!=(BGradient::ColorStop const&) const
       BGradient::ColorStopAt(int) const
       BGradient::ColorStopAtFast(int) const
       BGradient::ColorStops() const
       BGradient::ColorStopsAreEqual(BGradient const&) const
       BGradient::CountColorStops() const
       BGradient::Flatten(BDataIO*) const
       BGradient::MakeEmpty()
       BGradient::operator!=(BGradient const&) const
       BGradient::operator=(BGradient const&)
       BGradient::operator==(BGradient const&) const
       BGradient::RemoveColor(int)
       BGradient::SetColor(int, rgb_color const&)
       BGradient::SetColorStop(int, BGradient::ColorStop const&)
       BGradient::SetColorStops(BGradient const&)
       BGradient::SetOffset(int, float)
       BGradient::SortColorStopsByOffset()
       BGradient::Unflatten(BGradient*&, BDataIO*)
       BGradientConic::Angle() const
       BGradientConic::BGradientConic()
       BGradientConic::BGradientConic()
       BGradientConic::BGradientConic(BPoint const&, float)
       BGradientConic::BGradientConic(BPoint const&, float)
       BGradientConic::BGradientConic(float, float, float)
       BGradientConic::BGradientConic(float, float, float)
       BGradientConic::Center() const
       BGradientConic::SetAngle(float)
       BGradientConic::SetCenter(BPoint const&)
       BGradientConic::SetCenter(float, float)
       BGradientDiamond::BGradientDiamond()
       BGradientDiamond::BGradientDiamond()
       BGradientDiamond::BGradientDiamond(BPoint const&)
       BGradientDiamond::BGradientDiamond(BPoint const&)
       BGradientDiamond::BGradientDiamond(float, float)
       BGradientDiamond::BGradientDiamond(float, float)
       BGradientDiamond::Center() const
       BGradientDiamond::SetCenter(BPoint const&)
       BGradientDiamond::SetCenter(float, float)
       BGradientLinear::BGradientLinear()
       BGradientLinear::BGradientLinear()
       BGradientLinear::BGradientLinear(BPoint const&, BPoint const&)
       BGradientLinear::BGradientLinear(BPoint const&, BPoint const&)
       BGradientLinear::BGradientLinear(float, float, float, float)
       BGradientLinear::BGradientLinear(float, float, float, float)
       BGradientLinear::End() const
       BGradientLinear::SetEnd(BPoint const&)
       BGradientLinear::SetEnd(float, float)
       BGradientLinear::SetStart(BPoint const&)
       BGradientLinear::SetStart(float, float)
       BGradientLinear::Start() const
       BGradientRadial::BGradientRadial()
       BGradientRadial::BGradientRadial()
       BGradientRadial::BGradientRadial(BPoint const&, float)
       BGradientRadial::BGradientRadial(BPoint const&, float)
       BGradientRadial::BGradientRadial(float, float, float)
       BGradientRadial::BGradientRadial(float, float, float)
       BGradientRadial::Center() const
       BGradientRadial::Radius() const
       BGradientRadial::SetCenter(BPoint const&)
       BGradientRadial::SetCenter(float, float)
       BGradientRadial::SetRadius(float)
       BGradientRadialFocus::BGradientRadialFocus()
       BGradientRadialFocus::BGradientRadialFocus()
       BGradientRadialFocus::BGradientRadialFocus(BPoint const&, float, BPoint const&)
       BGradientRadialFocus::BGradientRadialFocus(BPoint const&, float, BPoint const&)
       BGradientRadialFocus::BGradientRadialFocus(float, float, float, float, float)
       BGradientRadialFocus::BGradientRadialFocus(float, float, float, float, float)
       BGradientRadialFocus::Center() const
       BGradientRadialFocus::Focal() const
       BGradientRadialFocus::Radius() const
       BGradientRadialFocus::SetCenter(BPoint const&)
       BGradientRadialFocus::SetCenter(float, float)
       BGradientRadialFocus::SetFocal(BPoint const&)
       BGradientRadialFocus::SetFocal(float, float)
       BGradientRadialFocus::SetRadius(float)
       BGridLayout::_AreGridCellsEmpty(int, int, int, int)
       BGridLayout::_InsertItemIntoGrid(BLayoutItem*)
       BGridLayout::_IsGridCellEmpty(int, int)
       BGridLayout::_LayoutDataForItem(BLayoutItem*) const
       BGridLayout::_ReservedGridLayout1()
       BGridLayout::_ReservedGridLayout10()
       BGridLayout::_ReservedGridLayout2()
       BGridLayout::_ReservedGridLayout3()
       BGridLayout::_ReservedGridLayout4()
       BGridLayout::_ReservedGridLayout5()
       BGridLayout::_ReservedGridLayout6()
       BGridLayout::_ReservedGridLayout7()
       BGridLayout::_ReservedGridLayout8()
       BGridLayout::_ReservedGridLayout9()
       BGridLayout::_ResizeGrid(int, int)
       BGridLayout::~BGridLayout()
       BGridLayout::~BGridLayout()
       BGridLayout::~BGridLayout()
       BGridLayout::AddItem(BLayoutItem*, int, int, int, int)
       BGridLayout::AddItem(BLayoutItem*)
       BGridLayout::AddItem(int, BLayoutItem*)
       BGridLayout::AddView(BView*, int, int, int, int)
       BGridLayout::AddView(BView*)
       BGridLayout::AddView(int, BView*)
       BGridLayout::AllArchived(BMessage*) const
       BGridLayout::AllUnarchived(BMessage const*)
       BGridLayout::Archive(BMessage*, bool) const
       BGridLayout::BGridLayout(BMessage*)
       BGridLayout::BGridLayout(BMessage*)
       BGridLayout::BGridLayout(float, float)
       BGridLayout::BGridLayout(float, float)
       BGridLayout::ColumnWeight(int) const
       BGridLayout::CountColumns() const
       BGridLayout::CountRows() const
       BGridLayout::GetColumnRowConstraints(orientation, int, BTwoDimensionalLayout::ColumnRowConstraints*)
       BGridLayout::GetItemDimensions(BLayoutItem*, BTwoDimensionalLayout::Dimensions*)
       BGridLayout::HasMultiColumnItems()
       BGridLayout::HasMultiRowItems()
       BGridLayout::HorizontalSpacing() const
       BGridLayout::Instantiate(BMessage*)
       BGridLayout::InternalCountColumns()
       BGridLayout::InternalCountRows()
       BGridLayout::ItemAdded(BLayoutItem*, int)
       BGridLayout::ItemArchived(BMessage*, BLayoutItem*, int) const
       BGridLayout::ItemAt(int, int) const
       BGridLayout::ItemRemoved(BLayoutItem*, int)
       BGridLayout::ItemUnarchived(BMessage const*, BLayoutItem*, int)
       BGridLayout::MaxColumnWidth(int) const
       BGridLayout::MaxRowHeight(int) const
       BGridLayout::MinColumnWidth(int) const
       BGridLayout::MinRowHeight(int) const
       BGridLayout::Perform(unsigned int, void*)
       BGridLayout::RowWeight(int) const
       BGridLayout::SetColumnWeight(int, float)
       BGridLayout::SetHorizontalSpacing(float)
       BGridLayout::SetMaxColumnWidth(int, float)
       BGridLayout::SetMaxRowHeight(int, float)
       BGridLayout::SetMinColumnWidth(int, float)
       BGridLayout::SetMinRowHeight(int, float)
       BGridLayout::SetRowWeight(int, float)
       BGridLayout::SetSpacing(float, float)
       BGridLayout::SetVerticalSpacing(float)
       BGridLayout::VerticalSpacing() const
       BGridLayoutBuilder::Add(BLayoutItem*, int, int, int, int)
       BGridLayoutBuilder::Add(BView*, int, int, int, int)
       BGridLayoutBuilder::BGridLayoutBuilder(BGridLayout*)
       BGridLayoutBuilder::BGridLayoutBuilder(BGridLayout*)
       BGridLayoutBuilder::BGridLayoutBuilder(BGridView*)
       BGridLayoutBuilder::BGridLayoutBuilder(BGridView*)
       BGridLayoutBuilder::BGridLayoutBuilder(float, float)
       BGridLayoutBuilder::BGridLayoutBuilder(float, float)
       BGridLayoutBuilder::GetGridLayout(BGridLayout**)
       BGridLayoutBuilder::GetView(BView**)
       BGridLayoutBuilder::GridLayout() const
       BGridLayoutBuilder::operator BGridLayout*()
       BGridLayoutBuilder::SetColumnWeight(int, float)
       BGridLayoutBuilder::SetInsets(float, float, float, float)
       BGridLayoutBuilder::SetRowWeight(int, float)
       BGridLayoutBuilder::View() const
       BGridView::_ReservedGridView1()
       BGridView::_ReservedGridView10()
       BGridView::_ReservedGridView2()
       BGridView::_ReservedGridView3()
       BGridView::_ReservedGridView4()
       BGridView::_ReservedGridView5()
       BGridView::_ReservedGridView6()
       BGridView::_ReservedGridView7()
       BGridView::_ReservedGridView8()
       BGridView::_ReservedGridView9()
       BGridView::~BGridView()
       BGridView::~BGridView()
       BGridView::~BGridView()
       BGridView::BGridView(BMessage*)
       BGridView::BGridView(BMessage*)
       BGridView::BGridView(char const*, float, float)
       BGridView::BGridView(char const*, float, float)
       BGridView::BGridView(float, float)
       BGridView::BGridView(float, float)
       BGridView::GridLayout() const
       BGridView::Instantiate(BMessage*)
       BGridView::Perform(unsigned int, void*)
       BGridView::SetLayout(BLayout*)
       BGroupLayout::_LayoutDataForItem(BLayoutItem*) const
       BGroupLayout::_ReservedGroupLayout1()
       BGroupLayout::_ReservedGroupLayout10()
       BGroupLayout::_ReservedGroupLayout2()
       BGroupLayout::_ReservedGroupLayout3()
       BGroupLayout::_ReservedGroupLayout4()
       BGroupLayout::_ReservedGroupLayout5()
       BGroupLayout::_ReservedGroupLayout6()
       BGroupLayout::_ReservedGroupLayout7()
       BGroupLayout::_ReservedGroupLayout8()
       BGroupLayout::_ReservedGroupLayout9()
       BGroupLayout::~BGroupLayout()
       BGroupLayout::~BGroupLayout()
       BGroupLayout::~BGroupLayout()
       BGroupLayout::AddItem(BLayoutItem*, float)
       BGroupLayout::AddItem(BLayoutItem*)
       BGroupLayout::AddItem(int, BLayoutItem*, float)
       BGroupLayout::AddItem(int, BLayoutItem*)
       BGroupLayout::AddView(BView*, float)
       BGroupLayout::AddView(BView*)
       BGroupLayout::AddView(int, BView*, float)
       BGroupLayout::AddView(int, BView*)
       BGroupLayout::AllArchived(BMessage*) const
       BGroupLayout::AllUnarchived(BMessage const*)
       BGroupLayout::Archive(BMessage*, bool) const
       BGroupLayout::BGroupLayout(BMessage*)
       BGroupLayout::BGroupLayout(BMessage*)
       BGroupLayout::BGroupLayout(orientation, float)
       BGroupLayout::BGroupLayout(orientation, float)
       BGroupLayout::GetColumnRowConstraints(orientation, int, BTwoDimensionalLayout::ColumnRowConstraints*)
       BGroupLayout::GetItemDimensions(BLayoutItem*, BTwoDimensionalLayout::Dimensions*)
       BGroupLayout::Instantiate(BMessage*)
       BGroupLayout::InternalCountColumns()
       BGroupLayout::InternalCountRows()
       BGroupLayout::ItemAdded(BLayoutItem*, int)
       BGroupLayout::ItemArchived(BMessage*, BLayoutItem*, int) const
       BGroupLayout::ItemRemoved(BLayoutItem*, int)
       BGroupLayout::ItemUnarchived(BMessage const*, BLayoutItem*, int)
       BGroupLayout::ItemWeight(int) const
       BGroupLayout::Orientation() const
       BGroupLayout::Perform(unsigned int, void*)
       BGroupLayout::PrepareItems(orientation)
       BGroupLayout::SetItemWeight(int, float)
       BGroupLayout::SetOrientation(orientation)
       BGroupLayout::SetSpacing(float)
       BGroupLayout::Spacing() const
       BGroupLayoutBuilder::_PopLayout()
       BGroupLayoutBuilder::_PushLayout(BGroupLayout*)
       BGroupLayoutBuilder::Add(BLayoutItem*, float)
       BGroupLayoutBuilder::Add(BLayoutItem*)
       BGroupLayoutBuilder::Add(BView*, float)
       BGroupLayoutBuilder::Add(BView*)
       BGroupLayoutBuilder::AddGlue(float)
       BGroupLayoutBuilder::AddGroup(orientation, float, float)
       BGroupLayoutBuilder::AddStrut(float)
       BGroupLayoutBuilder::BGroupLayoutBuilder(BGroupLayout*)
       BGroupLayoutBuilder::BGroupLayoutBuilder(BGroupLayout*)
       BGroupLayoutBuilder::BGroupLayoutBuilder(BGroupView*)
       BGroupLayoutBuilder::BGroupLayoutBuilder(BGroupView*)
       BGroupLayoutBuilder::BGroupLayoutBuilder(orientation, float)
       BGroupLayoutBuilder::BGroupLayoutBuilder(orientation, float)
       BGroupLayoutBuilder::End()
       BGroupLayoutBuilder::GetTopLayout(BGroupLayout**)
       BGroupLayoutBuilder::GetTopView(BView**)
       BGroupLayoutBuilder::operator BGroupLayout*()
       BGroupLayoutBuilder::RootLayout() const
       BGroupLayoutBuilder::SetInsets(float, float, float, float)
       BGroupLayoutBuilder::TopLayout() const
       BGroupLayoutBuilder::TopView() const
       BGroupView::_ReservedGroupView1()
       BGroupView::_ReservedGroupView10()
       BGroupView::_ReservedGroupView2()
       BGroupView::_ReservedGroupView3()
       BGroupView::_ReservedGroupView4()
       BGroupView::_ReservedGroupView5()
       BGroupView::_ReservedGroupView6()
       BGroupView::_ReservedGroupView7()
       BGroupView::_ReservedGroupView8()
       BGroupView::_ReservedGroupView9()
       BGroupView::~BGroupView()
       BGroupView::~BGroupView()
       BGroupView::~BGroupView()
       BGroupView::BGroupView(BMessage*)
       BGroupView::BGroupView(BMessage*)
       BGroupView::BGroupView(char const*, orientation, float)
       BGroupView::BGroupView(char const*, orientation, float)
       BGroupView::BGroupView(orientation, float)
       BGroupView::BGroupView(orientation, float)
       BGroupView::GroupLayout() const
       BGroupView::Instantiate(BMessage*)
       BGroupView::Perform(unsigned int, void*)
       BGroupView::SetLayout(BLayout*)
       BHandler::_InitData(char const*)
       BHandler::_ObserverList()
       BHandler::_ReservedHandler2()
       BHandler::_ReservedHandler3()
       BHandler::_ReservedHandler4()
       BHandler::~BHandler()
       BHandler::~BHandler()
       BHandler::~BHandler()
       BHandler::AddFilter(BMessageFilter*)
       BHandler::Archive(BMessage*, bool) const
       BHandler::BHandler(BMessage*)
       BHandler::BHandler(BMessage*)
       BHandler::BHandler(char const*)
       BHandler::BHandler(char const*)
       BHandler::FilterList()
       BHandler::GetSupportedSuites(BMessage*)
       BHandler::Instantiate(BMessage*)
       BHandler::IsWatched() const
       BHandler::LockLooper()
       BHandler::LockLooperWithTimeout(long)
       BHandler::Looper() const
       BHandler::MessageReceived(BMessage*)
       BHandler::Name() const
       BHandler::NextHandler() const
       BHandler::Perform(unsigned int, void*)
       BHandler::RemoveFilter(BMessageFilter*)
       BHandler::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BHandler::SendNotices(unsigned int, BMessage const*)
       BHandler::SetFilterList(BList*)
       BHandler::SetLooper(BLooper*)
       BHandler::SetName(char const*)
       BHandler::SetNextHandler(BHandler*)
       BHandler::StartWatching(BHandler*, unsigned int)
       BHandler::StartWatching(BMessenger, unsigned int)
       BHandler::StartWatchingAll(BHandler*)
       BHandler::StartWatchingAll(BMessenger)
       BHandler::StopWatching(BHandler*, unsigned int)
       BHandler::StopWatching(BMessenger, unsigned int)
       BHandler::StopWatchingAll(BHandler*)
       BHandler::StopWatchingAll(BMessenger)
       BHandler::UnlockLooper()
       BIconUtils::~BIconUtils()
       BIconUtils::~BIconUtils()
       BIconUtils::BIconUtils()
       BIconUtils::BIconUtils()
       BIconUtils::BIconUtils(BIconUtils const&)
       BIconUtils::BIconUtils(BIconUtils const&)
       BIconUtils::ConvertFromCMAP8(BBitmap*, BBitmap*)
       BIconUtils::ConvertFromCMAP8(unsigned char const*, unsigned int, unsigned int, unsigned int, BBitmap*)
       BIconUtils::ConvertToCMAP8(BBitmap*, BBitmap*)
       BIconUtils::ConvertToCMAP8(unsigned char const*, unsigned int, unsigned int, unsigned int, BBitmap*)
       BIconUtils::GetCMAP8Icon(BNode*, char const*, char const*, icon_size, BBitmap*)
       BIconUtils::GetIcon(BNode*, char const*, char const*, char const*, icon_size, BBitmap*)
       BIconUtils::GetVectorIcon(BNode*, char const*, BBitmap*)
       BIconUtils::GetVectorIcon(unsigned char const*, unsigned long, BBitmap*)
       BIconUtils::operator=(BIconUtils const&)
       BInputDevice::_SetNameAndType(char const*, input_device_type)
       BInputDevice::~BInputDevice()
       BInputDevice::~BInputDevice()
       BInputDevice::BInputDevice()
       BInputDevice::BInputDevice()
       BInputDevice::Control(input_device_type, unsigned int, BMessage*)
       BInputDevice::Control(unsigned int, BMessage*)
       BInputDevice::IsRunning() const
       BInputDevice::Name() const
       BInputDevice::Start()
       BInputDevice::Start(input_device_type)
       BInputDevice::Stop()
       BInputDevice::Stop(input_device_type)
       BInputDevice::Type() const
       BInvoker::_ReservedInvoker1()
       BInvoker::_ReservedInvoker2()
       BInvoker::_ReservedInvoker3()
       BInvoker::~BInvoker()
       BInvoker::~BInvoker()
       BInvoker::~BInvoker()
       BInvoker::BeginInvokeNotify(unsigned int)
       BInvoker::BInvoker()
       BInvoker::BInvoker()
       BInvoker::BInvoker(BInvoker const&)
       BInvoker::BInvoker(BInvoker const&)
       BInvoker::BInvoker(BMessage*, BHandler const*, BLooper const*)
       BInvoker::BInvoker(BMessage*, BHandler const*, BLooper const*)
       BInvoker::BInvoker(BMessage*, BMessenger)
       BInvoker::BInvoker(BMessage*, BMessenger)
       BInvoker::Command() const
       BInvoker::EndInvokeNotify()
       BInvoker::HandlerForReply() const
       BInvoker::Invoke(BMessage*)
       BInvoker::InvokeKind(bool*)
       BInvoker::InvokeNotify(BMessage*, unsigned int)
       BInvoker::IsTargetLocal() const
       BInvoker::Message() const
       BInvoker::Messenger() const
       BInvoker::operator=(BInvoker const&)
       BInvoker::SetHandlerForReply(BHandler*)
       BInvoker::SetMessage(BMessage*)
       BInvoker::SetTarget(BHandler const*, BLooper const*)
       BInvoker::SetTarget(BMessenger)
       BInvoker::SetTimeout(long)
       BInvoker::Target(BLooper**) const
       BInvoker::Timeout() const
       bitmaps_support_space(color_space, unsigned int*)
       BKey::~BKey()
       BKey::~BKey()
       BKey::~BKey()
       BKey::BKey()
       BKey::BKey()
       BKey::BKey(BKey&)
       BKey::BKey(BKey&)
       BKey::BKey(BKeyPurpose, char const*, char const*, unsigned char const*, unsigned long)
       BKey::BKey(BKeyPurpose, char const*, char const*, unsigned char const*, unsigned long)
       BKey::CreationTime() const
       BKey::Data() const
       BKey::DataLength() const
       BKey::Flatten(BMessage&) const
       BKey::GetData(unsigned char*, unsigned long) const
       BKey::Identifier() const
       BKey::operator!=(BKey const&) const
       BKey::operator=(BKey const&)
       BKey::operator==(BKey const&) const
       BKey::Owner() const
       BKey::PrintToStream()
       BKey::Purpose() const
       BKey::SecondaryIdentifier() const
       BKey::SetData(unsigned char const*, unsigned long)
       BKey::SetIdentifier(char const*)
       BKey::SetPurpose(BKeyPurpose)
       BKey::SetSecondaryIdentifier(char const*)
       BKey::SetTo(BKeyPurpose, char const*, char const*, unsigned char const*, unsigned long)
       BKey::Unflatten(BMessage const&)
       BKey::Unset()
       BKeyStore::_SendKeyMessage(BMessage&, BMessage*) const
       BKeyStore::~BKeyStore()
       BKeyStore::~BKeyStore()
       BKeyStore::~BKeyStore()
       BKeyStore::AddKey(BKey const&)
       BKeyStore::AddKey(char const*, BKey const&)
       BKeyStore::AddKeyring(char const*)
       BKeyStore::AddKeyringToMaster(char const*)
       BKeyStore::BKeyStore()
       BKeyStore::BKeyStore()
       BKeyStore::GeneratePassword(BPasswordKey&, unsigned long, unsigned int)
       BKeyStore::GetKey(BKeyType, char const*, BKey&)
       BKeyStore::GetKey(BKeyType, char const*, char const*, BKey&)
       BKeyStore::GetKey(BKeyType, char const*, char const*, bool, BKey&)
       BKeyStore::GetKey(char const*, BKeyType, char const*, BKey&)
       BKeyStore::GetKey(char const*, BKeyType, char const*, char const*, BKey&)
       BKeyStore::GetKey(char const*, BKeyType, char const*, char const*, bool, BKey&)
       BKeyStore::GetNextApplication(char const*, unsigned int&, BString&) const
       BKeyStore::GetNextApplication(unsigned int&, BString&) const
       BKeyStore::GetNextKey(BKeyType, BKeyPurpose, unsigned int&, BKey&)
       BKeyStore::GetNextKey(char const*, BKeyType, BKeyPurpose, unsigned int&, BKey&)
       BKeyStore::GetNextKey(char const*, unsigned int&, BKey&)
       BKeyStore::GetNextKey(unsigned int&, BKey&)
       BKeyStore::GetNextKeyring(unsigned int&, BString&)
       BKeyStore::GetNextMasterKeyring(unsigned int&, BString&)
       BKeyStore::IsKeyringUnlocked(char const*)
       BKeyStore::LockKeyring(char const*)
       BKeyStore::LockMasterKeyring()
       BKeyStore::PasswordStrength(char const*)
       BKeyStore::RemoveApplication(char const*, char const*)
       BKeyStore::RemoveApplication(char const*)
       BKeyStore::RemoveKey(BKey const&)
       BKeyStore::RemoveKey(char const*, BKey const&)
       BKeyStore::RemoveKeyring(char const*)
       BKeyStore::RemoveKeyringFromMaster(char const*)
       BKeyStore::RemoveMasterUnlockKey()
       BKeyStore::RemoveUnlockKey(char const*)
       BKeyStore::SetMasterUnlockKey(BKey const&)
       BKeyStore::SetUnlockKey(char const*, BKey const&)
       BLanguage::~BLanguage()
       BLanguage::~BLanguage()
       BLanguage::BLanguage()
       BLanguage::BLanguage()
       BLanguage::BLanguage(BLanguage const&)
       BLanguage::BLanguage(BLanguage const&)
       BLanguage::BLanguage(char const*)
       BLanguage::BLanguage(char const*)
       BLanguage::Code() const
       BLanguage::CountryCode() const
       BLanguage::Direction() const
       BLanguage::GetIcon(BBitmap*) const
       BLanguage::GetName(BString&, BLanguage const*) const
       BLanguage::GetNativeName(BString&) const
       BLanguage::GetString(unsigned int) const
       BLanguage::ID() const
       BLanguage::IsCountrySpecific() const
       BLanguage::IsVariant() const
       BLanguage::operator=(BLanguage const&)
       BLanguage::ScriptCode() const
       BLanguage::SetTo(char const*)
       BLanguage::Variant() const
       BLaunchRoster::_GetInfo(unsigned int, char const*, BMessage&)
       BLaunchRoster::_GetLog(BMessage const*, BMessage&)
       BLaunchRoster::_InitMessenger()
       BLaunchRoster::_SendRequest(BMessage&, BMessage&)
       BLaunchRoster::_SendRequest(BMessage&)
       BLaunchRoster::_UpdateEvent(unsigned int, BMessenger const&, char const*, unsigned int)
       BLaunchRoster::~BLaunchRoster()
       BLaunchRoster::~BLaunchRoster()
       BLaunchRoster::BLaunchRoster()
       BLaunchRoster::BLaunchRoster()
       BLaunchRoster::GetData(BMessage&)
       BLaunchRoster::GetData(char const*, BMessage&)
       BLaunchRoster::GetJobInfo(char const*, BMessage&)
       BLaunchRoster::GetJobs(char const*, BStringList&)
       BLaunchRoster::GetLog(BMessage const&, BMessage&)
       BLaunchRoster::GetLog(BMessage&)
       BLaunchRoster::GetPort(char const*, char const*)
       BLaunchRoster::GetPort(char const*)
       BLaunchRoster::GetTargetInfo(char const*, BMessage&)
       BLaunchRoster::GetTargets(BStringList&)
       BLaunchRoster::InitCheck() const
       BLaunchRoster::NotifyEvent(BMessenger const&, char const*)
       BLaunchRoster::Private::Private(BLaunchRoster*)
       BLaunchRoster::Private::Private(BLaunchRoster*)
       BLaunchRoster::Private::Private(BLaunchRoster&)
       BLaunchRoster::Private::Private(BLaunchRoster&)
       BLaunchRoster::Private::RegisterSessionDaemon(BMessenger const&)
       BLaunchRoster::RegisterEvent(BMessenger const&, char const*, unsigned int)
       BLaunchRoster::ResetStickyEvent(BMessenger const&, char const*)
       BLaunchRoster::SetEnabled(char const*, bool)
       BLaunchRoster::Start(char const*)
       BLaunchRoster::StartSession(char const*)
       BLaunchRoster::Stop(char const*, bool)
       BLaunchRoster::StopTarget(char const*, bool)
       BLaunchRoster::Target(char const*, BMessage const*, char const*)
       BLaunchRoster::Target(char const*, BMessage const&, char const*)
       BLaunchRoster::UnregisterEvent(BMessenger const&, char const*)
       BLayout::_LayoutWithinContext(bool, BLayoutContext*)
       BLayout::_ReservedLayout1()
       BLayout::_ReservedLayout10()
       BLayout::_ReservedLayout2()
       BLayout::_ReservedLayout3()
       BLayout::_ReservedLayout4()
       BLayout::_ReservedLayout5()
       BLayout::_ReservedLayout6()
       BLayout::_ReservedLayout7()
       BLayout::_ReservedLayout8()
       BLayout::_ReservedLayout9()
       BLayout::~BLayout()
       BLayout::~BLayout()
       BLayout::~BLayout()
       BLayout::AddItem(BLayoutItem*)
       BLayout::AddItem(int, BLayoutItem*)
       BLayout::AddView(BView*)
       BLayout::AddView(int, BView*)
       BLayout::AllArchived(BMessage*) const
       BLayout::AllUnarchived(BMessage const*)
       BLayout::AncestorsVisible() const
       BLayout::AncestorVisibilityChanged(bool)
       BLayout::Archive(BMessage*, bool) const
       BLayout::AttachedToLayout()
       BLayout::BLayout()
       BLayout::BLayout()
       BLayout::BLayout(BMessage*)
       BLayout::BLayout(BMessage*)
       BLayout::CountItems() const
       BLayout::DetachedFromLayout(BLayout*)
       BLayout::DisableLayoutInvalidation()
       BLayout::EnableLayoutInvalidation()
       BLayout::IndexOfItem(BLayoutItem const*) const
       BLayout::IndexOfView(BView*) const
       BLayout::InvalidateLayout(bool)
       BLayout::IsValid()
       BLayout::ItemAdded(BLayoutItem*, int)
       BLayout::ItemArchived(BMessage*, BLayoutItem*, int) const
       BLayout::ItemAt(int) const
       BLayout::ItemRemoved(BLayoutItem*, int)
       BLayout::ItemUnarchived(BMessage const*, BLayoutItem*, int)
       BLayout::LayoutArea()
       BLayout::LayoutContext() const
       BLayout::LayoutInvalidated(bool)
       BLayout::LayoutItems(bool)
       BLayout::Owner() const
       BLayout::OwnerChanged(BView*)
       BLayout::Perform(unsigned int, void*)
       BLayout::Relayout(bool)
       BLayout::RemoveItem(BLayoutItem*)
       BLayout::RemoveItem(int)
       BLayout::RemoveView(BView*)
       BLayout::RequireLayout()
       BLayout::ResetLayoutInvalidation()
       BLayout::SetOwner(BView*)
       BLayout::SetTarget(BView*)
       BLayout::TargetView() const
       BLayout::View()
       BLayout::VisibilityChanged(bool)
       BLayoutContext::~BLayoutContext()
       BLayoutContext::~BLayoutContext()
       BLayoutContext::AddListener(BLayoutContextListener*)
       BLayoutContext::BLayoutContext()
       BLayoutContext::BLayoutContext()
       BLayoutContext::RemoveListener(BLayoutContextListener*)
       BLayoutContextListener::_ReservedLayoutContextListener1()
       BLayoutContextListener::_ReservedLayoutContextListener2()
       BLayoutContextListener::_ReservedLayoutContextListener3()
       BLayoutContextListener::_ReservedLayoutContextListener4()
       BLayoutContextListener::_ReservedLayoutContextListener5()
       BLayoutContextListener::~BLayoutContextListener()
       BLayoutContextListener::~BLayoutContextListener()
       BLayoutContextListener::~BLayoutContextListener()
       BLayoutContextListener::BLayoutContextListener()
       BLayoutContextListener::BLayoutContextListener()
       BLayoutItem::_ReservedLayoutItem1()
       BLayoutItem::_ReservedLayoutItem10()
       BLayoutItem::_ReservedLayoutItem2()
       BLayoutItem::_ReservedLayoutItem3()
       BLayoutItem::_ReservedLayoutItem4()
       BLayoutItem::_ReservedLayoutItem5()
       BLayoutItem::_ReservedLayoutItem6()
       BLayoutItem::_ReservedLayoutItem7()
       BLayoutItem::_ReservedLayoutItem8()
       BLayoutItem::_ReservedLayoutItem9()
       BLayoutItem::~BLayoutItem()
       BLayoutItem::~BLayoutItem()
       BLayoutItem::~BLayoutItem()
       BLayoutItem::AlignInFrame(BRect)
       BLayoutItem::AllArchived(BMessage*) const
       BLayoutItem::AllUnarchived(BMessage const*)
       BLayoutItem::AncestorVisibilityChanged(bool)
       BLayoutItem::Archive(BMessage*, bool) const
       BLayoutItem::AttachedToLayout()
       BLayoutItem::BLayoutItem()
       BLayoutItem::BLayoutItem()
       BLayoutItem::BLayoutItem(BMessage*)
       BLayoutItem::BLayoutItem(BMessage*)
       BLayoutItem::DetachedFromLayout(BLayout*)
       BLayoutItem::GetHeightForWidth(float, float*, float*, float*)
       BLayoutItem::HasHeightForWidth()
       BLayoutItem::InvalidateLayout(bool)
       BLayoutItem::Layout() const
       BLayoutItem::LayoutData() const
       BLayoutItem::LayoutInvalidated(bool)
       BLayoutItem::Perform(unsigned int, void*)
       BLayoutItem::Relayout(bool)
       BLayoutItem::RemoveSelf()
       BLayoutItem::SetExplicitSize(BSize)
       BLayoutItem::SetLayout(BLayout*)
       BLayoutItem::SetLayoutData(void*)
       BLayoutItem::View()
       BLayoutUtils::_GetLayoutTreeDump(BLayoutItem*, int, bool, BString&)
       BLayoutUtils::_GetLayoutTreeDump(BView*, int, BString&)
       BLayoutUtils::AddDistances(float, float, float)
       BLayoutUtils::AddDistances(float, float)
       BLayoutUtils::AddSizesInt32(int, int, int)
       BLayoutUtils::AddSizesInt32(int, int)
       BLayoutUtils::AlignInFrame(BRect, BSize, BAlignment)
       BLayoutUtils::AlignInFrame(BView*, BRect)
       BLayoutUtils::AlignOnRect(BRect, BSize, BAlignment)
       BLayoutUtils::ComposeAlignment(BAlignment, BAlignment)
       BLayoutUtils::ComposeSize(BSize, BSize)
       BLayoutUtils::FixSizeConstraints(BSize&, BSize&, BSize&)
       BLayoutUtils::FixSizeConstraints(float&, float&, float&)
       BLayoutUtils::GetLayoutTreeDump(BLayoutItem*)
       BLayoutUtils::GetLayoutTreeDump(BView*)
       BLayoutUtils::MoveIntoFrame(BRect, BSize)
       BLayoutUtils::SubtractDistances(float, float)
       BLayoutUtils::SubtractSizesInt32(int, int)
       blend_color(rgb_color, rgb_color, unsigned char)
       BList::_ReservedList1()
       BList::_ReservedList2()
       BList::_ResizeArray(int)
       BList::~BList()
       BList::~BList()
       BList::~BList()
       BList::AddItem(void*, int)
       BList::AddItem(void*)
       BList::AddList(BList const*, int)
       BList::AddList(BList const*)
       BList::BList(BList const&)
       BList::BList(BList const&)
       BList::BList(int)
       BList::BList(int)
       BList::CountItems() const
       BList::DoForEach(bool (*)(void*, void*), void*)
       BList::DoForEach(bool (*)(void*))
       BList::FirstItem() const
       BList::HasItem(void const*) const
       BList::HasItem(void*) const
       BList::IndexOf(void const*) const
       BList::IndexOf(void*) const
       BList::IsEmpty() const
       BList::ItemAt(int) const
       BList::ItemAtFast(int) const
       BList::Items() const
       BList::LastItem() const
       BList::MakeEmpty()
       BList::MoveItem(int, int)
       BList::operator!=(BList const&) const
       BList::operator=(BList const&)
       BList::operator==(BList const&) const
       BList::RemoveItem(int)
       BList::RemoveItem(void*)
       BList::RemoveItems(int, int)
       BList::ReplaceItem(int, void*)
       BList::SortItems(int (*)(void const*, void const*))
       BList::SwapItems(int, int)
       BListItem::_ReservedListItem1()
       BListItem::_ReservedListItem2()
       BListItem::~BListItem()
       BListItem::~BListItem()
       BListItem::~BListItem()
       BListItem::Archive(BMessage*, bool) const
       BListItem::BListItem(BMessage*)
       BListItem::BListItem(BMessage*)
       BListItem::BListItem(unsigned int, bool)
       BListItem::BListItem(unsigned int, bool)
       BListItem::Deselect()
       BListItem::HasSubitems() const
       BListItem::Height() const
       BListItem::IsEnabled() const
       BListItem::IsExpanded() const
       BListItem::IsItemVisible() const
       BListItem::IsSelected() const
       BListItem::OutlineLevel() const
       BListItem::Perform(unsigned int, void*)
       BListItem::Select()
       BListItem::SetEnabled(bool)
       BListItem::SetExpanded(bool)
       BListItem::SetHeight(float)
       BListItem::SetItemVisible(bool)
       BListItem::SetOutlineLevel(unsigned int)
       BListItem::SetTop(float)
       BListItem::SetWidth(float)
       BListItem::Update(BView*, BFont const*)
       BListItem::Width() const
       BListView::_CalcFirstSelected(int)
       BListView::_CalcLastSelected(int)
       BListView::_Deselect(int)
       BListView::_DeselectAll(int, int)
       BListView::_FixupScrollBar()
       BListView::_InitObject(list_view_type)
       BListView::_InvalidateFrom(int)
       BListView::_MoveItem(int, int)
       BListView::_RecalcItemTops(int, int)
       BListView::_ReplaceItem(int, BListItem*)
       BListView::_RescanSelection(int, int)
       BListView::_ReservedListView2()
       BListView::_ReservedListView3()
       BListView::_ReservedListView4()
       BListView::_Select(int, bool)
       BListView::_Select(int, int, bool)
       BListView::_SwapItems(int, int)
       BListView::_UpdateItems()
       BListView::~BListView()
       BListView::~BListView()
       BListView::~BListView()
       BListView::AddItem(BListItem*, int)
       BListView::AddItem(BListItem*)
       BListView::AddList(BList*, int)
       BListView::AddList(BList*)
       BListView::AllAttached()
       BListView::AllDetached()
       BListView::Archive(BMessage*, bool) const
       BListView::AttachedToWindow()
       BListView::BListView(BMessage*)
       BListView::BListView(BMessage*)
       BListView::BListView(BRect, char const*, list_view_type, unsigned int, unsigned int)
       BListView::BListView(BRect, char const*, list_view_type, unsigned int, unsigned int)
       BListView::BListView(char const*, list_view_type, unsigned int)
       BListView::BListView(char const*, list_view_type, unsigned int)
       BListView::BListView(list_view_type)
       BListView::BListView(list_view_type)
       BListView::CountItems() const
       BListView::CurrentSelection(int) const
       BListView::Deselect(int)
       BListView::DeselectAll()
       BListView::DeselectExcept(int, int)
       BListView::DetachedFromWindow()
       BListView::DoForEach(bool (*)(BListItem*, void*), void*)
       BListView::DoForEach(bool (*)(BListItem*))
       BListView::DoMiscellaneous(BListView::MiscCode, BListView::MiscData*)
       BListView::Draw(BRect)
       BListView::DrawItem(BListItem*, BRect, bool)
       BListView::FirstItem() const
       BListView::FrameMoved(BPoint)
       BListView::FrameResized(float, float)
       BListView::GetPreferredSize(float*, float*)
       BListView::GetSupportedSuites(BMessage*)
       BListView::HasItem(BListItem*) const
       BListView::IndexOf(BListItem*) const
       BListView::IndexOf(BPoint) const
       BListView::InitiateDrag(BPoint, int, bool)
       BListView::Instantiate(BMessage*)
       BListView::InvalidateItem(int)
       BListView::InvocationCommand() const
       BListView::InvocationMessage() const
       BListView::Invoke(BMessage*)
       BListView::IsEmpty() const
       BListView::IsItemSelected(int) const
       BListView::ItemAt(int) const
       BListView::ItemFrame(int)
       BListView::Items() const
       BListView::KeyDown(char const*, int)
       BListView::LastItem() const
       BListView::ListType() const
       BListView::MakeEmpty()
       BListView::MakeFocus(bool)
       BListView::MaxSize()
       BListView::MessageReceived(BMessage*)
       BListView::MinSize()
       BListView::MouseDown(BPoint)
       BListView::MouseMoved(BPoint, unsigned int, BMessage const*)
       BListView::MouseUp(BPoint)
       BListView::MoveItem(int, int)
       BListView::operator=(BListView const&)
       BListView::Perform(unsigned int, void*)
       BListView::PreferredSize()
       BListView::RemoveItem(BListItem*)
       BListView::RemoveItem(int)
       BListView::RemoveItems(int, int)
       BListView::ReplaceItem(int, BListItem*)
       BListView::ResizeToPreferred()
       BListView::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BListView::ScrollTo(BPoint)
       BListView::ScrollToSelection()
       BListView::Select(int, bool)
       BListView::Select(int, int, bool)
       BListView::SelectionChanged()
       BListView::SelectionCommand() const
       BListView::SelectionMessage() const
       BListView::SetFont(BFont const*, unsigned int)
       BListView::SetInvocationMessage(BMessage*)
       BListView::SetListType(list_view_type)
       BListView::SetSelectionMessage(BMessage*)
       BListView::SortItems(int (*)(void const*, void const*))
       BListView::SwapItems(int, int)
       BListView::TargetedByScrollView(BScrollView*)
       BListView::WindowActivated(bool)
       BLocale::~BLocale()
       BLocale::~BLocale()
       BLocale::BLocale(BLanguage const*, BFormattingConventions const*)
       BLocale::BLocale(BLanguage const*, BFormattingConventions const*)
       BLocale::BLocale(BLocale const&)
       BLocale::BLocale(BLocale const&)
       BLocale::Default()
       BLocale::GetCollator(BCollator*) const
       BLocale::GetFormattingConventions(BFormattingConventions*) const
       BLocale::GetLanguage(BLanguage*) const
       BLocale::GetString(unsigned int) const
       BLocale::operator=(BLocale const&)
       BLocale::SetCollator(BCollator const&)
       BLocale::SetFormattingConventions(BFormattingConventions const&)
       BLocale::SetLanguage(BLanguage const&)
       BLocaleRoster::_GetCatalog(BCatalog*, int*)
       BLocaleRoster::_PrepareCatalogEntry(entry_ref const&, BString&, BString&, BString&, bool)
       BLocaleRoster::~BLocaleRoster()
       BLocaleRoster::~BLocaleRoster()
       BLocaleRoster::BLocaleRoster()
       BLocaleRoster::BLocaleRoster()
       BLocaleRoster::Default()
       BLocaleRoster::GetAvailableCatalogs(BMessage*, char const*, char const*, int) const
       BLocaleRoster::GetAvailableCountries(BMessage*) const
       BLocaleRoster::GetAvailableLanguages(BMessage*) const
       BLocaleRoster::GetAvailableTimeZones(BMessage*) const
       BLocaleRoster::GetAvailableTimeZonesForCountry(BMessage*, char const*) const
       BLocaleRoster::GetAvailableTimeZonesWithRegionInfo(BMessage*) const
       BLocaleRoster::GetDefaultLocale() const
       BLocaleRoster::GetDefaultTimeZone(BTimeZone*) const
       BLocaleRoster::GetFlagIconForCountry(BBitmap*, char const*)
       BLocaleRoster::GetFlagIconForLanguage(BBitmap*, char const*)
       BLocaleRoster::GetLanguage(char const*, BLanguage**) const
       BLocaleRoster::GetLocalizedFileName(BString&, entry_ref const&, bool)
       BLocaleRoster::GetPreferredLanguages(BMessage*) const
       BLocaleRoster::IsFilesystemTranslationPreferred() const
       BLocaleRoster::kCatFingerprintAttr
       BLocaleRoster::kCatLangAttr
       BLocaleRoster::kCatSigAttr
       BLocaleRoster::kEmbeddedCatAttr
       BLocaleRoster::kEmbeddedCatResId
       BLocaleRoster::Refresh()
       BLocker::~BLocker()
       BLocker::~BLocker()
       BLocker::~BLocker()
       BLocker::AcquireLock(long, int*)
       BLocker::BLocker()
       BLocker::BLocker()
       BLocker::BLocker(bool)
       BLocker::BLocker(bool)
       BLocker::BLocker(char const*, bool, bool)
       BLocker::BLocker(char const*, bool, bool)
       BLocker::BLocker(char const*, bool)
       BLocker::BLocker(char const*, bool)
       BLocker::BLocker(char const*)
       BLocker::BLocker(char const*)
       BLocker::CountLockRequests() const
       BLocker::CountLocks() const
       BLocker::InitCheck() const
       BLocker::InitLocker(char const*, bool)
       BLocker::IsLocked() const
       BLocker::Lock()
       BLocker::LockingThread() const
       BLocker::LockWithTimeout(long)
       BLocker::Sem() const
       BLocker::Unlock()
       BLooper::_AddMessagePriv(BMessage*)
       BLooper::_ApplyFilters(BList*, BMessage*, BHandler*)
       BLooper::_HandlerFilter(BMessage*, BHandler*)
       BLooper::_InitData(char const*, int, int, int)
       BLooper::_Lock(BLooper*, int, long)
       BLooper::_LockComplete(BLooper*, int, int, int, long)
       BLooper::_PostMessage(BMessage*, BHandler*, BHandler*)
       BLooper::_QuitRequested(BMessage*)
       BLooper::_ReservedLooper1()
       BLooper::_ReservedLooper2()
       BLooper::_ReservedLooper3()
       BLooper::_ReservedLooper4()
       BLooper::_ReservedLooper5()
       BLooper::_ReservedLooper6()
       BLooper::_task0_(void*)
       BLooper::_TopLevelFilter(BMessage*, BHandler*)
       BLooper::~BLooper()
       BLooper::~BLooper()
       BLooper::~BLooper()
       BLooper::AddCommonFilter(BMessageFilter*)
       BLooper::AddHandler(BHandler*)
       BLooper::AddMessage(BMessage*)
       BLooper::Archive(BMessage*, bool) const
       BLooper::AssertLocked() const
       BLooper::BLooper(BMessage*)
       BLooper::BLooper(BMessage*)
       BLooper::BLooper(char const*, int, int)
       BLooper::BLooper(char const*, int, int)
       BLooper::BLooper(int, int, char const*)
       BLooper::BLooper(int, int, char const*)
       BLooper::check_lock()
       BLooper::CommonFilterList() const
       BLooper::ConvertToMessage(void*, int)
       BLooper::CountHandlers() const
       BLooper::CountLockRequests() const
       BLooper::CountLocks() const
       BLooper::CurrentMessage() const
       BLooper::DetachCurrentMessage()
       BLooper::DispatchExternalMessage(BMessage*, BHandler*, bool&)
       BLooper::DispatchMessage(BMessage*, BHandler*)
       BLooper::GetSupportedSuites(BMessage*)
       BLooper::HandlerAt(int) const
       BLooper::IndexOf(BHandler*) const
       BLooper::Instantiate(BMessage*)
       BLooper::IsLocked() const
       BLooper::IsMessageWaiting() const
       BLooper::Lock()
       BLooper::LockingThread() const
       BLooper::LockWithTimeout(long)
       BLooper::Loop()
       BLooper::LooperForThread(int)
       BLooper::MessageFromPort(long)
       BLooper::MessageQueue() const
       BLooper::MessageReceived(BMessage*)
       BLooper::Perform(unsigned int, void*)
       BLooper::PostMessage(BMessage*, BHandler*, BHandler*)
       BLooper::PostMessage(BMessage*)
       BLooper::PostMessage(unsigned int, BHandler*, BHandler*)
       BLooper::PostMessage(unsigned int)
       BLooper::PreferredHandler() const
       BLooper::Quit()
       BLooper::QuitRequested()
       BLooper::ReadMessageFromPort(long)
       BLooper::ReadRawFromPort(int*, long)
       BLooper::RemoveCommonFilter(BMessageFilter*)
       BLooper::RemoveHandler(BHandler*)
       BLooper::resolve_specifier(BHandler*, BMessage*)
       BLooper::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BLooper::Run()
       BLooper::Sem() const
       BLooper::SetCommonFilterList(BList*)
       BLooper::SetPreferredHandler(BHandler*)
       BLooper::task_looper()
       BLooper::Team() const
       BLooper::Thread() const
       BLooper::Unlock()
       BLooper::UnlockFully()
       BMallocIO::_ReservedMallocIO1()
       BMallocIO::_ReservedMallocIO2()
       BMallocIO::~BMallocIO()
       BMallocIO::~BMallocIO()
       BMallocIO::~BMallocIO()
       BMallocIO::BMallocIO()
       BMallocIO::BMallocIO()
       BMallocIO::BMallocIO(BMallocIO const&)
       BMallocIO::BMallocIO(BMallocIO const&)
       BMallocIO::Buffer() const
       BMallocIO::BufferLength() const
       BMallocIO::operator=(BMallocIO const&)
       BMallocIO::Position() const
       BMallocIO::ReadAt(long, void*, unsigned long)
       BMallocIO::Seek(long, unsigned int)
       BMallocIO::SetBlockSize(unsigned long)
       BMallocIO::SetSize(long)
       BMallocIO::WriteAt(long, void const*, unsigned long)
       BMemoryIO::_ReservedMemoryIO1()
       BMemoryIO::_ReservedMemoryIO2()
       BMemoryIO::~BMemoryIO()
       BMemoryIO::~BMemoryIO()
       BMemoryIO::~BMemoryIO()
       BMemoryIO::BMemoryIO(BMemoryIO const&)
       BMemoryIO::BMemoryIO(BMemoryIO const&)
       BMemoryIO::BMemoryIO(void const*, unsigned long)
       BMemoryIO::BMemoryIO(void const*, unsigned long)
       BMemoryIO::BMemoryIO(void*, unsigned long)
       BMemoryIO::BMemoryIO(void*, unsigned long)
       BMemoryIO::operator=(BMemoryIO const&)
       BMemoryIO::Position() const
       BMemoryIO::ReadAt(long, void*, unsigned long)
       BMemoryIO::Seek(long, unsigned int)
       BMemoryIO::SetSize(long)
       BMemoryIO::WriteAt(long, void const*, unsigned long)
       BMenu::_AddDynamicItems(bool)
       BMenu::_AddItem(BMenuItem*, int)
       BMenu::_CacheFontInfo()
       BMenu::_CalcFrame(BPoint, bool*)
       BMenu::_CalcTriggers()
       BMenu::_ChooseTrigger(char const*, int&, unsigned int&, BPrivate::TriggerList&)
       BMenu::_ComputeColumnLayout(int, bool, bool, BRect*, BRect&)
       BMenu::_ComputeLayout(int, bool, bool, float*, float*)
       BMenu::_ComputeMatrixLayout(BRect&)
       BMenu::_ComputeRowLayout(int, bool, bool, BRect&)
       BMenu::_CustomTrackingWantsToQuit()
       BMenu::_DeleteMenuWindow()
       BMenu::_GetCommandKey(unsigned int&) const
       BMenu::_GetControlKey(unsigned int&) const
       BMenu::_GetMenuKey(unsigned int&) const
       BMenu::_GetOptionKey(unsigned int&) const
       BMenu::_GetShiftKey(unsigned int&) const
       BMenu::_Hide()
       BMenu::_HitTestItems(BPoint, BPoint) const
       BMenu::_InitData(BMessage*)
       BMenu::_InsertItemAtSpecifier(BMessage const&, int, BMenuItem*)
       BMenu::_Install(BWindow*)
       BMenu::_InvokeItem(BMenuItem*, bool)
       BMenu::_IsStickyMode() const
       BMenu::_ItemMarked(BMenuItem*)
       BMenu::_ItemScriptReceived(BMessage*, BMenuItem*)
       BMenu::_LayoutItems(int)
       BMenu::_MenuWindow()
       BMenu::_NextItem(BMenuItem*, bool) const
       BMenu::_OkToProceed(BMenuItem*, bool)
       BMenu::_OverSubmenu(BMenuItem*, BPoint)
       BMenu::_OverSuper(BPoint)
       BMenu::_QuitTracking(bool)
       BMenu::_RelayoutIfNeeded()
       BMenu::_RemoveItems(int, int, BMenuItem*, bool)
       BMenu::_ReservedMenu3()
       BMenu::_ReservedMenu4()
       BMenu::_ReservedMenu5()
       BMenu::_ReservedMenu6()
       BMenu::_ResolveItemSpecifier(BMessage const&, int, BMenuItem*&, int*)
       BMenu::_ScriptReceived(BMessage*)
       BMenu::_SelectItem(BMenuItem*, bool, bool, bool)
       BMenu::_SelectNextItem(BMenuItem*, bool)
       BMenu::_SetStickyMode(bool)
       BMenu::_Show(bool, bool)
       BMenu::_State(BMenuItem**) const
       BMenu::_Superbounds() const
       BMenu::_Track(int*, long)
       BMenu::_Uninstall()
       BMenu::_UpdateNavigationArea(BPoint, BRect&, BRect&)
       BMenu::_UpdateStateClose(BMenuItem*, BPoint const&, unsigned int const&)
       BMenu::_UpdateStateOpenSelect(BMenuItem*, BPoint, BRect&, BRect&, long&, long&)
       BMenu::_UpdateWindowViewSize(bool const&)
       BMenu::_ValidatePreferredSize()
       BMenu::~BMenu()
       BMenu::~BMenu()
       BMenu::~BMenu()
       BMenu::AddDynamicItem(BMenu::add_state)
       BMenu::AddItem(BMenu*, BRect)
       BMenu::AddItem(BMenu*, int)
       BMenu::AddItem(BMenu*)
       BMenu::AddItem(BMenuItem*, BRect)
       BMenu::AddItem(BMenuItem*, int)
       BMenu::AddItem(BMenuItem*)
       BMenu::AddList(BList*, int)
       BMenu::AddSeparatorItem()
       BMenu::AllAttached()
       BMenu::AllDetached()
       BMenu::Archive(BMessage*, bool) const
       BMenu::AreTriggersEnabled() const
       BMenu::AttachedToWindow()
       BMenu::BMenu(BMessage*)
       BMenu::BMenu(BMessage*)
       BMenu::BMenu(BRect, char const*, unsigned int, unsigned int, menu_layout, bool)
       BMenu::BMenu(BRect, char const*, unsigned int, unsigned int, menu_layout, bool)
       BMenu::BMenu(char const*, float, float)
       BMenu::BMenu(char const*, float, float)
       BMenu::BMenu(char const*, menu_layout)
       BMenu::BMenu(char const*, menu_layout)
       BMenu::CountItems() const
       BMenu::DetachedFromWindow()
       BMenu::DoLayout()
       BMenu::Draw(BRect)
       BMenu::DrawBackground(BRect)
       BMenu::DrawItems(BRect)
       BMenu::FindItem(char const*) const
       BMenu::FindItem(unsigned int) const
       BMenu::FindMarked()
       BMenu::FindMarkedIndex()
       BMenu::FrameMoved(BPoint)
       BMenu::FrameResized(float, float)
       BMenu::GetItemMargins(float*, float*, float*, float*) const
       BMenu::GetPreferredSize(float*, float*)
       BMenu::GetSupportedSuites(BMessage*)
       BMenu::Hide()
       BMenu::IndexOf(BMenu*) const
       BMenu::IndexOf(BMenuItem*) const
       BMenu::Instantiate(BMessage*)
       BMenu::InvalidateLayout()
       BMenu::InvalidateLayout(bool)
       BMenu::IsEnabled() const
       BMenu::IsLabelFromMarked()
       BMenu::IsRadioMode() const
       BMenu::IsRedrawAfterSticky() const
       BMenu::ItemAt(int) const
       BMenu::KeyDown(char const*, int)
       BMenu::Layout() const
       BMenu::LayoutInvalidated(bool)
       BMenu::MakeFocus(bool)
       BMenu::MaxContentWidth() const
       BMenu::MaxSize()
       BMenu::MessageReceived(BMessage*)
       BMenu::MinSize()
       BMenu::MoveItem(int, int)
       BMenu::Perform(unsigned int, void*)
       BMenu::PreferredSize()
       BMenu::RemoveItem(BMenu*)
       BMenu::RemoveItem(BMenuItem*)
       BMenu::RemoveItem(int)
       BMenu::RemoveItems(int, int, bool)
       BMenu::ResizeToPreferred()
       BMenu::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BMenu::sCommandKey
       BMenu::sControlKey
       BMenu::ScreenLocation()
       BMenu::SetEnabled(bool)
       BMenu::SetItemMargins(float, float, float, float)
       BMenu::SetLabelFromMarked(bool)
       BMenu::SetMaxContentWidth(float)
       BMenu::SetRadioMode(bool)
       BMenu::SetTargetForItems(BHandler*)
       BMenu::SetTargetForItems(BMessenger)
       BMenu::SetTrackingHook(bool (*)(BMenu*, void*), void*)
       BMenu::SetTriggersEnabled(bool)
       BMenu::Show()
       BMenu::Show(bool)
       BMenu::sMenuInfo
       BMenu::sMenuKey
       BMenu::sOptionKey
       BMenu::SortItems(int (*)(BMenuItem const*, BMenuItem const*))
       BMenu::sShiftKey
       BMenu::SubmenuAt(int) const
       BMenu::Superitem() const
       BMenu::Supermenu() const
       BMenu::SwapItems(int, int)
       BMenu::Track(bool, BRect*)
       BMenuBar::_InitData(menu_layout)
       BMenuBar::_ReservedMenuBar1()
       BMenuBar::_ReservedMenuBar2()
       BMenuBar::_ReservedMenuBar3()
       BMenuBar::_ReservedMenuBar4()
       BMenuBar::_RestoreFocus()
       BMenuBar::_StealFocus()
       BMenuBar::_Track(int*, int, bool)
       BMenuBar::_TrackTask(void*)
       BMenuBar::~BMenuBar()
       BMenuBar::~BMenuBar()
       BMenuBar::~BMenuBar()
       BMenuBar::AllAttached()
       BMenuBar::AllDetached()
       BMenuBar::Archive(BMessage*, bool) const
       BMenuBar::AttachedToWindow()
       BMenuBar::BMenuBar(BMessage*)
       BMenuBar::BMenuBar(BMessage*)
       BMenuBar::BMenuBar(BRect, char const*, unsigned int, menu_layout, bool)
       BMenuBar::BMenuBar(BRect, char const*, unsigned int, menu_layout, bool)
       BMenuBar::BMenuBar(char const*, menu_layout, unsigned int)
       BMenuBar::BMenuBar(char const*, menu_layout, unsigned int)
       BMenuBar::Border() const
       BMenuBar::Borders() const
       BMenuBar::DetachedFromWindow()
       BMenuBar::Draw(BRect)
       BMenuBar::FrameMoved(BPoint)
       BMenuBar::FrameResized(float, float)
       BMenuBar::GetPreferredSize(float*, float*)
       BMenuBar::GetSupportedSuites(BMessage*)
       BMenuBar::Hide()
       BMenuBar::Instantiate(BMessage*)
       BMenuBar::MakeFocus(bool)
       BMenuBar::MaxSize()
       BMenuBar::MessageReceived(BMessage*)
       BMenuBar::MinSize()
       BMenuBar::MouseDown(BPoint)
       BMenuBar::MouseUp(BPoint)
       BMenuBar::operator=(BMenuBar const&)
       BMenuBar::Perform(unsigned int, void*)
       BMenuBar::PreferredSize()
       BMenuBar::ResizeToPreferred()
       BMenuBar::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BMenuBar::SetBorder(menu_bar_border)
       BMenuBar::SetBorders(unsigned int)
       BMenuBar::Show()
       BMenuBar::StartMenuBar(int, bool, bool, BRect*)
       BMenuBar::WindowActivated(bool)
       BMenuField::_AddMenu(BMenu*)
       BMenuField::_DrawLabel(BRect)
       BMenuField::_DrawMenuBar(BRect)
       BMenuField::_InitMenuBar(BMenu*, BRect, bool)
       BMenuField::_InitMenuBar(BMessage const*)
       BMenuField::_MenuBarOffset() const
       BMenuField::_MenuBarWidth() const
       BMenuField::_MenuTask()
       BMenuField::_ReservedMenuField1()
       BMenuField::_ReservedMenuField2()
       BMenuField::_ReservedMenuField3()
       BMenuField::_thread_entry(void*)
       BMenuField::_UpdateFrame()
       BMenuField::_ValidateLayoutData()
       BMenuField::~BMenuField()
       BMenuField::~BMenuField()
       BMenuField::~BMenuField()
       BMenuField::Alignment() const
       BMenuField::AllArchived(BMessage*) const
       BMenuField::AllAttached()
       BMenuField::AllDetached()
       BMenuField::AllUnarchived(BMessage const*)
       BMenuField::Archive(BMessage*, bool) const
       BMenuField::AttachedToWindow()
       BMenuField::BMenuField(BMessage*)
       BMenuField::BMenuField(BMessage*)
       BMenuField::BMenuField(BRect, char const*, char const*, BMenu*, bool, unsigned int, unsigned int)
       BMenuField::BMenuField(BRect, char const*, char const*, BMenu*, bool, unsigned int, unsigned int)
       BMenuField::BMenuField(BRect, char const*, char const*, BMenu*, unsigned int, unsigned int)
       BMenuField::BMenuField(BRect, char const*, char const*, BMenu*, unsigned int, unsigned int)
       BMenuField::BMenuField(char const*, BMenu*, BMessage*)
       BMenuField::BMenuField(char const*, BMenu*, BMessage*)
       BMenuField::BMenuField(char const*, BMenu*, unsigned int)
       BMenuField::BMenuField(char const*, BMenu*, unsigned int)
       BMenuField::BMenuField(char const*, char const*, BMenu*, BMessage*, unsigned int)
       BMenuField::BMenuField(char const*, char const*, BMenu*, BMessage*, unsigned int)
       BMenuField::BMenuField(char const*, char const*, BMenu*, unsigned int)
       BMenuField::BMenuField(char const*, char const*, BMenu*, unsigned int)
       BMenuField::CreateLabelLayoutItem()
       BMenuField::CreateMenuBarLayoutItem()
       BMenuField::DetachedFromWindow()
       BMenuField::Divider() const
       BMenuField::DoLayout()
       BMenuField::Draw(BRect)
       BMenuField::FrameMoved(BPoint)
       BMenuField::FrameResized(float, float)
       BMenuField::GetPreferredSize(float*, float*)
       BMenuField::GetSupportedSuites(BMessage*)
       BMenuField::HidePopUpMarker()
       BMenuField::InitMenu(BMenu*)
       BMenuField::InitObject(char const*)
       BMenuField::InitObject2()
       BMenuField::Instantiate(BMessage*)
       BMenuField::InvalidateLayout(bool)
       BMenuField::IsEnabled() const
       BMenuField::KeyDown(char const*, int)
       BMenuField::Label() const
       BMenuField::LabelLayoutItem::Archive(BMessage*, bool) const
       BMenuField::LabelLayoutItem::BaseAlignment()
       BMenuField::LabelLayoutItem::BaseMaxSize()
       BMenuField::LabelLayoutItem::BaseMinSize()
       BMenuField::LabelLayoutItem::BasePreferredSize()
       BMenuField::LabelLayoutItem::Frame()
       BMenuField::LabelLayoutItem::FrameInParent() const
       BMenuField::LabelLayoutItem::Instantiate(BMessage*)
       BMenuField::LabelLayoutItem::IsVisible()
       BMenuField::LabelLayoutItem::LabelLayoutItem(BMenuField*)
       BMenuField::LabelLayoutItem::LabelLayoutItem(BMenuField*)
       BMenuField::LabelLayoutItem::LabelLayoutItem(BMessage*)
       BMenuField::LabelLayoutItem::LabelLayoutItem(BMessage*)
       BMenuField::LabelLayoutItem::SetFrame(BRect)
       BMenuField::LabelLayoutItem::SetParent(BMenuField*)
       BMenuField::LabelLayoutItem::SetVisible(bool)
       BMenuField::LabelLayoutItem::View()
       BMenuField::LayoutInvalidated(bool)
       BMenuField::MakeFocus(bool)
       BMenuField::MaxSize()
       BMenuField::Menu() const
       BMenuField::MenuBar() const
       BMenuField::MenuBarLayoutItem::Archive(BMessage*, bool) const
       BMenuField::MenuBarLayoutItem::BaseAlignment()
       BMenuField::MenuBarLayoutItem::BaseMaxSize()
       BMenuField::MenuBarLayoutItem::BaseMinSize()
       BMenuField::MenuBarLayoutItem::BasePreferredSize()
       BMenuField::MenuBarLayoutItem::Frame()
       BMenuField::MenuBarLayoutItem::FrameInParent() const
       BMenuField::MenuBarLayoutItem::Instantiate(BMessage*)
       BMenuField::MenuBarLayoutItem::IsVisible()
       BMenuField::MenuBarLayoutItem::MenuBarLayoutItem(BMenuField*)
       BMenuField::MenuBarLayoutItem::MenuBarLayoutItem(BMenuField*)
       BMenuField::MenuBarLayoutItem::MenuBarLayoutItem(BMessage*)
       BMenuField::MenuBarLayoutItem::MenuBarLayoutItem(BMessage*)
       BMenuField::MenuBarLayoutItem::SetFrame(BRect)
       BMenuField::MenuBarLayoutItem::SetParent(BMenuField*)
       BMenuField::MenuBarLayoutItem::SetVisible(bool)
       BMenuField::MenuBarLayoutItem::View()
       BMenuField::MenuItem() const
       BMenuField::MessageReceived(BMessage*)
       BMenuField::MinSize()
       BMenuField::MouseDown(BPoint)
       BMenuField::MouseMoved(BPoint, unsigned int, BMessage const*)
       BMenuField::MouseUp(BPoint)
       BMenuField::Perform(unsigned int, void*)
       BMenuField::PreferredSize()
       BMenuField::ResizeToPreferred()
       BMenuField::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BMenuField::SetAlignment(alignment)
       BMenuField::SetDivider(float)
       BMenuField::SetEnabled(bool)
       BMenuField::SetLabel(char const*)
       BMenuField::ShowPopUpMarker()
       BMenuField::WindowActivated(bool)
       BMenuItem::_DrawControlChar(char, BPoint)
       BMenuItem::_DrawMarkSymbol()
       BMenuItem::_DrawShortcutSymbol(bool)
       BMenuItem::_DrawSubmenuSymbol()
       BMenuItem::_HighColor()
       BMenuItem::_InitData()
       BMenuItem::_InitMenuData(BMenu*)
       BMenuItem::_IsActivated()
       BMenuItem::_LowColor()
       BMenuItem::_ReservedMenuItem1()
       BMenuItem::_ReservedMenuItem2()
       BMenuItem::_ReservedMenuItem3()
       BMenuItem::_ReservedMenuItem4()
       BMenuItem::~BMenuItem()
       BMenuItem::~BMenuItem()
       BMenuItem::~BMenuItem()
       BMenuItem::Archive(BMessage*, bool) const
       BMenuItem::BMenuItem(BMenu*, BMessage*)
       BMenuItem::BMenuItem(BMenu*, BMessage*)
       BMenuItem::BMenuItem(BMenuItem const&)
       BMenuItem::BMenuItem(BMenuItem const&)
       BMenuItem::BMenuItem(BMessage*)
       BMenuItem::BMenuItem(BMessage*)
       BMenuItem::BMenuItem(char const*, BMessage*, char, unsigned int)
       BMenuItem::BMenuItem(char const*, BMessage*, char, unsigned int)
       BMenuItem::ContentLocation() const
       BMenuItem::Draw()
       BMenuItem::DrawContent()
       BMenuItem::Frame() const
       BMenuItem::GetContentSize(float*, float*)
       BMenuItem::Highlight(bool)
       BMenuItem::Install(BWindow*)
       BMenuItem::Instantiate(BMessage*)
       BMenuItem::Invoke(BMessage*)
       BMenuItem::IsEnabled() const
       BMenuItem::IsMarked() const
       BMenuItem::IsSelected() const
       BMenuItem::Label() const
       BMenuItem::Menu() const
       BMenuItem::operator=(BMenuItem const&)
       BMenuItem::Select(bool)
       BMenuItem::SetAutomaticTrigger(int, unsigned int)
       BMenuItem::SetEnabled(bool)
       BMenuItem::SetLabel(char const*)
       BMenuItem::SetMarked(bool)
       BMenuItem::SetShortcut(char, unsigned int)
       BMenuItem::SetSuper(BMenu*)
       BMenuItem::SetTrigger(char)
       BMenuItem::Shortcut(unsigned int*) const
       BMenuItem::Submenu() const
       BMenuItem::Trigger() const
       BMenuItem::TruncateLabel(float, char*)
       BMenuItem::Uninstall()
       BMergedDirectory::_FindBestEntry(dirent*)
       BMergedDirectory::~BMergedDirectory()
       BMergedDirectory::~BMergedDirectory()
       BMergedDirectory::~BMergedDirectory()
       BMergedDirectory::AddDirectory(BDirectory*)
       BMergedDirectory::AddDirectory(char const*)
       BMergedDirectory::BMergedDirectory(BMergedDirectory::BPolicy)
       BMergedDirectory::BMergedDirectory(BMergedDirectory::BPolicy)
       BMergedDirectory::CountEntries()
       BMergedDirectory::GetNextDirents(dirent*, unsigned long, int)
       BMergedDirectory::GetNextEntry(BEntry*, bool)
       BMergedDirectory::GetNextRef(entry_ref*)
       BMergedDirectory::Init()
       BMergedDirectory::Policy() const
       BMergedDirectory::Rewind()
       BMergedDirectory::SetPolicy(BMergedDirectory::BPolicy)
       BMergedDirectory::ShallPreferFirstEntry(entry_ref const&, int, entry_ref const&, int)
       BMessage::_AddField(char const*, unsigned int, bool, BMessage::field_header**)
       BMessage::_Clear()
       BMessage::_CopyForWrite()
       BMessage::_Dereference()
       BMessage::_FindField(char const*, unsigned int, BMessage::field_header**) const
       BMessage::_FlattenToArea(BMessage::message_header**) const
       BMessage::_HashName(char const*) const
       BMessage::_InitCommon(bool)
       BMessage::_InitHeader()
       BMessage::_PrintToStream(char const*) const
       BMessage::_Reference()
       BMessage::_RemoveField(BMessage::field_header*)
       BMessage::_ReservedMessage1()
       BMessage::_ReservedMessage2()
       BMessage::_ReservedMessage3()
       BMessage::_ResizeData(unsigned int, int)
       BMessage::_SendFlattenedMessage(void*, int, int, int, long)
       BMessage::_SendMessage(int, int, int, BMessage*, long, long) const
       BMessage::_SendMessage(int, int, int, long, bool, BMessenger&) const
       BMessage::_StaticCacheCleanup()
       BMessage::_StaticCleanup()
       BMessage::_StaticGetCachedReplyPort()
       BMessage::_StaticInit()
       BMessage::_StaticReInitForkedChild()
       BMessage::_UpdateOffsets(unsigned int, int)
       BMessage::_ValidateMessage()
       BMessage::~BMessage()
       BMessage::~BMessage()
       BMessage::~BMessage()
       BMessage::AddAlignment(char const*, BAlignment const&)
       BMessage::AddBool(char const*, bool)
       BMessage::AddColor(char const*, rgb_color)
       BMessage::AddData(char const*, unsigned int, void const*, long, bool, int)
       BMessage::AddDouble(char const*, double)
       BMessage::AddFlat(char const*, BFlattenable const*, int)
       BMessage::AddFlat(char const*, BFlattenable*, int)
       BMessage::AddFloat(char const*, float)
       BMessage::AddInt16(char const*, short)
       BMessage::AddInt32(char const*, int)
       BMessage::AddInt64(char const*, long)
       BMessage::AddInt8(char const*, signed char)
       BMessage::AddMessage(char const*, BMessage const*)
       BMessage::AddMessenger(char const*, BMessenger)
       BMessage::AddNodeRef(char const*, node_ref const*)
       BMessage::AddPoint(char const*, BPoint)
       BMessage::AddPointer(char const*, void const*)
       BMessage::AddRect(char const*, BRect)
       BMessage::AddRef(char const*, entry_ref const*)
       BMessage::AddSize(char const*, BSize)
       BMessage::AddSpecifier(BMessage const*)
       BMessage::AddSpecifier(char const*, char const*)
       BMessage::AddSpecifier(char const*, int, int)
       BMessage::AddSpecifier(char const*, int)
       BMessage::AddSpecifier(char const*)
       BMessage::AddString(char const*, BString const&)
       BMessage::AddString(char const*, char const*)
       BMessage::AddStrings(char const*, BStringList const&)
       BMessage::AddUInt16(char const*, unsigned short)
       BMessage::AddUInt32(char const*, unsigned int)
       BMessage::AddUInt64(char const*, unsigned long)
       BMessage::AddUInt8(char const*, unsigned char)
       BMessage::Append(BMessage const&)
       BMessage::BMessage()
       BMessage::BMessage()
       BMessage::BMessage(BMessage const&)
       BMessage::BMessage(BMessage const&)
       BMessage::BMessage(BMessage*)
       BMessage::BMessage(BMessage*)
       BMessage::BMessage(unsigned int)
       BMessage::BMessage(unsigned int)
       BMessage::CountNames(unsigned int) const
       BMessage::DropPoint(BPoint*) const
       BMessage::FindAlignment(char const*, BAlignment*) const
       BMessage::FindAlignment(char const*, int, BAlignment*) const
       BMessage::FindBool(char const*, bool*) const
       BMessage::FindBool(char const*, int, bool*) const
       BMessage::FindBool(char const*, int) const
       BMessage::FindColor(char const*, int, rgb_color*) const
       BMessage::FindColor(char const*, rgb_color*) const
       BMessage::FindData(char const*, unsigned int, int, void const**, long*) const
       BMessage::FindData(char const*, unsigned int, void const**, long*) const
       BMessage::FindDouble(char const*, double*) const
       BMessage::FindDouble(char const*, int, double*) const
       BMessage::FindDouble(char const*, int) const
       BMessage::FindFlat(char const*, BFlattenable*) const
       BMessage::FindFlat(char const*, int, BFlattenable*) const
       BMessage::FindFloat(char const*, float*) const
       BMessage::FindFloat(char const*, int, float*) const
       BMessage::FindFloat(char const*, int) const
       BMessage::FindInt16(char const*, int, short*) const
       BMessage::FindInt16(char const*, int) const
       BMessage::FindInt16(char const*, short*) const
       BMessage::FindInt32(char const*, int, int*) const
       BMessage::FindInt32(char const*, int) const
       BMessage::FindInt32(char const*, int*) const
       BMessage::FindInt64(char const*, int, long*) const
       BMessage::FindInt64(char const*, int) const
       BMessage::FindInt64(char const*, long*) const
       BMessage::FindInt8(char const*, int, signed char*) const
       BMessage::FindInt8(char const*, int) const
       BMessage::FindInt8(char const*, signed char*) const
       BMessage::FindMessage(char const*, BMessage*) const
       BMessage::FindMessage(char const*, int, BMessage*) const
       BMessage::FindMessenger(char const*, BMessenger*) const
       BMessage::FindMessenger(char const*, int, BMessenger*) const
       BMessage::FindNodeRef(char const*, int, node_ref*) const
       BMessage::FindNodeRef(char const*, node_ref*) const
       BMessage::FindPoint(char const*, BPoint*) const
       BMessage::FindPoint(char const*, int, BPoint*) const
       BMessage::FindPoint(char const*, int) const
       BMessage::FindPointer(char const*, int, void**) const
       BMessage::FindPointer(char const*, void**) const
       BMessage::FindRect(char const*, BRect*) const
       BMessage::FindRect(char const*, int, BRect*) const
       BMessage::FindRect(char const*, int) const
       BMessage::FindRef(char const*, entry_ref*) const
       BMessage::FindRef(char const*, int, entry_ref*) const
       BMessage::FindSize(char const*, BSize*) const
       BMessage::FindSize(char const*, int, BSize*) const
       BMessage::FindString(char const*, BString*) const
       BMessage::FindString(char const*, char const**) const
       BMessage::FindString(char const*, int, BString*) const
       BMessage::FindString(char const*, int, char const**) const
       BMessage::FindString(char const*, int) const
       BMessage::FindStrings(char const*, BStringList*) const
       BMessage::FindUInt16(char const*, int, unsigned short*) const
       BMessage::FindUInt16(char const*, unsigned short*) const
       BMessage::FindUInt32(char const*, int, unsigned int*) const
       BMessage::FindUInt32(char const*, unsigned int*) const
       BMessage::FindUInt64(char const*, int, unsigned long*) const
       BMessage::FindUInt64(char const*, unsigned long*) const
       BMessage::FindUInt8(char const*, int, unsigned char*) const
       BMessage::FindUInt8(char const*, unsigned char*) const
       BMessage::Flatten(BDataIO*, long*) const
       BMessage::Flatten(char*, long) const
       BMessage::FlattenedSize() const
       BMessage::GetBool(char const*, bool) const
       BMessage::GetBool(char const*, int, bool) const
       BMessage::GetColor(char const*, int, rgb_color) const
       BMessage::GetColor(char const*, rgb_color) const
       BMessage::GetCurrentSpecifier(int*, BMessage*, int*, char const**) const
       BMessage::GetDouble(char const*, double) const
       BMessage::GetDouble(char const*, int, double) const
       BMessage::GetFloat(char const*, float) const
       BMessage::GetFloat(char const*, int, float) const
       BMessage::GetInfo(char const*, unsigned int*, bool*) const
       BMessage::GetInfo(char const*, unsigned int*, int*, bool*) const
       BMessage::GetInfo(char const*, unsigned int*, int*) const
       BMessage::GetInfo(unsigned int, int, char**, unsigned int*, int*) const
       BMessage::GetInt16(char const*, int, short) const
       BMessage::GetInt16(char const*, short) const
       BMessage::GetInt32(char const*, int, int) const
       BMessage::GetInt32(char const*, int) const
       BMessage::GetInt64(char const*, int, long) const
       BMessage::GetInt64(char const*, long) const
       BMessage::GetInt8(char const*, int, signed char) const
       BMessage::GetInt8(char const*, signed char) const
       BMessage::GetPoint(char const*, BPoint const&) const
       BMessage::GetPoint(char const*, int, BPoint const&) const
       BMessage::GetPointer(char const*, int, void const*) const
       BMessage::GetPointer(char const*, void const*) const
       BMessage::GetRect(char const*, BRect const&) const
       BMessage::GetRect(char const*, int, BRect const&) const
       BMessage::GetSize(char const*, BSize const&) const
       BMessage::GetSize(char const*, int, BSize const&) const
       BMessage::GetString(char const*, char const*) const
       BMessage::GetString(char const*, int, char const*) const
       BMessage::GetUInt16(char const*, int, unsigned short) const
       BMessage::GetUInt16(char const*, unsigned short) const
       BMessage::GetUInt32(char const*, int, unsigned int) const
       BMessage::GetUInt32(char const*, unsigned int) const
       BMessage::GetUInt64(char const*, int, unsigned long) const
       BMessage::GetUInt64(char const*, unsigned long) const
       BMessage::GetUInt8(char const*, int, unsigned char) const
       BMessage::GetUInt8(char const*, unsigned char) const
       BMessage::HasAlignment(char const*, int) const
       BMessage::HasBool(char const*, int) const
       BMessage::HasColor(char const*, int) const
       BMessage::HasData(char const*, unsigned int, int) const
       BMessage::HasDouble(char const*, int) const
       BMessage::HasFlat(char const*, BFlattenable const*) const
       BMessage::HasFlat(char const*, int, BFlattenable const*) const
       BMessage::HasFloat(char const*, int) const
       BMessage::HasInt16(char const*, int) const
       BMessage::HasInt32(char const*, int) const
       BMessage::HasInt64(char const*, int) const
       BMessage::HasInt8(char const*, int) const
       BMessage::HasMessage(char const*, int) const
       BMessage::HasMessenger(char const*, int) const
       BMessage::HasNodeRef(char const*, int) const
       BMessage::HasPoint(char const*, int) const
       BMessage::HasPointer(char const*, int) const
       BMessage::HasRect(char const*, int) const
       BMessage::HasRef(char const*, int) const
       BMessage::HasSameData(BMessage const&, bool, bool) const
       BMessage::HasSize(char const*, int) const
       BMessage::HasSpecifiers() const
       BMessage::HasString(char const*, int) const
       BMessage::HasUInt16(char const*, int) const
       BMessage::HasUInt32(char const*, int) const
       BMessage::HasUInt64(char const*, int) const
       BMessage::HasUInt8(char const*, int) const
       BMessage::IsEmpty() const
       BMessage::IsReply() const
       BMessage::IsSourceRemote() const
       BMessage::IsSourceWaiting() const
       BMessage::IsSystem() const
       BMessage::MakeEmpty()
       BMessage::operator delete(void*, unsigned long)
       BMessage::operator new(unsigned long, std::nothrow_t const&)
       BMessage::operator new(unsigned long, void*)
       BMessage::operator new(unsigned long)
       BMessage::operator=(BMessage const&)
       BMessage::PopSpecifier()
       BMessage::Previous() const
       BMessage::PrintToStream() const
       BMessage::RemoveData(char const*, int)
       BMessage::RemoveName(char const*)
       BMessage::Rename(char const*, char const*)
       BMessage::ReplaceAlignment(char const*, BAlignment const&)
       BMessage::ReplaceAlignment(char const*, int, BAlignment const&)
       BMessage::ReplaceBool(char const*, bool)
       BMessage::ReplaceBool(char const*, int, bool)
       BMessage::ReplaceColor(char const*, int, rgb_color)
       BMessage::ReplaceColor(char const*, rgb_color)
       BMessage::ReplaceData(char const*, unsigned int, int, void const*, long)
       BMessage::ReplaceData(char const*, unsigned int, void const*, long)
       BMessage::ReplaceDouble(char const*, double)
       BMessage::ReplaceDouble(char const*, int, double)
       BMessage::ReplaceFlat(char const*, BFlattenable*)
       BMessage::ReplaceFlat(char const*, int, BFlattenable*)
       BMessage::ReplaceFloat(char const*, float)
       BMessage::ReplaceFloat(char const*, int, float)
       BMessage::ReplaceInt16(char const*, int, short)
       BMessage::ReplaceInt16(char const*, short)
       BMessage::ReplaceInt32(char const*, int, int)
       BMessage::ReplaceInt32(char const*, int)
       BMessage::ReplaceInt64(char const*, int, long)
       BMessage::ReplaceInt64(char const*, long)
       BMessage::ReplaceInt8(char const*, int, signed char)
       BMessage::ReplaceInt8(char const*, signed char)
       BMessage::ReplaceMessage(char const*, BMessage const*)
       BMessage::ReplaceMessage(char const*, int, BMessage const*)
       BMessage::ReplaceMessenger(char const*, BMessenger)
       BMessage::ReplaceMessenger(char const*, int, BMessenger)
       BMessage::ReplaceNodeRef(char const*, int, node_ref const*)
       BMessage::ReplaceNodeRef(char const*, node_ref const*)
       BMessage::ReplacePoint(char const*, BPoint)
       BMessage::ReplacePoint(char const*, int, BPoint)
       BMessage::ReplacePointer(char const*, int, void const*)
       BMessage::ReplacePointer(char const*, void const*)
       BMessage::ReplaceRect(char const*, BRect)
       BMessage::ReplaceRect(char const*, int, BRect)
       BMessage::ReplaceRef(char const*, entry_ref const*)
       BMessage::ReplaceRef(char const*, int, entry_ref const*)
       BMessage::ReplaceSize(char const*, BSize)
       BMessage::ReplaceSize(char const*, int, BSize)
       BMessage::ReplaceString(char const*, BString const&)
       BMessage::ReplaceString(char const*, char const*)
       BMessage::ReplaceString(char const*, int, BString const&)
       BMessage::ReplaceString(char const*, int, char const*)
       BMessage::ReplaceUInt16(char const*, int, unsigned short)
       BMessage::ReplaceUInt16(char const*, unsigned short)
       BMessage::ReplaceUInt32(char const*, int, unsigned int)
       BMessage::ReplaceUInt32(char const*, unsigned int)
       BMessage::ReplaceUInt64(char const*, int, unsigned long)
       BMessage::ReplaceUInt64(char const*, unsigned long)
       BMessage::ReplaceUInt8(char const*, int, unsigned char)
       BMessage::ReplaceUInt8(char const*, unsigned char)
       BMessage::ReturnAddress() const
       BMessage::SendReply(BMessage*, BHandler*, long)
       BMessage::SendReply(BMessage*, BMessage*, long, long)
       BMessage::SendReply(BMessage*, BMessenger, long)
       BMessage::SendReply(unsigned int, BHandler*)
       BMessage::SendReply(unsigned int, BMessage*)
       BMessage::SetBool(char const*, bool)
       BMessage::SetColor(char const*, rgb_color)
       BMessage::SetCurrentSpecifier(int)
       BMessage::SetData(char const*, unsigned int, void const*, long, bool, int)
       BMessage::SetDouble(char const*, double)
       BMessage::SetFloat(char const*, float)
       BMessage::SetInt16(char const*, short)
       BMessage::SetInt32(char const*, int)
       BMessage::SetInt64(char const*, long)
       BMessage::SetInt8(char const*, signed char)
       BMessage::SetPoint(char const*, BPoint const&)
       BMessage::SetPointer(char const*, void const*)
       BMessage::SetRect(char const*, BRect const&)
       BMessage::SetSize(char const*, BSize const&)
       BMessage::SetString(char const*, BString const&)
       BMessage::SetString(char const*, char const*)
       BMessage::SetUInt16(char const*, unsigned short)
       BMessage::SetUInt32(char const*, unsigned int)
       BMessage::SetUInt64(char const*, unsigned long)
       BMessage::SetUInt8(char const*, unsigned char)
       BMessage::sMsgCache
       BMessage::sReplyPortInUse
       BMessage::sReplyPorts
       BMessage::Unflatten(BDataIO*)
       BMessage::Unflatten(char const*)
       BMessage::WasDelivered() const
       BMessage::WasDropped() const
       BMessageFilter::_ReservedMessageFilter1()
       BMessageFilter::_ReservedMessageFilter2()
       BMessageFilter::~BMessageFilter()
       BMessageFilter::~BMessageFilter()
       BMessageFilter::~BMessageFilter()
       BMessageFilter::BMessageFilter(BMessageFilter const*)
       BMessageFilter::BMessageFilter(BMessageFilter const*)
       BMessageFilter::BMessageFilter(BMessageFilter const&)
       BMessageFilter::BMessageFilter(BMessageFilter const&)
       BMessageFilter::BMessageFilter(message_delivery, message_source, filter_result (*)(BMessage*, BHandler**, BMessageFilter*))
       BMessageFilter::BMessageFilter(message_delivery, message_source, filter_result (*)(BMessage*, BHandler**, BMessageFilter*))
       BMessageFilter::BMessageFilter(message_delivery, message_source, unsigned int, filter_result (*)(BMessage*, BHandler**, BMessageFilter*))
       BMessageFilter::BMessageFilter(message_delivery, message_source, unsigned int, filter_result (*)(BMessage*, BHandler**, BMessageFilter*))
       BMessageFilter::BMessageFilter(unsigned int, filter_result (*)(BMessage*, BHandler**, BMessageFilter*))
       BMessageFilter::BMessageFilter(unsigned int, filter_result (*)(BMessage*, BHandler**, BMessageFilter*))
       BMessageFilter::Command() const
       BMessageFilter::Filter(BMessage*, BHandler**)
       BMessageFilter::FilterFunction() const
       BMessageFilter::FiltersAnyCommand() const
       BMessageFilter::Looper() const
       BMessageFilter::MessageDelivery() const
       BMessageFilter::MessageSource() const
       BMessageFilter::operator=(BMessageFilter const&)
       BMessageFilter::SetLooper(BLooper*)
       BMessageQueue::_ReservedMessageQueue1()
       BMessageQueue::_ReservedMessageQueue2()
       BMessageQueue::_ReservedMessageQueue3()
       BMessageQueue::~BMessageQueue()
       BMessageQueue::~BMessageQueue()
       BMessageQueue::~BMessageQueue()
       BMessageQueue::AddMessage(BMessage*)
       BMessageQueue::BMessageQueue()
       BMessageQueue::BMessageQueue()
       BMessageQueue::CountMessages() const
       BMessageQueue::FindMessage(int) const
       BMessageQueue::FindMessage(unsigned int, int) const
       BMessageQueue::IsEmpty() const
       BMessageQueue::IsLocked()
       BMessageQueue::IsLocked() const
       BMessageQueue::IsNextMessage(BMessage const*) const
       BMessageQueue::Lock()
       BMessageQueue::NextMessage()
       BMessageQueue::RemoveMessage(BMessage*)
       BMessageQueue::Unlock()
       BMessageRunner::_InitData(BMessenger, BMessage const*, long, int, BMessenger)
       BMessageRunner::_RegisterRunner(BMessenger, BMessage const*, long, int, bool, BMessenger)
       BMessageRunner::_ReservedMessageRunner1()
       BMessageRunner::_ReservedMessageRunner2()
       BMessageRunner::_ReservedMessageRunner3()
       BMessageRunner::_ReservedMessageRunner4()
       BMessageRunner::_ReservedMessageRunner5()
       BMessageRunner::_ReservedMessageRunner6()
       BMessageRunner::_SetParams(bool, long, bool, int)
       BMessageRunner::~BMessageRunner()
       BMessageRunner::~BMessageRunner()
       BMessageRunner::~BMessageRunner()
       BMessageRunner::BMessageRunner(BMessenger, BMessage const*, long, int, BMessenger)
       BMessageRunner::BMessageRunner(BMessenger, BMessage const*, long, int, BMessenger)
       BMessageRunner::BMessageRunner(BMessenger, BMessage const*, long, int)
       BMessageRunner::BMessageRunner(BMessenger, BMessage const*, long, int)
       BMessageRunner::BMessageRunner(BMessenger, BMessage const&, long, int, BMessenger)
       BMessageRunner::BMessageRunner(BMessenger, BMessage const&, long, int, BMessenger)
       BMessageRunner::BMessageRunner(BMessenger, BMessage const&, long, int)
       BMessageRunner::BMessageRunner(BMessenger, BMessage const&, long, int)
       BMessageRunner::GetInfo(long*, int*) const
       BMessageRunner::InitCheck() const
       BMessageRunner::SetCount(int)
       BMessageRunner::SetInterval(long)
       BMessageRunner::StartSending(BMessenger, BMessage const*, long, int, BMessenger)
       BMessageRunner::StartSending(BMessenger, BMessage const*, long, int)
       BMessenger::_InitData(BHandler const*, BLooper const*, int*)
       BMessenger::_InitData(char const*, int, int*)
       BMessenger::_SetTo(int, int, int)
       BMessenger::~BMessenger()
       BMessenger::~BMessenger()
       BMessenger::BMessenger()
       BMessenger::BMessenger()
       BMessenger::BMessenger(BHandler const*, BLooper const*, int*)
       BMessenger::BMessenger(BHandler const*, BLooper const*, int*)
       BMessenger::BMessenger(BMessenger const&)
       BMessenger::BMessenger(BMessenger const&)
       BMessenger::BMessenger(char const*, int, int*)
       BMessenger::BMessenger(char const*, int, int*)
       BMessenger::HashValue() const
       BMessenger::IsTargetLocal() const
       BMessenger::IsValid() const
       BMessenger::LockTarget() const
       BMessenger::LockTargetWithTimeout(long) const
       BMessenger::operator=(BMessenger const&)
       BMessenger::operator==(BMessenger const&) const
       BMessenger::SendMessage(BMessage*, BHandler*, long) const
       BMessenger::SendMessage(BMessage*, BMessage*, long, long) const
       BMessenger::SendMessage(BMessage*, BMessenger, long) const
       BMessenger::SendMessage(unsigned int, BHandler*) const
       BMessenger::SendMessage(unsigned int, BMessage*) const
       BMessenger::SetTo(BHandler const*, BLooper const*)
       BMessenger::SetTo(char const*, int)
       BMessenger::Target(BLooper**) const
       BMessenger::Team() const
       BMimeType::_ReservedMimeType1()
       BMimeType::_ReservedMimeType2()
       BMimeType::_ReservedMimeType3()
       BMimeType::~BMimeType()
       BMimeType::~BMimeType()
       BMimeType::~BMimeType()
       BMimeType::BMimeType()
       BMimeType::BMimeType()
       BMimeType::BMimeType(char const*)
       BMimeType::BMimeType(char const*)
       BMimeType::CheckSnifferRule(char const*, BString*)
       BMimeType::Contains(BMimeType const*) const
       BMimeType::Delete()
       BMimeType::GetAppHint(entry_ref*) const
       BMimeType::GetAssociatedTypes(char const*, BMessage*)
       BMimeType::GetAttrInfo(BMessage*) const
       BMimeType::GetFileExtensions(BMessage*) const
       BMimeType::GetIcon(BBitmap*, icon_size) const
       BMimeType::GetIcon(unsigned char**, unsigned long*) const
       BMimeType::GetIconForType(char const*, BBitmap*, icon_size) const
       BMimeType::GetIconForType(char const*, unsigned char**, unsigned long*) const
       BMimeType::GetInstalledSupertypes(BMessage*)
       BMimeType::GetInstalledTypes(BMessage*)
       BMimeType::GetInstalledTypes(char const*, BMessage*)
       BMimeType::GetLongDescription(char*) const
       BMimeType::GetPreferredApp(char*, app_verb) const
       BMimeType::GetShortDescription(char*) const
       BMimeType::GetSnifferRule(BString*) const
       BMimeType::GetSupertype(BMimeType*) const
       BMimeType::GetSupportedTypes(BMessage*)
       BMimeType::GetSupportingApps(BMessage*) const
       BMimeType::GetWildcardApps(BMessage*)
       BMimeType::GuessMimeType(char const*, BMimeType*)
       BMimeType::GuessMimeType(entry_ref const*, BMimeType*)
       BMimeType::GuessMimeType(void const*, int, BMimeType*)
       BMimeType::InitCheck() const
       BMimeType::Install()
       BMimeType::IsInstalled() const
       BMimeType::IsSupertypeOnly() const
       BMimeType::IsValid() const
       BMimeType::IsValid(char const*)
       BMimeType::operator==(BMimeType const&) const
       BMimeType::operator==(char const*) const
       BMimeType::SetAppHint(entry_ref const*)
       BMimeType::SetAttrInfo(BMessage const*)
       BMimeType::SetFileExtensions(BMessage const*)
       BMimeType::SetIcon(BBitmap const*, icon_size)
       BMimeType::SetIcon(unsigned char const*, unsigned long)
       BMimeType::SetIconForType(char const*, BBitmap const*, icon_size)
       BMimeType::SetIconForType(char const*, unsigned char const*, unsigned long)
       BMimeType::SetLongDescription(char const*)
       BMimeType::SetPreferredApp(char const*, app_verb)
       BMimeType::SetShortDescription(char const*)
       BMimeType::SetSnifferRule(char const*)
       BMimeType::SetSupportedTypes(BMessage const*, bool)
       BMimeType::SetTo(char const*)
       BMimeType::SetType(char const*)
       BMimeType::StartWatching(BMessenger)
       BMimeType::StopWatching(BMessenger)
       BMimeType::Type() const
       BMimeType::Unset()
       BMutablePartition::~BMutablePartition()
       BMutablePartition::~BMutablePartition()
       BMutablePartition::BlockSize() const
       BMutablePartition::BMutablePartition(BPartition::Delegate*)
       BMutablePartition::BMutablePartition(BPartition::Delegate*)
       BMutablePartition::Changed(unsigned int, unsigned int)
       BMutablePartition::ChangeFlags() const
       BMutablePartition::ChildAt(int) const
       BMutablePartition::ChildCookie() const
       BMutablePartition::ClearFlags(unsigned int)
       BMutablePartition::ContentName() const
       BMutablePartition::ContentParameters() const
       BMutablePartition::ContentSize() const
       BMutablePartition::ContentType() const
       BMutablePartition::CountChildren() const
       BMutablePartition::CreateChild(int, BMutablePartition**)
       BMutablePartition::CreateChild(int, char const*, char const*, char const*, BMutablePartition**)
       BMutablePartition::DeleteAllChildren()
       BMutablePartition::DeleteChild(BMutablePartition*)
       BMutablePartition::DeleteChild(int)
       BMutablePartition::Flags() const
       BMutablePartition::GetDelegate() const
       BMutablePartition::Index() const
       BMutablePartition::IndexOfChild(BMutablePartition*) const
       BMutablePartition::Init(user_partition_data const*, BMutablePartition*)
       BMutablePartition::Name() const
       BMutablePartition::Offset() const
       BMutablePartition::Parameters() const
       BMutablePartition::Parent() const
       BMutablePartition::PartitionData() const
       BMutablePartition::SetBlockSize(long)
       BMutablePartition::SetChangeFlags(unsigned int)
       BMutablePartition::SetChildCookie(void*)
       BMutablePartition::SetContentName(char const*)
       BMutablePartition::SetContentParameters(char const*)
       BMutablePartition::SetContentSize(long)
       BMutablePartition::SetContentType(char const*)
       BMutablePartition::SetFlags(unsigned int)
       BMutablePartition::SetName(char const*)
       BMutablePartition::SetOffset(long)
       BMutablePartition::SetParameters(char const*)
       BMutablePartition::SetSize(long)
       BMutablePartition::SetStatus(unsigned int)
       BMutablePartition::SetType(char const*)
       BMutablePartition::SetVolumeID(int)
       BMutablePartition::Size() const
       BMutablePartition::Status() const
       BMutablePartition::Type() const
       BMutablePartition::UninitializeContents()
       BMutablePartition::VolumeID() const
       BNode::_GetStat(stat_beos*) const
       BNode::_GetStat(stat*) const
       BNode::_RudeNode1()
       BNode::_RudeNode2()
       BNode::_RudeNode3()
       BNode::_RudeNode4()
       BNode::_RudeNode5()
       BNode::_RudeNode6()
       BNode::_SetTo(entry_ref const*, bool)
       BNode::_SetTo(int, char const*, bool)
       BNode::~BNode()
       BNode::~BNode()
       BNode::~BNode()
       BNode::BNode()
       BNode::BNode()
       BNode::BNode(BDirectory const*, char const*)
       BNode::BNode(BDirectory const*, char const*)
       BNode::BNode(BEntry const*)
       BNode::BNode(BEntry const*)
       BNode::BNode(BNode const&)
       BNode::BNode(BNode const&)
       BNode::BNode(char const*)
       BNode::BNode(char const*)
       BNode::BNode(entry_ref const*)
       BNode::BNode(entry_ref const*)
       BNode::close_fd()
       BNode::Dup()
       BNode::GetAttrInfo(char const*, attr_info*) const
       BNode::GetNextAttrName(char*)
       BNode::GetStat(stat*) const@LIBBE_BASE
       BNode::GetStat(stat*) const@LIBBE_BASE
       BNode::InitAttrDir()
       BNode::InitCheck() const
       BNode::Lock()
       BNode::operator!=(BNode const&) const
       BNode::operator=(BNode const&)
       BNode::operator==(BNode const&) const
       BNode::ReadAttr(char const*, unsigned int, long, void*, unsigned long) const
       BNode::ReadAttrString(char const*, BString*) const
       BNode::RemoveAttr(char const*)
       BNode::RenameAttr(char const*, char const*)
       BNode::RewindAttrs()
       BNode::set_fd(int)
       BNode::set_stat(stat&, unsigned int)
       BNode::set_status(int)
       BNode::SetTo(BDirectory const*, char const*)
       BNode::SetTo(BEntry const*)
       BNode::SetTo(char const*)
       BNode::SetTo(entry_ref const*)
       BNode::Sync()
       BNode::Unlock()
       BNode::Unset()
       BNode::WriteAttr(char const*, unsigned int, long, void const*, unsigned long)
       BNode::WriteAttrString(char const*, BString const*)
       BNodeInfo::_ReservedNodeInfo1()
       BNodeInfo::_ReservedNodeInfo2()
       BNodeInfo::_ReservedNodeInfo3()
       BNodeInfo::~BNodeInfo()
       BNodeInfo::~BNodeInfo()
       BNodeInfo::~BNodeInfo()
       BNodeInfo::BNodeInfo()
       BNodeInfo::BNodeInfo()
       BNodeInfo::BNodeInfo(BNode*)
       BNodeInfo::BNodeInfo(BNode*)
       BNodeInfo::GetAppHint(entry_ref*) const
       BNodeInfo::GetIcon(BBitmap*, icon_size) const
       BNodeInfo::GetIcon(unsigned char**, unsigned long*, unsigned int*) const
       BNodeInfo::GetPreferredApp(char*, app_verb) const
       BNodeInfo::GetTrackerIcon(BBitmap*, icon_size) const
       BNodeInfo::GetTrackerIcon(entry_ref const*, BBitmap*, icon_size)
       BNodeInfo::GetType(char*) const
       BNodeInfo::InitCheck() const
       BNodeInfo::SetAppHint(entry_ref const*)
       BNodeInfo::SetIcon(BBitmap const*, icon_size)
       BNodeInfo::SetIcon(unsigned char const*, unsigned long)
       BNodeInfo::SetPreferredApp(char const*, app_verb)
       BNodeInfo::SetTo(BNode*)
       BNodeInfo::SetType(char const*)
       BNotification::_ReservedNotification1()
       BNotification::_ReservedNotification2()
       BNotification::_ReservedNotification3()
       BNotification::_ReservedNotification4()
       BNotification::_ReservedNotification5()
       BNotification::_ReservedNotification6()
       BNotification::_ReservedNotification7()
       BNotification::_ReservedNotification8()
       BNotification::~BNotification()
       BNotification::~BNotification()
       BNotification::~BNotification()
       BNotification::AddOnClickArg(BString const&)
       BNotification::AddOnClickRef(entry_ref const*)
       BNotification::Archive(BMessage*, bool) const
       BNotification::BNotification(BMessage*)
       BNotification::BNotification(BMessage*)
       BNotification::BNotification(notification_type)
       BNotification::BNotification(notification_type)
       BNotification::Content() const
       BNotification::CountOnClickArgs() const
       BNotification::CountOnClickRefs() const
       BNotification::Group() const
       BNotification::Icon() const
       BNotification::InitCheck() const
       BNotification::Instantiate(BMessage*)
       BNotification::MessageID() const
       BNotification::OnClickApp() const
       BNotification::OnClickArgAt(int) const
       BNotification::OnClickFile() const
       BNotification::OnClickRefAt(int) const
       BNotification::Progress() const
       BNotification::Send(long)
       BNotification::SetContent(BString const&)
       BNotification::SetGroup(BString const&)
       BNotification::SetIcon(BBitmap const*)
       BNotification::SetMessageID(BString const&)
       BNotification::SetOnClickApp(BString const&)
       BNotification::SetOnClickFile(entry_ref const*)
       BNotification::SetProgress(float)
       BNotification::SetTitle(BString const&)
       BNotification::SourceName() const
       BNotification::SourceSignature() const
       BNotification::Title() const
       BNotification::Type() const
       BNumberFormat::~BNumberFormat()
       BNumberFormat::~BNumberFormat()
       BNumberFormat::~BNumberFormat()
       BNumberFormat::BNumberFormat()
       BNumberFormat::BNumberFormat()
       BNumberFormat::BNumberFormat(BLocale const*)
       BNumberFormat::BNumberFormat(BLocale const*)
       BNumberFormat::BNumberFormat(BNumberFormat const&)
       BNumberFormat::BNumberFormat(BNumberFormat const&)
       BNumberFormat::Format(BString&, double)
       BNumberFormat::Format(BString&, int)
       BNumberFormat::Format(char*, unsigned long, double)
       BNumberFormat::Format(char*, unsigned long, int)
       BNumberFormat::FormatMonetary(BString&, double)
       BNumberFormat::FormatMonetary(char*, unsigned long, double)
       BNumberFormat::FormatPercent(BString&, double)
       BNumberFormat::FormatPercent(char*, unsigned long, double)
       BNumberFormat::GetSeparator(BNumberElement)
       BNumberFormat::Parse(BString const&, double&)
       BNumberFormatImpl::~BNumberFormatImpl()
       BNumberFormatImpl::~BNumberFormatImpl()
       BNumberFormatImpl::ApplyFormatter(icu_66::NumberFormat*, BString&, double)
       BNumberFormatImpl::ApplyFormatter(icu_66::NumberFormat*, char*, unsigned long, double)
       BNumberFormatImpl::BNumberFormatImpl()
       BNumberFormatImpl::BNumberFormatImpl()
       BNumberFormatImpl::GetCurrency(BFormattingConventions*)
       BNumberFormatImpl::GetFloat(BFormattingConventions*)
       BNumberFormatImpl::GetInteger(BFormattingConventions*)
       BNumberFormatImpl::GetPercent(BFormattingConventions*)
       BOptionControl::_Reserved_OptionControl_0(void*, ...)
       BOptionControl::_Reserved_OptionControl_1(void*, ...)
       BOptionControl::_Reserved_OptionControl_10(void*, ...)
       BOptionControl::_Reserved_OptionControl_11(void*, ...)
       BOptionControl::_Reserved_OptionControl_2(void*, ...)
       BOptionControl::_Reserved_OptionControl_3(void*, ...)
       BOptionControl::_Reserved_OptionControl_4(void*, ...)
       BOptionControl::_Reserved_OptionControl_5(void*, ...)
       BOptionControl::_Reserved_OptionControl_6(void*, ...)
       BOptionControl::_Reserved_OptionControl_7(void*, ...)
       BOptionControl::_Reserved_OptionControl_8(void*, ...)
       BOptionControl::_Reserved_OptionControl_9(void*, ...)
       BOptionControl::~BOptionControl()
       BOptionControl::~BOptionControl()
       BOptionControl::~BOptionControl()
       BOptionControl::AddOption(char const*, int)
       BOptionControl::BOptionControl()
       BOptionControl::BOptionControl()
       BOptionControl::BOptionControl(BOptionControl const&)
       BOptionControl::BOptionControl(BOptionControl const&)
       BOptionControl::BOptionControl(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BOptionControl::BOptionControl(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BOptionControl::BOptionControl(char const*, char const*, BMessage*, unsigned int)
       BOptionControl::BOptionControl(char const*, char const*, BMessage*, unsigned int)
       BOptionControl::MakeValueMessage(int)
       BOptionControl::MessageReceived(BMessage*)
       BOptionControl::operator=(BOptionControl const&)
       BOptionControl::SelectOptionFor(char const*)
       BOptionControl::SelectOptionFor(int)
       BOptionPopUp::_Reserved_OptionControl_0(void*, ...)
       BOptionPopUp::_Reserved_OptionControl_1(void*, ...)
       BOptionPopUp::_Reserved_OptionControl_2(void*, ...)
       BOptionPopUp::_Reserved_OptionControl_3(void*, ...)
       BOptionPopUp::_Reserved_OptionPopUp_0(void*, ...)
       BOptionPopUp::_Reserved_OptionPopUp_1(void*, ...)
       BOptionPopUp::_Reserved_OptionPopUp_2(void*, ...)
       BOptionPopUp::_Reserved_OptionPopUp_3(void*, ...)
       BOptionPopUp::_Reserved_OptionPopUp_4(void*, ...)
       BOptionPopUp::_Reserved_OptionPopUp_5(void*, ...)
       BOptionPopUp::_Reserved_OptionPopUp_6(void*, ...)
       BOptionPopUp::_Reserved_OptionPopUp_7(void*, ...)
       BOptionPopUp::~BOptionPopUp()
       BOptionPopUp::~BOptionPopUp()
       BOptionPopUp::~BOptionPopUp()
       BOptionPopUp::AddOptionAt(char const*, int, int)
       BOptionPopUp::AllAttached()
       BOptionPopUp::AttachedToWindow()
       BOptionPopUp::BOptionPopUp()
       BOptionPopUp::BOptionPopUp()
       BOptionPopUp::BOptionPopUp(BOptionPopUp const&)
       BOptionPopUp::BOptionPopUp(BOptionPopUp const&)
       BOptionPopUp::BOptionPopUp(BRect, char const*, char const*, BMessage*, bool, unsigned int, unsigned int)
       BOptionPopUp::BOptionPopUp(BRect, char const*, char const*, BMessage*, bool, unsigned int, unsigned int)
       BOptionPopUp::BOptionPopUp(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BOptionPopUp::BOptionPopUp(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BOptionPopUp::BOptionPopUp(char const*, char const*, BMessage*, unsigned int)
       BOptionPopUp::BOptionPopUp(char const*, char const*, BMessage*, unsigned int)
       BOptionPopUp::CountOptions() const
       BOptionPopUp::GetOptionAt(int, char const**, int*)
       BOptionPopUp::GetPreferredSize(float*, float*)
       BOptionPopUp::MenuField()
       BOptionPopUp::MessageReceived(BMessage*)
       BOptionPopUp::operator=(BOptionPopUp const&)
       BOptionPopUp::RemoveOptionAt(int)
       BOptionPopUp::ResizeToPreferred()
       BOptionPopUp::SelectedOption(char const**, int*) const
       BOptionPopUp::SetEnabled(bool)
       BOptionPopUp::SetLabel(char const*)
       BOptionPopUp::SetValue(int)
       BOutlineListView::_BuildTree(BListItem*, int&)
       BOutlineListView::_CullInvisibleItems(BList&)
       BOutlineListView::_DestructTree(BList*)
       BOutlineListView::_FindPreviousVisibleIndex(int)
       BOutlineListView::_FullListIndex(int) const
       BOutlineListView::_PopulateTree(BList*, BList&, int&, bool)
       BOutlineListView::_RemoveItem(BListItem*, int)
       BOutlineListView::_ReservedOutlineListView1()
       BOutlineListView::_ReservedOutlineListView2()
       BOutlineListView::_ReservedOutlineListView3()
       BOutlineListView::_ReservedOutlineListView4()
       BOutlineListView::_SortTree(BList*, bool, int (*)(BListItem const*, BListItem const*))
       BOutlineListView::_SuperitemForIndex(int, int, int*)
       BOutlineListView::_SwapItems(int, int)
       BOutlineListView::~BOutlineListView()
       BOutlineListView::~BOutlineListView()
       BOutlineListView::~BOutlineListView()
       BOutlineListView::AddItem(BListItem*, int)
       BOutlineListView::AddItem(BListItem*)
       BOutlineListView::AddList(BList*, int)
       BOutlineListView::AddList(BList*)
       BOutlineListView::AddUnder(BListItem*, BListItem*)
       BOutlineListView::AllAttached()
       BOutlineListView::AllDetached()
       BOutlineListView::Archive(BMessage*, bool) const
       BOutlineListView::BOutlineListView(BMessage*)
       BOutlineListView::BOutlineListView(BMessage*)
       BOutlineListView::BOutlineListView(BRect, char const*, list_view_type, unsigned int, unsigned int)
       BOutlineListView::BOutlineListView(BRect, char const*, list_view_type, unsigned int, unsigned int)
       BOutlineListView::BOutlineListView(char const*, list_view_type, unsigned int)
       BOutlineListView::BOutlineListView(char const*, list_view_type, unsigned int)
       BOutlineListView::Collapse(BListItem*)
       BOutlineListView::CountItemsUnder(BListItem*, bool) const
       BOutlineListView::DetachedFromWindow()
       BOutlineListView::DoMiscellaneous(BListView::MiscCode, BListView::MiscData*)
       BOutlineListView::DrawItem(BListItem*, BRect, bool)
       BOutlineListView::DrawLatch(BRect, int, bool, bool, bool)
       BOutlineListView::EachItemUnder(BListItem*, bool, BListItem* (*)(BListItem*, void*), void*)
       BOutlineListView::Expand(BListItem*)
       BOutlineListView::ExpandOrCollapse(BListItem*, bool)
       BOutlineListView::FrameMoved(BPoint)
       BOutlineListView::FrameResized(float, float)
       BOutlineListView::FullListCountItems() const
       BOutlineListView::FullListCurrentSelection(int) const
       BOutlineListView::FullListDoForEach(bool (*)(BListItem*, void*), void*)
       BOutlineListView::FullListDoForEach(bool (*)(BListItem*))
       BOutlineListView::FullListFirstItem() const
       BOutlineListView::FullListHasItem(BListItem*) const
       BOutlineListView::FullListIndexOf(BListItem*) const
       BOutlineListView::FullListIndexOf(BPoint) const
       BOutlineListView::FullListIsEmpty() const
       BOutlineListView::FullListItemAt(int) const
       BOutlineListView::FullListLastItem() const
       BOutlineListView::FullListSortItems(int (*)(BListItem const*, BListItem const*))
       BOutlineListView::GetPreferredSize(float*, float*)
       BOutlineListView::GetSupportedSuites(BMessage*)
       BOutlineListView::Instantiate(BMessage*)
       BOutlineListView::IsExpanded(int)
       BOutlineListView::ItemUnderAt(BListItem*, bool, int) const
       BOutlineListView::KeyDown(char const*, int)
       BOutlineListView::LatchRect(BRect, int) const
       BOutlineListView::MakeEmpty()
       BOutlineListView::MakeFocus(bool)
       BOutlineListView::MessageReceived(BMessage*)
       BOutlineListView::MouseDown(BPoint)
       BOutlineListView::MouseUp(BPoint)
       BOutlineListView::Perform(unsigned int, void*)
       BOutlineListView::RemoveItem(BListItem*)
       BOutlineListView::RemoveItem(int)
       BOutlineListView::RemoveItems(int, int)
       BOutlineListView::ResizeToPreferred()
       BOutlineListView::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BOutlineListView::SortItemsUnder(BListItem*, bool, int (*)(BListItem const*, BListItem const*))
       BOutlineListView::Superitem(BListItem const*)
       BPartition::_AcceptVisitor(BDiskDeviceVisitor*, int)
       BPartition::_ChildAt(int) const
       BPartition::_CountChildren() const
       BPartition::_CountDescendants() const
       BPartition::_CreateDelegates()
       BPartition::_DeleteDelegates()
       BPartition::_HasContent() const
       BPartition::_InitDelegates()
       BPartition::_IsModified() const
       BPartition::_Level() const
       BPartition::_PartitionData() const
       BPartition::_RemoveChild(int)
       BPartition::_RemoveObsoleteDescendants(user_partition_data*, bool*)
       BPartition::_SetTo(BDiskDevice*, BPartition*, user_partition_data*)
       BPartition::_SupportsChildOperation(BPartition const*, unsigned int) const
       BPartition::_SupportsOperation(unsigned int, unsigned int, bool*) const
       BPartition::_Unset()
       BPartition::_Update(user_partition_data*, bool*)
       BPartition::_VisitEachDescendant(BDiskDeviceVisitor*, int)
       BPartition::~BPartition()
       BPartition::~BPartition()
       BPartition::~BPartition()
       BPartition::BlockSize() const
       BPartition::BPartition()
       BPartition::BPartition()
       BPartition::BPartition(BPartition const&)
       BPartition::BPartition(BPartition const&)
       BPartition::CanCreateChild() const
       BPartition::CanDefragment(bool*) const
       BPartition::CanDeleteChild(int) const
       BPartition::CanEditContentParameters(bool*) const
       BPartition::CanEditParameters() const
       BPartition::CanInitialize(char const*) const
       BPartition::CanMove(BObjectList<BPartition>*, BObjectList<BPartition>*) const
       BPartition::CanRepair(bool, bool*) const
       BPartition::CanResize(bool*, bool*) const
       BPartition::CanSetContentName(bool*) const
       BPartition::CanSetName() const
       BPartition::CanSetType() const
       BPartition::ChildAt(int) const
       BPartition::ContainsFileSystem() const
       BPartition::ContainsPartitioningSystem() const
       BPartition::ContentName() const
       BPartition::ContentParameters() const
       BPartition::ContentSize() const
       BPartition::ContentType() const
       BPartition::CountChildren() const
       BPartition::CountDescendants() const
       BPartition::CreateChild(long, long, char const*, char const*, char const*, BPartition**)
       BPartition::Defragment() const
       BPartition::Delegate::_FreeHandle()
       BPartition::Delegate::~Delegate()
       BPartition::Delegate::~Delegate()
       BPartition::Delegate::CanInitialize(char const*) const
       BPartition::Delegate::ChildAt(int) const
       BPartition::Delegate::CountChildren() const
       BPartition::Delegate::CreateChild(long, long, char const*, char const*, char const*, BPartition**)
       BPartition::Delegate::Defragment()
       BPartition::Delegate::Delegate(BPartition*)
       BPartition::Delegate::Delegate(BPartition*)
       BPartition::Delegate::DeleteChild(BPartition::Delegate*)
       BPartition::Delegate::GetNextSupportedChildType(BPartition::Delegate*, int*, BString*) const
       BPartition::Delegate::GetParameterEditor(B_PARAMETER_EDITOR_TYPE, BPartitionParameterEditor**) const
       BPartition::Delegate::GetPartitioningInfo(BPartitioningInfo*)
       BPartition::Delegate::InitAfterHierarchy()
       BPartition::Delegate::InitHierarchy(user_partition_data const*, BPartition::Delegate*)
       BPartition::Delegate::Initialize(char const*, char const*, char const*)
       BPartition::Delegate::IsModified() const
       BPartition::Delegate::IsSubSystem(BPartition::Delegate*, char const*) const
       BPartition::Delegate::Move(long)
       BPartition::Delegate::MoveChild(BPartition::Delegate*, long)
       BPartition::Delegate::MutablePartition()
       BPartition::Delegate::MutablePartition() const
       BPartition::Delegate::PartitionData() const
       BPartition::Delegate::Repair(bool)
       BPartition::Delegate::Resize(long)
       BPartition::Delegate::ResizeChild(BPartition::Delegate*, long)
       BPartition::Delegate::SetContentName(char const*)
       BPartition::Delegate::SetContentParameters(char const*)
       BPartition::Delegate::SetName(BPartition::Delegate*, char const*)
       BPartition::Delegate::SetParameters(BPartition::Delegate*, char const*)
       BPartition::Delegate::SetType(BPartition::Delegate*, char const*)
       BPartition::Delegate::SupportedChildOperations(BPartition::Delegate*, unsigned int)
       BPartition::Delegate::SupportedOperations(unsigned int)
       BPartition::Delegate::Uninitialize()
       BPartition::Delegate::ValidateCreateChild(long*, long*, char const*, BString*, char const*) const
       BPartition::Delegate::ValidateInitialize(char const*, BString*, char const*)
       BPartition::Delegate::ValidateMove(long*) const
       BPartition::Delegate::ValidateMoveChild(BPartition::Delegate*, long*) const
       BPartition::Delegate::ValidateResize(long*) const
       BPartition::Delegate::ValidateResizeChild(BPartition::Delegate*, long*) const
       BPartition::Delegate::ValidateSetContentName(BString*) const
       BPartition::Delegate::ValidateSetName(BPartition::Delegate*, BString*) const
       BPartition::Delegate::ValidateSetType(BPartition::Delegate*, char const*) const
       BPartition::DeleteChild(int)
       BPartition::Device() const
       BPartition::FindDescendant(int) const
       BPartition::Flags() const
       BPartition::GetDiskSystem(BDiskSystem*) const
       BPartition::GetIcon(BBitmap*, icon_size) const
       BPartition::GetIcon(unsigned char**, unsigned long*, unsigned int*) const
       BPartition::GetMountPoint(BPath*) const
       BPartition::GetNextSupportedChildType(int*, BString*) const
       BPartition::GetNextSupportedType(int*, BString*) const
       BPartition::GetParameterEditor(B_PARAMETER_EDITOR_TYPE, BPartitionParameterEditor**)
       BPartition::GetPartitioningInfo(BPartitioningInfo*) const
       BPartition::GetPath(BPath*) const
       BPartition::GetVolume(BVolume*) const
       BPartition::ID() const
       BPartition::Index() const
       BPartition::Initialize(char const*, char const*, char const*)
       BPartition::IsBusy() const
       BPartition::IsDevice() const
       BPartition::IsMounted() const
       BPartition::IsReadOnly() const
       BPartition::IsSubSystem(char const*) const
       BPartition::Mount(char const*, unsigned int, char const*)
       BPartition::Move(long)
       BPartition::Name() const
       BPartition::Offset() const
       BPartition::operator=(BPartition const&)
       BPartition::Parameters() const
       BPartition::Parent() const
       BPartition::PhysicalBlockSize() const
       BPartition::RawContentName() const
       BPartition::Repair(bool) const
       BPartition::Resize(long)
       BPartition::SetContentName(char const*)
       BPartition::SetContentParameters(char const*)
       BPartition::SetName(char const*)
       BPartition::SetParameters(char const*)
       BPartition::SetType(char const*)
       BPartition::Size() const
       BPartition::Status() const
       BPartition::SupportsChildName() const
       BPartition::Type() const
       BPartition::Uninitialize()
       BPartition::Unmount(unsigned int)
       BPartition::ValidateCreateChild(long*, long*, char const*, BString*, char const*) const
       BPartition::ValidateInitialize(char const*, BString*, char const*)
       BPartition::ValidateMove(long*) const
       BPartition::ValidateResize(long*) const
       BPartition::ValidateSetContentName(BString*) const
       BPartition::ValidateSetName(BString*) const
       BPartition::ValidateSetType(char const*) const
       BPartition::VisitEachChild(BDiskDeviceVisitor*) const
       BPartition::VisitEachDescendant(BDiskDeviceVisitor*) const
       BPartitionHandle::~BPartitionHandle()
       BPartitionHandle::~BPartitionHandle()
       BPartitionHandle::~BPartitionHandle()
       BPartitionHandle::BPartitionHandle(BMutablePartition*)
       BPartitionHandle::BPartitionHandle(BMutablePartition*)
       BPartitionHandle::CreateChild(long, long, char const*, char const*, char const*, BMutablePartition**)
       BPartitionHandle::Defragment()
       BPartitionHandle::DeleteChild(BMutablePartition*)
       BPartitionHandle::GetContentParameterEditor(BPartitionParameterEditor**)
       BPartitionHandle::GetNextSupportedType(BMutablePartition const*, int*, BString*)
       BPartitionHandle::GetParameterEditor(B_PARAMETER_EDITOR_TYPE, BPartitionParameterEditor**)
       BPartitionHandle::GetPartitioningInfo(BPartitioningInfo*)
       BPartitionHandle::Move(long)
       BPartitionHandle::MoveChild(BMutablePartition*, long)
       BPartitionHandle::Partition() const
       BPartitionHandle::Repair(bool)
       BPartitionHandle::Resize(long)
       BPartitionHandle::ResizeChild(BMutablePartition*, long)
       BPartitionHandle::SetContentName(char const*)
       BPartitionHandle::SetContentParameters(char const*)
       BPartitionHandle::SetName(BMutablePartition*, char const*)
       BPartitionHandle::SetParameters(BMutablePartition*, char const*)
       BPartitionHandle::SetType(BMutablePartition*, char const*)
       BPartitionHandle::SupportedChildOperations(BMutablePartition const*, unsigned int)
       BPartitionHandle::SupportedOperations(unsigned int)
       BPartitionHandle::SupportsInitializingChild(BMutablePartition const*, char const*)
       BPartitionHandle::ValidateCreateChild(long*, long*, char const*, BString*, char const*)
       BPartitionHandle::ValidateMove(long*)
       BPartitionHandle::ValidateMoveChild(BMutablePartition const*, long*)
       BPartitionHandle::ValidateResize(long*)
       BPartitionHandle::ValidateResizeChild(BMutablePartition const*, long*)
       BPartitionHandle::ValidateSetContentName(BString*)
       BPartitionHandle::ValidateSetContentParameters(char const*)
       BPartitionHandle::ValidateSetName(BMutablePartition const*, BString*)
       BPartitionHandle::ValidateSetParameters(BMutablePartition const*, char const*)
       BPartitionHandle::ValidateSetType(BMutablePartition const*, char const*)
       BPartitioningInfo::_InsertSpaces(int, int)
       BPartitioningInfo::_RemoveSpaces(int, int)
       BPartitioningInfo::~BPartitioningInfo()
       BPartitioningInfo::~BPartitioningInfo()
       BPartitioningInfo::~BPartitioningInfo()
       BPartitioningInfo::BPartitioningInfo()
       BPartitioningInfo::BPartitioningInfo()
       BPartitioningInfo::CountPartitionableSpaces() const
       BPartitioningInfo::ExcludeOccupiedSpace(long, long)
       BPartitioningInfo::GetPartitionableSpaceAt(int, long*, long*) const
       BPartitioningInfo::PartitionID() const
       BPartitioningInfo::PrintToStream() const
       BPartitioningInfo::SetTo(long, long)
       BPartitioningInfo::Unset()
       BPartitionParameterEditor::~BPartitionParameterEditor()
       BPartitionParameterEditor::~BPartitionParameterEditor()
       BPartitionParameterEditor::~BPartitionParameterEditor()
       BPartitionParameterEditor::BPartitionParameterEditor()
       BPartitionParameterEditor::BPartitionParameterEditor()
       BPartitionParameterEditor::GetParameters(BString&)
       BPartitionParameterEditor::ModificationMessage() const
       BPartitionParameterEditor::ParameterChanged(char const*, BVariant const&)
       BPartitionParameterEditor::SetModificationMessage(BMessage*)
       BPartitionParameterEditor::SetTo(BPartition*)
       BPartitionParameterEditor::ValidateParameters() const
       BPartitionParameterEditor::View()
       BPasswordKey::~BPasswordKey()
       BPasswordKey::~BPasswordKey()
       BPasswordKey::~BPasswordKey()
       BPasswordKey::BPasswordKey()
       BPasswordKey::BPasswordKey()
       BPasswordKey::BPasswordKey(BPasswordKey&)
       BPasswordKey::BPasswordKey(BPasswordKey&)
       BPasswordKey::BPasswordKey(char const*, BKeyPurpose, char const*, char const*)
       BPasswordKey::BPasswordKey(char const*, BKeyPurpose, char const*, char const*)
       BPasswordKey::Password() const
       BPasswordKey::PrintToStream()
       BPasswordKey::SetPassword(char const*)
       BPasswordKey::SetTo(char const*, BKeyPurpose, char const*, char const*)
       BPath::_MustNormalize(char const*, int*)
       BPath::_SetPath(char const*)
       BPath::_WarPath1()
       BPath::_WarPath2()
       BPath::_WarPath3()
       BPath::~BPath()
       BPath::~BPath()
       BPath::~BPath()
       BPath::AllowsTypeCode(unsigned int) const
       BPath::Append(char const*, bool)
       BPath::BPath()
       BPath::BPath()
       BPath::BPath(BDirectory const*, char const*, bool)
       BPath::BPath(BDirectory const*, char const*, bool)
       BPath::BPath(BEntry const*)
       BPath::BPath(BEntry const*)
       BPath::BPath(BPath const&)
       BPath::BPath(BPath const&)
       BPath::BPath(char const*, char const*, bool)
       BPath::BPath(char const*, char const*, bool)
       BPath::BPath(entry_ref const*)
       BPath::BPath(entry_ref const*)
       BPath::Flatten(void*, long) const
       BPath::FlattenedSize() const
       BPath::GetParent(BPath*) const
       BPath::InitCheck() const
       BPath::IsAbsolute() const
       BPath::IsFixedSize() const
       BPath::Leaf() const
       BPath::operator!=(BPath const&) const
       BPath::operator!=(char const*) const
       BPath::operator=(BPath const&)
       BPath::operator=(char const*)
       BPath::operator==(BPath const&) const
       BPath::operator==(char const*) const
       BPath::Path() const
       BPath::SetTo(BDirectory const*, char const*, bool)
       BPath::SetTo(BEntry const*)
       BPath::SetTo(char const*, char const*, bool)
       BPath::SetTo(entry_ref const*)
       BPath::TypeCode() const
       BPath::Unflatten(unsigned int, void const*, long)
       BPath::Unset()
       BPathFinder::_SetTo(void const*, char const*, char const*)
       BPathFinder::BPathFinder(char const*, char const*)
       BPathFinder::BPathFinder(char const*, char const*)
       BPathFinder::BPathFinder(entry_ref const&, char const*)
       BPathFinder::BPathFinder(entry_ref const&, char const*)
       BPathFinder::BPathFinder(void const*, char const*)
       BPathFinder::BPathFinder(void const*, char const*)
       BPathFinder::FindPath(char const*, path_base_directory, char const*, unsigned int, BPath&)
       BPathFinder::FindPath(path_base_directory, BPath&)
       BPathFinder::FindPath(path_base_directory, char const*, BPath&)
       BPathFinder::FindPath(path_base_directory, char const*, unsigned int, BPath&)
       BPathFinder::FindPaths(char const*, path_base_directory, char const*, unsigned int, BStringList&)
       BPathFinder::FindPaths(path_base_directory, BStringList&)
       BPathFinder::FindPaths(path_base_directory, char const*, BStringList&)
       BPathFinder::FindPaths(path_base_directory, char const*, unsigned int, BStringList&)
       BPathFinder::SetTo(char const*, char const*)
       BPathFinder::SetTo(entry_ref const&, char const*)
       BPathFinder::SetTo(void const*, char const*)
       BPicture::_AssertLocalCopy()
       BPicture::_AssertOldLocalCopy()
       BPicture::_AssertServerCopy()
       BPicture::_DisposeData()
       BPicture::_Download()
       BPicture::_ImportOldData(void const*, int)
       BPicture::_InitData()
       BPicture::_ReservedPicture1()
       BPicture::_ReservedPicture2()
       BPicture::_ReservedPicture3()
       BPicture::_Upload()
       BPicture::~BPicture()
       BPicture::~BPicture()
       BPicture::~BPicture()
       BPicture::Archive(BMessage*, bool) const
       BPicture::BPicture()
       BPicture::BPicture()
       BPicture::BPicture(BMessage*)
       BPicture::BPicture(BMessage*)
       BPicture::BPicture(BPicture const&)
       BPicture::BPicture(BPicture const&)
       BPicture::BPicture(void const*, int)
       BPicture::BPicture(void const*, int)
       BPicture::Data() const
       BPicture::DataSize() const
       BPicture::Flatten(BDataIO*)
       BPicture::Instantiate(BMessage*)
       BPicture::operator=(BPicture const&)
       BPicture::Perform(unsigned int, void*)
       BPicture::Play(void**, int, void*)
       BPicture::Private::Private(BPicture*)
       BPicture::Private::Private(BPicture*)
       BPicture::Private::ReconnectToAppServer()
       BPicture::SetToken(int)
       BPicture::StepDown()
       BPicture::Token() const
       BPicture::Unflatten(BDataIO*)
       BPicture::Usurp(BPicture*)
       BPictureButton::_ReservedPictureButton1()
       BPictureButton::_ReservedPictureButton2()
       BPictureButton::_ReservedPictureButton3()
       BPictureButton::~BPictureButton()
       BPictureButton::~BPictureButton()
       BPictureButton::~BPictureButton()
       BPictureButton::AllAttached()
       BPictureButton::AllDetached()
       BPictureButton::Archive(BMessage*, bool) const
       BPictureButton::AttachedToWindow()
       BPictureButton::Behavior() const
       BPictureButton::BPictureButton(BMessage*)
       BPictureButton::BPictureButton(BMessage*)
       BPictureButton::BPictureButton(BRect, char const*, BPicture*, BPicture*, BMessage*, unsigned int, unsigned int, unsigned int)
       BPictureButton::BPictureButton(BRect, char const*, BPicture*, BPicture*, BMessage*, unsigned int, unsigned int, unsigned int)
       BPictureButton::DetachedFromWindow()
       BPictureButton::DisabledOff() const
       BPictureButton::DisabledOn() const
       BPictureButton::Draw(BRect)
       BPictureButton::EnabledOff() const
       BPictureButton::EnabledOn() const
       BPictureButton::FrameMoved(BPoint)
       BPictureButton::FrameResized(float, float)
       BPictureButton::GetPreferredSize(float*, float*)
       BPictureButton::GetSupportedSuites(BMessage*)
       BPictureButton::Instantiate(BMessage*)
       BPictureButton::Invoke(BMessage*)
       BPictureButton::KeyDown(char const*, int)
       BPictureButton::MakeFocus(bool)
       BPictureButton::MessageReceived(BMessage*)
       BPictureButton::MouseDown(BPoint)
       BPictureButton::MouseMoved(BPoint, unsigned int, BMessage const*)
       BPictureButton::MouseUp(BPoint)
       BPictureButton::operator=(BPictureButton const&)
       BPictureButton::Perform(unsigned int, void*)
       BPictureButton::ResizeToPreferred()
       BPictureButton::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BPictureButton::SetBehavior(unsigned int)
       BPictureButton::SetDisabledOff(BPicture*)
       BPictureButton::SetDisabledOn(BPicture*)
       BPictureButton::SetEnabledOff(BPicture*)
       BPictureButton::SetEnabledOn(BPicture*)
       BPictureButton::SetIcon(BBitmap const*, unsigned int)
       BPictureButton::SetValue(int)
       BPictureButton::WindowActivated(bool)
       BPoint::ConstrainTo(BRect)
       BPoint::operator-() const
       BPoint::operator-(BPoint const&) const
       BPoint::operator-=(BPoint const&)
       BPoint::operator!=(BPoint const&) const
       BPoint::operator+(BPoint const&) const
       BPoint::operator+=(BPoint const&)
       BPoint::operator==(BPoint const&) const
       BPoint::PrintToStream() const
       BPolygon::_AddPoints(BPoint const*, int, bool)
       BPolygon::_ComputeBounds()
       BPolygon::_MapPoint(BPoint*, BRect const&, BRect const&)
       BPolygon::_MapRectangle(BRect*, BRect const&, BRect const&)
       BPolygon::~BPolygon()
       BPolygon::~BPolygon()
       BPolygon::~BPolygon()
       BPolygon::AddPoints(BPoint const*, int)
       BPolygon::BPolygon()
       BPolygon::BPolygon()
       BPolygon::BPolygon(BPoint const*, int)
       BPolygon::BPolygon(BPoint const*, int)
       BPolygon::BPolygon(BPolygon const*)
       BPolygon::BPolygon(BPolygon const*)
       BPolygon::BPolygon(BPolygon const&)
       BPolygon::BPolygon(BPolygon const&)
       BPolygon::CountPoints() const
       BPolygon::Frame() const
       BPolygon::MapTo(BRect, BRect)
       BPolygon::operator=(BPolygon const&)
       BPolygon::PrintToStream() const
       BPopUpMenu::_Go(BPoint, bool, bool, BRect*, bool)
       BPopUpMenu::_ReservedPopUpMenu1()
       BPopUpMenu::_ReservedPopUpMenu2()
       BPopUpMenu::_ReservedPopUpMenu3()
       BPopUpMenu::_StartTrack(BPoint, bool, bool, BRect*)
       BPopUpMenu::_thread_entry(void*)
       BPopUpMenu::_WaitMenu(void*)
       BPopUpMenu::~BPopUpMenu()
       BPopUpMenu::~BPopUpMenu()
       BPopUpMenu::~BPopUpMenu()
       BPopUpMenu::AllAttached()
       BPopUpMenu::AllDetached()
       BPopUpMenu::Archive(BMessage*, bool) const
       BPopUpMenu::AsyncAutoDestruct() const
       BPopUpMenu::AttachedToWindow()
       BPopUpMenu::BPopUpMenu(BMessage*)
       BPopUpMenu::BPopUpMenu(BMessage*)
       BPopUpMenu::BPopUpMenu(char const*, bool, bool, menu_layout)
       BPopUpMenu::BPopUpMenu(char const*, bool, bool, menu_layout)
       BPopUpMenu::DetachedFromWindow()
       BPopUpMenu::FrameMoved(BPoint)
       BPopUpMenu::FrameResized(float, float)
       BPopUpMenu::GetPreferredSize(float*, float*)
       BPopUpMenu::GetSupportedSuites(BMessage*)
       BPopUpMenu::Go(BPoint, bool, bool, bool)
       BPopUpMenu::Go(BPoint, bool, bool, BRect, bool)
       BPopUpMenu::Instantiate(BMessage*)
       BPopUpMenu::MakeFocus(bool)
       BPopUpMenu::MessageReceived(BMessage*)
       BPopUpMenu::MouseDown(BPoint)
       BPopUpMenu::MouseMoved(BPoint, unsigned int, BMessage const*)
       BPopUpMenu::MouseUp(BPoint)
       BPopUpMenu::operator=(BPopUpMenu const&)
       BPopUpMenu::Perform(unsigned int, void*)
       BPopUpMenu::ResizeToPreferred()
       BPopUpMenu::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BPopUpMenu::ScreenLocation()
       BPopUpMenu::SetAsyncAutoDestruct(bool)
       BPositionIO::_ReservedPositionIO10()
       BPositionIO::_ReservedPositionIO11()
       BPositionIO::_ReservedPositionIO12()
       BPositionIO::_ReservedPositionIO2()
       BPositionIO::_ReservedPositionIO3()
       BPositionIO::_ReservedPositionIO4()
       BPositionIO::_ReservedPositionIO5()
       BPositionIO::_ReservedPositionIO6()
       BPositionIO::_ReservedPositionIO7()
       BPositionIO::_ReservedPositionIO8()
       BPositionIO::_ReservedPositionIO9()
       BPositionIO::~BPositionIO()
       BPositionIO::~BPositionIO()
       BPositionIO::~BPositionIO()
       BPositionIO::BPositionIO()
       BPositionIO::BPositionIO()
       BPositionIO::GetSize(long*) const
       BPositionIO::Read(void*, unsigned long)
       BPositionIO::ReadAtExactly(long, void*, unsigned long, unsigned long*)
       BPositionIO::SetSize(long)
       BPositionIO::Write(void const*, unsigned long)
       BPositionIO::WriteAtExactly(long, void const*, unsigned long, unsigned long*)
       BPrintJob::_AddPicture(BPicture&, BRect&, BPoint&)
       BPrintJob::_AddSetupSpec()
       BPrintJob::_EndLastPage()
       BPrintJob::_GetCurrentPrinterName() const
       BPrintJob::_GetMangledName(char*, unsigned long) const
       BPrintJob::_HandlePageSetup(BMessage*)
       BPrintJob::_HandlePrintSetup(BMessage*)
       BPrintJob::_LoadDefaultSettings()
       BPrintJob::_NewPage()
       BPrintJob::_RecurseView(BView*, BPoint, BPicture*, BRect)
       BPrintJob::_ReservedPrintJob1()
       BPrintJob::_ReservedPrintJob2()
       BPrintJob::_ReservedPrintJob3()
       BPrintJob::_ReservedPrintJob4()
       BPrintJob::~BPrintJob()
       BPrintJob::~BPrintJob()
       BPrintJob::~BPrintJob()
       BPrintJob::BeginJob()
       BPrintJob::BPrintJob(char const*)
       BPrintJob::BPrintJob(char const*)
       BPrintJob::CancelJob()
       BPrintJob::CanContinue()
       BPrintJob::CommitJob()
       BPrintJob::ConfigJob()
       BPrintJob::ConfigPage()
       BPrintJob::DrawView(BView*, BRect, BPoint)
       BPrintJob::FirstPage()
       BPrintJob::GetResolution(int*, int*)
       BPrintJob::IsSettingsMessageValid(BMessage*) const
       BPrintJob::LastPage()
       BPrintJob::PaperRect()
       BPrintJob::PrintableRect()
       BPrintJob::PrinterType(void*) const
       BPrintJob::SetSettings(BMessage*)
       BPrintJob::Settings()
       BPrintJob::SpoolPage()
       BPrivate::_BTextInput_::_BTextInput_(BMessage*)
       BPrivate::_BTextInput_::_BTextInput_(BMessage*)
       BPrivate::_BTextInput_::_BTextInput_(BRect, BRect, unsigned int, unsigned int)
       BPrivate::_BTextInput_::_BTextInput_(BRect, BRect, unsigned int, unsigned int)
       BPrivate::_BTextInput_::~_BTextInput_()
       BPrivate::_BTextInput_::~_BTextInput_()
       BPrivate::_BTextInput_::~_BTextInput_()
       BPrivate::_BTextInput_::Archive(BMessage*, bool) const
       BPrivate::_BTextInput_::DeleteText(int, int)
       BPrivate::_BTextInput_::FrameResized(float, float)
       BPrivate::_BTextInput_::InsertText(char const*, int, int, text_run_array const*)
       BPrivate::_BTextInput_::Instantiate(BMessage*)
       BPrivate::_BTextInput_::KeyDown(char const*, int)
       BPrivate::_BTextInput_::MakeFocus(bool)
       BPrivate::_BTextInput_::MinSize()
       BPrivate::_BTextInput_::MouseDown(BPoint)
       BPrivate::_BTextInput_::Paste(BClipboard*)
       BPrivate::_BTextInput_::SetInitialText()
       BPrivate::_BTextInput_::TextControl()
       BPrivate::AboutView::_GetIconFromSignature(char const*)
       BPrivate::AboutView::_GetVersionFromSignature(char const*)
       BPrivate::AboutView::~AboutView()
       BPrivate::AboutView::~AboutView()
       BPrivate::AboutView::~AboutView()
       BPrivate::AboutView::AboutView(char const*, char const*)
       BPrivate::AboutView::AboutView(char const*, char const*)
       BPrivate::AboutView::AllAttached()
       BPrivate::AboutView::Icon()
       BPrivate::AboutView::Name()
       BPrivate::AboutView::SetIcon(BBitmap*)
       BPrivate::AboutView::SetName(char const*)
       BPrivate::AboutView::SetVersion(char const*)
       BPrivate::AboutView::Version()
       BPrivate::AppServerLink::~AppServerLink()
       BPrivate::AppServerLink::~AppServerLink()
       BPrivate::AppServerLink::~AppServerLink()
       BPrivate::AppServerLink::AppServerLink()
       BPrivate::AppServerLink::AppServerLink()
       BPrivate::Archiving::BArchiveManager::~BArchiveManager()
       BPrivate::Archiving::BArchiveManager::~BArchiveManager()
       BPrivate::Archiving::BArchiveManager::ArchiveObject(BArchivable*, bool, int&)
       BPrivate::Archiving::BArchiveManager::ArchiverLeaving(BArchiver const*, int)
       BPrivate::Archiving::BArchiveManager::BArchiveManager(BArchiver const*)
       BPrivate::Archiving::BArchiveManager::BArchiveManager(BArchiver const*)
       BPrivate::Archiving::BArchiveManager::GetTokenForArchivable(BArchivable*, int&)
       BPrivate::Archiving::BArchiveManager::IsArchived(BArchivable*)
       BPrivate::Archiving::BArchiveManager::RegisterArchivable(BArchivable const*)
       BPrivate::Archiving::BManagerBase::ArchiveManager(BMessage const*)
       BPrivate::Archiving::BManagerBase::UnarchiveManager(BMessage const*)
       BPrivate::Archiving::BUnarchiveManager::~BUnarchiveManager()
       BPrivate::Archiving::BUnarchiveManager::~BUnarchiveManager()
       BPrivate::Archiving::BUnarchiveManager::Acquire()
       BPrivate::Archiving::BUnarchiveManager::AssumeOwnership(BArchivable*)
       BPrivate::Archiving::BUnarchiveManager::BUnarchiveManager(BMessage*)
       BPrivate::Archiving::BUnarchiveManager::BUnarchiveManager(BMessage*)
       BPrivate::Archiving::BUnarchiveManager::GetArchivableForToken(int, BUnarchiver::ownership_policy, BArchivable*&)
       BPrivate::Archiving::BUnarchiveManager::IsInstantiated(int)
       BPrivate::Archiving::BUnarchiveManager::RegisterArchivable(BArchivable*)
       BPrivate::Archiving::BUnarchiveManager::RelinquishOwnership(BArchivable*)
       BPrivate::Archiving::BUnarchiveManager::UnarchiverLeaving(BUnarchiver const*, int)
       BPrivate::Archiving::kArchivableField
       BPrivate::Archiving::kManagedField
       BPrivate::BControlLook::_ReservedControlLook1()
       BPrivate::BControlLook::_ReservedControlLook10()
       BPrivate::BControlLook::_ReservedControlLook2()
       BPrivate::BControlLook::_ReservedControlLook3()
       BPrivate::BControlLook::_ReservedControlLook4()
       BPrivate::BControlLook::_ReservedControlLook5()
       BPrivate::BControlLook::_ReservedControlLook6()
       BPrivate::BControlLook::_ReservedControlLook7()
       BPrivate::BControlLook::_ReservedControlLook8()
       BPrivate::BControlLook::_ReservedControlLook9()
       BPrivate::BControlLook::~BControlLook()
       BPrivate::BControlLook::~BControlLook()
       BPrivate::BControlLook::~BControlLook()
       BPrivate::BControlLook::BControlLook()
       BPrivate::BControlLook::BControlLook()
       BPrivate::BControlLook::ComposeIconSize(int)
       BPrivate::BControlLook::ComposeSpacing(float)
       BPrivate::BControlLook::DrawLabel(BView*, char const*, BBitmap const*, BRect, BRect const&, rgb_color const&, unsigned int, rgb_color const*)
       BPrivate::BControlLook::GetInsets(BPrivate::BControlLook::frame_type, BPrivate::BControlLook::background_type, unsigned int, float&, float&, float&, float&)
       BPrivate::BControlLook::GetScrollBarWidth(orientation)
       BPrivate::BControlLook::SetBackgroundInfo(BMessage const&)
       BPrivate::BCopyEngine::_CopyAttributes(char const*, BNode&, char const*, BNode&)
       BPrivate::BCopyEngine::_CopyEntry(char const*, char const*)
       BPrivate::BCopyEngine::_CopyFileData(char const*, BFile&, char const*, BFile&)
       BPrivate::BCopyEngine::_HandleAttributeError(char const*, char const*, unsigned int, int, char const*, ...)
       BPrivate::BCopyEngine::_HandleEntryError(char const*, int, char const*, ...)
       BPrivate::BCopyEngine::_NotifyError(int, char const*, ...)
       BPrivate::BCopyEngine::_NotifyErrorVarArgs(int, char const*, __va_list_tag*)
       BPrivate::BCopyEngine::~BCopyEngine()
       BPrivate::BCopyEngine::~BCopyEngine()
       BPrivate::BCopyEngine::AddFlags(unsigned int)
       BPrivate::BCopyEngine::BController::~BController()
       BPrivate::BCopyEngine::BController::~BController()
       BPrivate::BCopyEngine::BController::~BController()
       BPrivate::BCopyEngine::BController::AttributeFinished(char const*, char const*, unsigned int, int)
       BPrivate::BCopyEngine::BController::AttributeStarted(char const*, char const*, unsigned int)
       BPrivate::BCopyEngine::BController::BController()
       BPrivate::BCopyEngine::BController::BController()
       BPrivate::BCopyEngine::BController::EntryFinished(char const*, int)
       BPrivate::BCopyEngine::BController::EntryStarted(char const*)
       BPrivate::BCopyEngine::BController::ErrorOccurred(char const*, int)
       BPrivate::BCopyEngine::BCopyEngine(unsigned int)
       BPrivate::BCopyEngine::BCopyEngine(unsigned int)
       BPrivate::BCopyEngine::Controller() const
       BPrivate::BCopyEngine::CopyEntry(BPrivate::BEntryOperationEngineBase::Entry const&, BPrivate::BEntryOperationEngineBase::Entry const&)
       BPrivate::BCopyEngine::Flags() const
       BPrivate::BCopyEngine::RemoveFlags(unsigned int)
       BPrivate::BCopyEngine::SetController(BPrivate::BCopyEngine::BController*)
       BPrivate::BCopyEngine::SetFlags(unsigned int)
       BPrivate::BDate::_DateToJulianDay(int, int, int)
       BPrivate::BDate::_DaysInMonth(int, int)
       BPrivate::BDate::_SetDate(int, int, int)
       BPrivate::BDate::~BDate()
       BPrivate::BDate::~BDate()
       BPrivate::BDate::AddDays(int)
       BPrivate::BDate::AddMonths(int)
       BPrivate::BDate::AddYears(int)
       BPrivate::BDate::Archive(BMessage*) const
       BPrivate::BDate::BDate()
       BPrivate::BDate::BDate()
       BPrivate::BDate::BDate(BMessage const*)
       BPrivate::BDate::BDate(BMessage const*)
       BPrivate::BDate::BDate(BPrivate::BDate const&)
       BPrivate::BDate::BDate(BPrivate::BDate const&)
       BPrivate::BDate::BDate(int, int, int)
       BPrivate::BDate::BDate(int, int, int)
       BPrivate::BDate::BDate(long, BPrivate::time_type)
       BPrivate::BDate::BDate(long, BPrivate::time_type)
       BPrivate::BDate::CurrentDate(BPrivate::time_type)
       BPrivate::BDate::Date() const
       BPrivate::BDate::DateToJulianDay() const
       BPrivate::BDate::Day() const
       BPrivate::BDate::DayOfWeek() const
       BPrivate::BDate::DayOfYear() const
       BPrivate::BDate::DaysInMonth() const
       BPrivate::BDate::DaysInYear() const
       BPrivate::BDate::Difference(BPrivate::BDate const&) const
       BPrivate::BDate::GetDate(int*, int*, int*) const
       BPrivate::BDate::IsLeapYear() const
       BPrivate::BDate::IsLeapYear(int)
       BPrivate::BDate::IsValid() const
       BPrivate::BDate::IsValid(BPrivate::BDate const&)
       BPrivate::BDate::IsValid(int, int, int)
       BPrivate::BDate::JulianDayToDate(int)
       BPrivate::BDate::LongDayName() const
       BPrivate::BDate::LongDayName(int)
       BPrivate::BDate::LongMonthName() const
       BPrivate::BDate::LongMonthName(int)
       BPrivate::BDate::Month() const
       BPrivate::BDate::operator!=(BPrivate::BDate const&) const
       BPrivate::BDate::operator<(BPrivate::BDate const&) const
       BPrivate::BDate::operator<=(BPrivate::BDate const&) const
       BPrivate::BDate::operator==(BPrivate::BDate const&) const
       BPrivate::BDate::operator>(BPrivate::BDate const&) const
       BPrivate::BDate::operator>=(BPrivate::BDate const&) const
       BPrivate::BDate::SetDate(BPrivate::BDate const&)
       BPrivate::BDate::SetDate(int, int, int)
       BPrivate::BDate::SetDay(int)
       BPrivate::BDate::SetMonth(int)
       BPrivate::BDate::SetYear(int)
       BPrivate::BDate::ShortDayName() const
       BPrivate::BDate::ShortDayName(int)
       BPrivate::BDate::ShortMonthName() const
       BPrivate::BDate::ShortMonthName(int)
       BPrivate::BDate::WeekNumber() const
       BPrivate::BDate::Year() const
       BPrivate::BDateTime::~BDateTime()
       BPrivate::BDateTime::~BDateTime()
       BPrivate::BDateTime::Archive(BMessage*) const
       BPrivate::BDateTime::BDateTime()
       BPrivate::BDateTime::BDateTime()
       BPrivate::BDateTime::BDateTime(BMessage const*)
       BPrivate::BDateTime::BDateTime(BMessage const*)
       BPrivate::BDateTime::BDateTime(BPrivate::BDate const&, BPrivate::BTime const&)
       BPrivate::BDateTime::BDateTime(BPrivate::BDate const&, BPrivate::BTime const&)
       BPrivate::BDateTime::CurrentDateTime(BPrivate::time_type)
       BPrivate::BDateTime::Date()
       BPrivate::BDateTime::Date() const
       BPrivate::BDateTime::IsValid() const
       BPrivate::BDateTime::operator!=(BPrivate::BDateTime const&) const
       BPrivate::BDateTime::operator<(BPrivate::BDateTime const&) const
       BPrivate::BDateTime::operator<=(BPrivate::BDateTime const&) const
       BPrivate::BDateTime::operator==(BPrivate::BDateTime const&) const
       BPrivate::BDateTime::operator>(BPrivate::BDateTime const&) const
       BPrivate::BDateTime::operator>=(BPrivate::BDateTime const&) const
       BPrivate::BDateTime::SetDate(BPrivate::BDate const&)
       BPrivate::BDateTime::SetDateTime(BPrivate::BDate const&, BPrivate::BTime const&)
       BPrivate::BDateTime::SetTime_t(long)
       BPrivate::BDateTime::SetTime(BPrivate::BTime const&)
       BPrivate::BDateTime::Time_t() const
       BPrivate::BDateTime::Time()
       BPrivate::BDateTime::Time() const
       BPrivate::BDirectMessageTarget::~BDirectMessageTarget()
       BPrivate::BDirectMessageTarget::~BDirectMessageTarget()
       BPrivate::BDirectMessageTarget::Acquire()
       BPrivate::BDirectMessageTarget::AddMessage(BMessage*)
       BPrivate::BDirectMessageTarget::BDirectMessageTarget()
       BPrivate::BDirectMessageTarget::BDirectMessageTarget()
       BPrivate::BDirectMessageTarget::Close()
       BPrivate::BDirectMessageTarget::Release()
       BPrivate::BDriverParameter::~BDriverParameter()
       BPrivate::BDriverParameter::~BDriverParameter()
       BPrivate::BDriverParameter::~BDriverParameter()
       BPrivate::BDriverParameter::BDriverParameter()
       BPrivate::BDriverParameter::BDriverParameter()
       BPrivate::BDriverParameter::BDriverParameter(BPrivate::BDriverParameter const&)
       BPrivate::BDriverParameter::BDriverParameter(BPrivate::BDriverParameter const&)
       BPrivate::BDriverParameter::BDriverParameter(driver_parameter const*)
       BPrivate::BDriverParameter::BDriverParameter(driver_parameter const*)
       BPrivate::BDriverParameter::BoolValueAt(int, bool) const
       BPrivate::BDriverParameter::CountValues() const
       BPrivate::BDriverParameter::GetParametersAndCount(int&) const
       BPrivate::BDriverParameter::Int32ValueAt(int, int) const
       BPrivate::BDriverParameter::Int64ValueAt(int, long) const
       BPrivate::BDriverParameter::IsValid() const
       BPrivate::BDriverParameter::Name() const
       BPrivate::BDriverParameter::operator=(BPrivate::BDriverParameter const&)
       BPrivate::BDriverParameter::SetTo(driver_parameter const*)
       BPrivate::BDriverParameter::ValueAt(int, char const*) const
       BPrivate::BDriverParameter::Values() const
       BPrivate::BDriverParameterContainer::~BDriverParameterContainer()
       BPrivate::BDriverParameterContainer::~BDriverParameterContainer()
       BPrivate::BDriverParameterContainer::~BDriverParameterContainer()
       BPrivate::BDriverParameterContainer::BDriverParameterContainer()
       BPrivate::BDriverParameterContainer::BDriverParameterContainer()
       BPrivate::BDriverParameterContainer::CountParameters() const
       BPrivate::BDriverParameterContainer::FindParameter(char const*, BPrivate::BDriverParameter*) const
       BPrivate::BDriverParameterContainer::GetBoolParameterValue(char const*, bool, bool) const
       BPrivate::BDriverParameterContainer::GetInt32ParameterValue(char const*, int, int) const
       BPrivate::BDriverParameterContainer::GetInt64ParameterValue(char const*, long, long) const
       BPrivate::BDriverParameterContainer::GetParameter(char const*) const
       BPrivate::BDriverParameterContainer::GetParameterValue(char const*, char const*, char const*) const
       BPrivate::BDriverParameterContainer::ParameterAt(int) const
       BPrivate::BDriverParameterContainer::ParameterIterator() const
       BPrivate::BDriverParameterContainer::ParameterIterator(char const*) const
       BPrivate::BDriverParameterContainer::Parameters() const
       BPrivate::BDriverParameterIterator::_SetTo(BPrivate::BDriverParameterIterator::Delegate*, bool)
       BPrivate::BDriverParameterIterator::~BDriverParameterIterator()
       BPrivate::BDriverParameterIterator::~BDriverParameterIterator()
       BPrivate::BDriverParameterIterator::BDriverParameterIterator()
       BPrivate::BDriverParameterIterator::BDriverParameterIterator()
       BPrivate::BDriverParameterIterator::BDriverParameterIterator(BPrivate::BDriverParameterIterator const&)
       BPrivate::BDriverParameterIterator::BDriverParameterIterator(BPrivate::BDriverParameterIterator const&)
       BPrivate::BDriverParameterIterator::BDriverParameterIterator(BPrivate::BDriverParameterIterator::Delegate*)
       BPrivate::BDriverParameterIterator::BDriverParameterIterator(BPrivate::BDriverParameterIterator::Delegate*)
       BPrivate::BDriverParameterIterator::HasNext() const
       BPrivate::BDriverParameterIterator::Next()
       BPrivate::BDriverParameterIterator::operator=(BPrivate::BDriverParameterIterator const&)
       BPrivate::BDriverSettings::~BDriverSettings()
       BPrivate::BDriverSettings::~BDriverSettings()
       BPrivate::BDriverSettings::~BDriverSettings()
       BPrivate::BDriverSettings::BDriverSettings()
       BPrivate::BDriverSettings::BDriverSettings()
       BPrivate::BDriverSettings::GetParametersAndCount(int&) const
       BPrivate::BDriverSettings::Load(char const*)
       BPrivate::BDriverSettings::Load(entry_ref const&)
       BPrivate::BDriverSettings::SetToString(char const*)
       BPrivate::BDriverSettings::Unset()
       BPrivate::be_control_look
       BPrivate::BEntryOperationEngineBase::Entry::~Entry()
       BPrivate::BEntryOperationEngineBase::Entry::~Entry()
       BPrivate::BEntryOperationEngineBase::Entry::Entry(BDirectory const&, char const*)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(BDirectory const&, char const*)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(BEntry const&)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(BEntry const&)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(char const*)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(char const*)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(entry_ref const&)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(entry_ref const&)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(node_ref const&, char const*)
       BPrivate::BEntryOperationEngineBase::Entry::Entry(node_ref const&, char const*)
       BPrivate::BEntryOperationEngineBase::Entry::GetPath(BPath&, char const*&) const
       BPrivate::BEntryOperationEngineBase::Entry::GetPathOrName(BString&) const
       BPrivate::BEntryOperationEngineBase::Entry::Path() const
       BPrivate::BEntryOperationEngineBase::Entry::PathOrName() const
       BPrivate::BIcon::_ConvertToRGB32(BBitmap const*, bool)
       BPrivate::BIcon::_MakeBitmaps(BBitmap const*, unsigned int)
       BPrivate::BIcon::_TrimBitmap(BBitmap const*, bool, BBitmap*&)
       BPrivate::BIcon::~BIcon()
       BPrivate::BIcon::~BIcon()
       BPrivate::BIcon::BIcon()
       BPrivate::BIcon::BIcon()
       BPrivate::BIcon::Bitmap(unsigned int) const
       BPrivate::BIcon::CopyBitmap(BBitmap const&, unsigned int)
       BPrivate::BIcon::CreateBitmap(BRect const&, color_space, unsigned int)
       BPrivate::BIcon::DeleteBitmaps()
       BPrivate::BIcon::SetBitmap(BBitmap*, unsigned int)
       BPrivate::BIcon::SetExternalBitmap(BBitmap const*, unsigned int, unsigned int)
       BPrivate::BIcon::SetIconBitmap(BBitmap const*, unsigned int, unsigned int, BPrivate::BIcon*&)
       BPrivate::BIcon::SetTo(BBitmap const*, unsigned int)
       BPrivate::BIcon::UpdateIcon(BBitmap const*, unsigned int, BPrivate::BIcon*&)
       BPrivate::BLooperList::AddLooper(BLooper*)
       BPrivate::BLooperList::AssertLocked()
       BPrivate::BLooperList::BLooperList()
       BPrivate::BLooperList::BLooperList()
       BPrivate::BLooperList::CountLoopers()
       BPrivate::BLooperList::EmptySlotPred(BPrivate::BLooperList::LooperData&)
       BPrivate::BLooperList::FindLooperPred::operator()(BPrivate::BLooperList::LooperData&)
       BPrivate::BLooperList::FindNamePred::operator()(BPrivate::BLooperList::LooperData&)
       BPrivate::BLooperList::FindPortPred::operator()(BPrivate::BLooperList::LooperData&)
       BPrivate::BLooperList::FindThreadPred::operator()(BPrivate::BLooperList::LooperData&)
       BPrivate::BLooperList::GetLooperList(BList*)
       BPrivate::BLooperList::InitAfterFork()
       BPrivate::BLooperList::IsLocked()
       BPrivate::BLooperList::IsLooperValid(BLooper const*)
       BPrivate::BLooperList::Lock()
       BPrivate::BLooperList::LooperAt(int)
       BPrivate::BLooperList::LooperData::LooperData()
       BPrivate::BLooperList::LooperData::LooperData()
       BPrivate::BLooperList::LooperData::LooperData(BLooper*)
       BPrivate::BLooperList::LooperData::LooperData(BLooper*)
       BPrivate::BLooperList::LooperData::LooperData(BPrivate::BLooperList::LooperData const&)
       BPrivate::BLooperList::LooperData::LooperData(BPrivate::BLooperList::LooperData const&)
       BPrivate::BLooperList::LooperData::operator=(BPrivate::BLooperList::LooperData const&)
       BPrivate::BLooperList::LooperForName(char const*)
       BPrivate::BLooperList::LooperForPort(int)
       BPrivate::BLooperList::LooperForThread(int)
       BPrivate::BLooperList::RemoveLooper(BLooper*)
       BPrivate::BLooperList::Unlock()
       BPrivate::BMenuFrame::AttachedToWindow()
       BPrivate::BMenuFrame::BMenuFrame(BMenu*)
       BPrivate::BMenuFrame::BMenuFrame(BMenu*)
       BPrivate::BMenuFrame::DetachedFromWindow()
       BPrivate::BMenuFrame::Draw(BRect)
       BPrivate::BMenuScroller::BMenuScroller(BRect)
       BPrivate::BMenuScroller::BMenuScroller(BRect)
       BPrivate::BMenuScroller::IsEnabled() const
       BPrivate::BMenuScroller::SetEnabled(bool)
       BPrivate::BMenuWindow::_Scroll(BPoint const&)
       BPrivate::BMenuWindow::_ScrollBy(float const&)
       BPrivate::BMenuWindow::~BMenuWindow()
       BPrivate::BMenuWindow::~BMenuWindow()
       BPrivate::BMenuWindow::~BMenuWindow()
       BPrivate::BMenuWindow::AttachMenu(BMenu*)
       BPrivate::BMenuWindow::AttachScrollers()
       BPrivate::BMenuWindow::BMenuWindow(char const*)
       BPrivate::BMenuWindow::BMenuWindow(char const*)
       BPrivate::BMenuWindow::CheckForScrolling(BPoint const&)
       BPrivate::BMenuWindow::DetachMenu()
       BPrivate::BMenuWindow::DetachScrollers()
       BPrivate::BMenuWindow::DispatchMessage(BMessage*, BHandler*)
       BPrivate::BMenuWindow::GetSteps(float*, float*) const
       BPrivate::BMenuWindow::HasScrollers() const
       BPrivate::BMenuWindow::SetSmallStep(float)
       BPrivate::BMenuWindow::TryScrollBy(float const&)
       BPrivate::BMenuWindow::TryScrollTo(float const&)
       BPrivate::BPathMonitor::_Init()
       BPrivate::BPathMonitor::_InitIfNeeded()
       BPrivate::BPathMonitor::~BPathMonitor()
       BPrivate::BPathMonitor::~BPathMonitor()
       BPrivate::BPathMonitor::BPathMonitor()
       BPrivate::BPathMonitor::BPathMonitor()
       BPrivate::BPathMonitor::BWatchingInterface::~BWatchingInterface()
       BPrivate::BPathMonitor::BWatchingInterface::~BWatchingInterface()
       BPrivate::BPathMonitor::BWatchingInterface::~BWatchingInterface()
       BPrivate::BPathMonitor::BWatchingInterface::BWatchingInterface()
       BPrivate::BPathMonitor::BWatchingInterface::BWatchingInterface()
       BPrivate::BPathMonitor::BWatchingInterface::StopWatching(BHandler const*, BLooper const*)
       BPrivate::BPathMonitor::BWatchingInterface::StopWatching(BMessenger const&)
       BPrivate::BPathMonitor::BWatchingInterface::WatchNode(node_ref const*, unsigned int, BHandler const*, BLooper const*)
       BPrivate::BPathMonitor::BWatchingInterface::WatchNode(node_ref const*, unsigned int, BMessenger const&)
       BPrivate::BPathMonitor::SetWatchingInterface(BPrivate::BPathMonitor::BWatchingInterface*)
       BPrivate::BPathMonitor::StartWatching(char const*, unsigned int, BMessenger const&)
       BPrivate::BPathMonitor::StopWatching(BMessenger const&)
       BPrivate::BPathMonitor::StopWatching(char const*, BMessenger const&)
       BPrivate::BPrivateScreen::_Acquire()
       BPrivate::BPrivateScreen::_Get(int, bool)
       BPrivate::BPrivateScreen::_GetFrameBufferConfig(frame_buffer_config&)
       BPrivate::BPrivateScreen::_IsValid(int)
       BPrivate::BPrivateScreen::_Release()
       BPrivate::BPrivateScreen::_RetraceSemaphore()
       BPrivate::BPrivateScreen::~BPrivateScreen()
       BPrivate::BPrivateScreen::~BPrivateScreen()
       BPrivate::BPrivateScreen::BaseAddress()
       BPrivate::BPrivateScreen::BPrivateScreen(int)
       BPrivate::BPrivateScreen::BPrivateScreen(int)
       BPrivate::BPrivateScreen::BytesPerRow()
       BPrivate::BPrivateScreen::ColorForIndex(unsigned char)
       BPrivate::BPrivateScreen::ColorMap()
       BPrivate::BPrivateScreen::ColorSpace()
       BPrivate::BPrivateScreen::DesktopColor(unsigned int)
       BPrivate::BPrivateScreen::DPMSCapabilites()
       BPrivate::BPrivateScreen::DPMSState()
       BPrivate::BPrivateScreen::Frame()
       BPrivate::BPrivateScreen::Get(BWindow*)
       BPrivate::BPrivateScreen::Get(int)
       BPrivate::BPrivateScreen::GetBitmap(BBitmap**, bool, BRect*)
       BPrivate::BPrivateScreen::GetBrightness(float*)
       BPrivate::BPrivateScreen::GetDeviceInfo(accelerant_device_info*)
       BPrivate::BPrivateScreen::GetMode(unsigned int, display_mode*)
       BPrivate::BPrivateScreen::GetModeList(display_mode**, unsigned int*)
       BPrivate::BPrivateScreen::GetMonitorInfo(monitor_info*)
       BPrivate::BPrivateScreen::GetNext(BPrivate::BPrivateScreen*)
       BPrivate::BPrivateScreen::GetNextID(int&)
       BPrivate::BPrivateScreen::GetPixelClockLimits(display_mode*, unsigned int*, unsigned int*)
       BPrivate::BPrivateScreen::GetTimingConstraints(display_timing_constraints*)
       BPrivate::BPrivateScreen::IndexForColor(unsigned char, unsigned char, unsigned char, unsigned char)
       BPrivate::BPrivateScreen::InvertIndex(unsigned char)
       BPrivate::BPrivateScreen::IsValid() const
       BPrivate::BPrivateScreen::ProposeMode(display_mode*, display_mode const*, display_mode const*)
       BPrivate::BPrivateScreen::Put(BPrivate::BPrivateScreen*)
       BPrivate::BPrivateScreen::ReadBitmap(BBitmap*, bool, BRect*)
       BPrivate::BPrivateScreen::SetBrightness(float)
       BPrivate::BPrivateScreen::SetDesktopColor(rgb_color, unsigned int, bool)
       BPrivate::BPrivateScreen::SetDPMS(unsigned int)
       BPrivate::BPrivateScreen::SetMode(unsigned int, display_mode*, bool)
       BPrivate::BPrivateScreen::WaitForRetrace(long)
       BPrivate::BRemoveEngine::_HandleEntryError(char const*, int, char const*, ...)
       BPrivate::BRemoveEngine::_NotifyErrorVarArgs(int, char const*, __va_list_tag*)
       BPrivate::BRemoveEngine::_RemoveEntry(char const*)
       BPrivate::BRemoveEngine::~BRemoveEngine()
       BPrivate::BRemoveEngine::~BRemoveEngine()
       BPrivate::BRemoveEngine::BController::~BController()
       BPrivate::BRemoveEngine::BController::~BController()
       BPrivate::BRemoveEngine::BController::~BController()
       BPrivate::BRemoveEngine::BController::BController()
       BPrivate::BRemoveEngine::BController::BController()
       BPrivate::BRemoveEngine::BController::EntryFinished(char const*, int)
       BPrivate::BRemoveEngine::BController::EntryStarted(char const*)
       BPrivate::BRemoveEngine::BController::ErrorOccurred(char const*, int)
       BPrivate::BRemoveEngine::BRemoveEngine()
       BPrivate::BRemoveEngine::BRemoveEngine()
       BPrivate::BRemoveEngine::Controller() const
       BPrivate::BRemoveEngine::RemoveEntry(BPrivate::BEntryOperationEngineBase::Entry const&)
       BPrivate::BRemoveEngine::SetController(BPrivate::BRemoveEngine::BController*)
       BPrivate::BTextEncoding::~BTextEncoding()
       BPrivate::BTextEncoding::~BTextEncoding()
       BPrivate::BTextEncoding::BTextEncoding(BString)
       BPrivate::BTextEncoding::BTextEncoding(BString)
       BPrivate::BTextEncoding::BTextEncoding(char const*, unsigned long)
       BPrivate::BTextEncoding::BTextEncoding(char const*, unsigned long)
       BPrivate::BTextEncoding::Decode(char const*, unsigned long&, char*, unsigned long&)
       BPrivate::BTextEncoding::Encode(char const*, unsigned long&, char*, unsigned long&)
       BPrivate::BTextEncoding::Flush(char*, unsigned long&)
       BPrivate::BTextEncoding::GetName()
       BPrivate::BTextEncoding::InitCheck()
       BPrivate::BTime::_AddMicroseconds(long)
       BPrivate::BTime::_Microseconds() const
       BPrivate::BTime::_SetTime(long, long, long, long)
       BPrivate::BTime::~BTime()
       BPrivate::BTime::~BTime()
       BPrivate::BTime::AddHours(int)
       BPrivate::BTime::AddMicroseconds(int)
       BPrivate::BTime::AddMilliseconds(int)
       BPrivate::BTime::AddMinutes(int)
       BPrivate::BTime::AddSeconds(int)
       BPrivate::BTime::Archive(BMessage*) const
       BPrivate::BTime::BTime()
       BPrivate::BTime::BTime()
       BPrivate::BTime::BTime(BMessage const*)
       BPrivate::BTime::BTime(BMessage const*)
       BPrivate::BTime::BTime(BPrivate::BTime const&)
       BPrivate::BTime::BTime(BPrivate::BTime const&)
       BPrivate::BTime::BTime(int, int, int, int)
       BPrivate::BTime::BTime(int, int, int, int)
       BPrivate::BTime::CurrentTime(BPrivate::time_type)
       BPrivate::BTime::Difference(BPrivate::BTime const&, BPrivate::diff_type) const
       BPrivate::BTime::Hour() const
       BPrivate::BTime::IsValid() const
       BPrivate::BTime::IsValid(BPrivate::BTime const&)
       BPrivate::BTime::IsValid(int, int, int, int)
       BPrivate::BTime::Microsecond() const
       BPrivate::BTime::Millisecond() const
       BPrivate::BTime::Minute() const
       BPrivate::BTime::operator!=(BPrivate::BTime const&) const
       BPrivate::BTime::operator<(BPrivate::BTime const&) const
       BPrivate::BTime::operator<=(BPrivate::BTime const&) const
       BPrivate::BTime::operator==(BPrivate::BTime const&) const
       BPrivate::BTime::operator>(BPrivate::BTime const&) const
       BPrivate::BTime::operator>=(BPrivate::BTime const&) const
       BPrivate::BTime::Second() const
       BPrivate::BTime::SetTime(BPrivate::BTime const&)
       BPrivate::BTime::SetTime(int, int, int, int)
       BPrivate::BTime::Time() const
       BPrivate::BTokenSpace::~BTokenSpace()
       BPrivate::BTokenSpace::~BTokenSpace()
       BPrivate::BTokenSpace::~BTokenSpace()
       BPrivate::BTokenSpace::AcquireHandlerTarget(int, BPrivate::BDirectMessageTarget**)
       BPrivate::BTokenSpace::BTokenSpace()
       BPrivate::BTokenSpace::BTokenSpace()
       BPrivate::BTokenSpace::CheckToken(int, short) const
       BPrivate::BTokenSpace::GetToken(int, short, void**) const
       BPrivate::BTokenSpace::InitAfterFork()
       BPrivate::BTokenSpace::NewToken(short, void*)
       BPrivate::BTokenSpace::RemoveToken(int)
       BPrivate::BTokenSpace::SetHandlerTarget(int, BPrivate::BDirectMessageTarget*)
       BPrivate::BTokenSpace::SetToken(int, short, void*)
       BPrivate::BUuid::_SetToDevRandom()
       BPrivate::BUuid::_SetToRandomFallback()
       BPrivate::BUuid::~BUuid()
       BPrivate::BUuid::~BUuid()
       BPrivate::BUuid::BUuid()
       BPrivate::BUuid::BUuid()
       BPrivate::BUuid::BUuid(BPrivate::BUuid const&)
       BPrivate::BUuid::BUuid(BPrivate::BUuid const&)
       BPrivate::BUuid::Compare(BPrivate::BUuid const&) const
       BPrivate::BUuid::IsNil() const
       BPrivate::BUuid::operator=(BPrivate::BUuid const&)
       BPrivate::BUuid::SetToRandom()
       BPrivate::BUuid::ToString() const
       BPrivate::BViewPort::_Init()
       BPrivate::BViewPort::~BViewPort()
       BPrivate::BViewPort::~BViewPort()
       BPrivate::BViewPort::~BViewPort()
       BPrivate::BViewPort::BViewPort(BLayoutItem*)
       BPrivate::BViewPort::BViewPort(BLayoutItem*)
       BPrivate::BViewPort::BViewPort(BView*)
       BPrivate::BViewPort::BViewPort(BView*)
       BPrivate::BViewPort::BViewPort(char const*, BLayoutItem*)
       BPrivate::BViewPort::BViewPort(char const*, BLayoutItem*)
       BPrivate::BViewPort::BViewPort(char const*, BView*)
       BPrivate::BViewPort::BViewPort(char const*, BView*)
       BPrivate::BViewPort::ChildItem() const
       BPrivate::BViewPort::ChildView() const
       BPrivate::BViewPort::SetChildItem(BLayoutItem*)
       BPrivate::BViewPort::SetChildView(BView*)
       BPrivate::CalculateChecksum(unsigned char const*, int)
       BPrivate::CatalogAddOnInfo::~CatalogAddOnInfo()
       BPrivate::CatalogAddOnInfo::~CatalogAddOnInfo()
       BPrivate::CatalogAddOnInfo::CatalogAddOnInfo(BString const&, BString const&, unsigned char)
       BPrivate::CatalogAddOnInfo::CatalogAddOnInfo(BString const&, BString const&, unsigned char)
       BPrivate::CatalogAddOnInfo::MakeSureItsLoaded()
       BPrivate::CatalogAddOnInfo::UnloadIfPossible()
       BPrivate::CatKey::CatKey()
       BPrivate::CatKey::CatKey()
       BPrivate::CatKey::CatKey(char const*, char const*, char const*)
       BPrivate::CatKey::CatKey(char const*, char const*, char const*)
       BPrivate::CatKey::CatKey(unsigned int)
       BPrivate::CatKey::CatKey(unsigned int)
       BPrivate::CatKey::GetStringParts(BString*, BString*, BString*) const
       BPrivate::CatKey::HashFun(char const*, int)
       BPrivate::CatKey::operator!=(BPrivate::CatKey const&) const
       BPrivate::CatKey::operator==(BPrivate::CatKey const&) const
       BPrivate::ConvertBits(void const*, void*, int, int, int, int, color_space, color_space, BPoint, BPoint, int, int)
       BPrivate::ConvertBits(void const*, void*, int, int, int, int, color_space, color_space, int, int)
       BPrivate::create_desktop_connection(BPrivate::ServerLink*, char const*, int)
       BPrivate::CreateChildJob::~CreateChildJob()
       BPrivate::CreateChildJob::~CreateChildJob()
       BPrivate::CreateChildJob::~CreateChildJob()
       BPrivate::CreateChildJob::CreateChildJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::CreateChildJob::CreateChildJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::CreateChildJob::Do()
       BPrivate::CreateChildJob::Init(long, long, char const*, char const*, char const*)
       BPrivate::current_team()
       BPrivate::DecorInfo::_Init(bool)
       BPrivate::DecorInfo::~DecorInfo()
       BPrivate::DecorInfo::~DecorInfo()
       BPrivate::DecorInfo::Authors() const
       BPrivate::DecorInfo::CheckForChanges(bool&)
       BPrivate::DecorInfo::DecorInfo()
       BPrivate::DecorInfo::DecorInfo()
       BPrivate::DecorInfo::DecorInfo(BString const&)
       BPrivate::DecorInfo::DecorInfo(BString const&)
       BPrivate::DecorInfo::DecorInfo(entry_ref const&)
       BPrivate::DecorInfo::DecorInfo(entry_ref const&)
       BPrivate::DecorInfo::InitCheck() const
       BPrivate::DecorInfo::IsDefault() const
       BPrivate::DecorInfo::LicenseName() const
       BPrivate::DecorInfo::LicenseURL() const
       BPrivate::DecorInfo::LongDescription() const
       BPrivate::DecorInfo::ModificationTime() const
       BPrivate::DecorInfo::Name() const
       BPrivate::DecorInfo::Path() const
       BPrivate::DecorInfo::Ref() const
       BPrivate::DecorInfo::SetTo(BString)
       BPrivate::DecorInfo::SetTo(entry_ref const&)
       BPrivate::DecorInfo::ShortcutName() const
       BPrivate::DecorInfo::ShortDescription() const
       BPrivate::DecorInfo::SupportURL() const
       BPrivate::DecorInfo::Unset()
       BPrivate::DecorInfo::Version() const
       BPrivate::DecorInfoUtility::_FindDecor(BString const&)
       BPrivate::DecorInfoUtility::_ScanDecorators(BDirectory)
       BPrivate::DecorInfoUtility::~DecorInfoUtility()
       BPrivate::DecorInfoUtility::~DecorInfoUtility()
       BPrivate::DecorInfoUtility::CountDecorators()
       BPrivate::DecorInfoUtility::CurrentDecorator()
       BPrivate::DecorInfoUtility::DecoratorAt(int)
       BPrivate::DecorInfoUtility::DecorInfoUtility(bool)
       BPrivate::DecorInfoUtility::DecorInfoUtility(bool)
       BPrivate::DecorInfoUtility::DefaultDecorator()
       BPrivate::DecorInfoUtility::FindDecorator(BString const&)
       BPrivate::DecorInfoUtility::IsCurrentDecorator(BPrivate::DecorInfo*)
       BPrivate::DecorInfoUtility::Preview(BPrivate::DecorInfo*, BWindow*)
       BPrivate::DecorInfoUtility::ScanDecorators()
       BPrivate::DecorInfoUtility::SetDecorator(BPrivate::DecorInfo*)
       BPrivate::DecorInfoUtility::SetDecorator(int)
       BPrivate::DefaultCatalog::~DefaultCatalog()
       BPrivate::DefaultCatalog::~DefaultCatalog()
       BPrivate::DefaultCatalog::~DefaultCatalog()
       BPrivate::DefaultCatalog::Create(char const*, char const*)
       BPrivate::DefaultCatalog::DefaultCatalog(char const*, char const*, char const*)
       BPrivate::DefaultCatalog::DefaultCatalog(char const*, char const*, char const*)
       BPrivate::DefaultCatalog::DefaultCatalog(entry_ref const&, char const*, unsigned int)
       BPrivate::DefaultCatalog::DefaultCatalog(entry_ref const&, char const*, unsigned int)
       BPrivate::DefaultCatalog::DefaultCatalog(entry_ref*)
       BPrivate::DefaultCatalog::DefaultCatalog(entry_ref*)
       BPrivate::DefaultCatalog::Flatten(BDataIO*)
       BPrivate::DefaultCatalog::Instantiate(entry_ref const&, char const*, unsigned int)
       BPrivate::DefaultCatalog::kCatMimeType
       BPrivate::DefaultCatalog::kDefaultCatalogAddOnPriority
       BPrivate::DefaultCatalog::ReadFromFile(char const*)
       BPrivate::DefaultCatalog::ReadFromResource(entry_ref const&)
       BPrivate::DefaultCatalog::ReadFromStandardLocations()
       BPrivate::DefaultCatalog::SetRawString(BPrivate::CatKey const&, char const*)
       BPrivate::DefaultCatalog::SetSignature(entry_ref const&)
       BPrivate::DefaultCatalog::Unflatten(BDataIO*)
       BPrivate::DefaultCatalog::UpdateAttributes(BFile&)
       BPrivate::DefaultCatalog::WriteToFile(char const*)
       BPrivate::DefaultCatalog::WriteToResource(entry_ref const&)
       BPrivate::DefragmentJob::~DefragmentJob()
       BPrivate::DefragmentJob::~DefragmentJob()
       BPrivate::DefragmentJob::~DefragmentJob()
       BPrivate::DefragmentJob::DefragmentJob(BPrivate::PartitionReference*)
       BPrivate::DefragmentJob::DefragmentJob(BPrivate::PartitionReference*)
       BPrivate::DefragmentJob::Do()
       BPrivate::DeleteChildJob::~DeleteChildJob()
       BPrivate::DeleteChildJob::~DeleteChildJob()
       BPrivate::DeleteChildJob::~DeleteChildJob()
       BPrivate::DeleteChildJob::DeleteChildJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::DeleteChildJob::DeleteChildJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::DeleteChildJob::Do()
       BPrivate::DesktopLink::~DesktopLink()
       BPrivate::DesktopLink::~DesktopLink()
       BPrivate::DesktopLink::~DesktopLink()
       BPrivate::DesktopLink::DesktopLink()
       BPrivate::DesktopLink::DesktopLink()
       BPrivate::DesktopLink::InitCheck() const
       BPrivate::DiskDeviceJob::~DiskDeviceJob()
       BPrivate::DiskDeviceJob::~DiskDeviceJob()
       BPrivate::DiskDeviceJob::~DiskDeviceJob()
       BPrivate::DiskDeviceJob::DiskDeviceJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::DiskDeviceJob::DiskDeviceJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::DiskDeviceJobGenerator::_AddJob(BPrivate::DiskDeviceJob*)
       BPrivate::DiskDeviceJobGenerator::_CollectContentsToMove(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_CompareMoveInfoPosition(void const*, void const*)
       BPrivate::DiskDeviceJobGenerator::_GenerateChildPlacementJobs(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateCleanupJobs(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateCreateChildJob(BPartition*, BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateDefragmentJob(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateDeleteChildJob(BPartition*, BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateInitializeJob(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateMoveJob(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GeneratePlacementJobs(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateRemainingJobs(BPartition*, BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateRepairJob(BPartition*, bool)
       BPrivate::DiskDeviceJobGenerator::_GenerateResizeJob(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateSetContentNameJob(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateSetContentParametersJob(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateSetNameJob(BPartition*, BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateSetParametersJob(BPartition*, BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateSetTypeJob(BPartition*, BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GenerateUninitializeJob(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GetMutablePartition(BPartition*)
       BPrivate::DiskDeviceJobGenerator::_GetPartitionReference(BPartition*, BPrivate::PartitionReference*&)
       BPrivate::DiskDeviceJobGenerator::_PushContentsToMove(BPartition*)
       BPrivate::DiskDeviceJobGenerator::~DiskDeviceJobGenerator()
       BPrivate::DiskDeviceJobGenerator::~DiskDeviceJobGenerator()
       BPrivate::DiskDeviceJobGenerator::DiskDeviceJobGenerator(BDiskDevice*, BPrivate::DiskDeviceJobQueue*)
       BPrivate::DiskDeviceJobGenerator::DiskDeviceJobGenerator(BDiskDevice*, BPrivate::DiskDeviceJobQueue*)
       BPrivate::DiskDeviceJobGenerator::GenerateJobs()
       BPrivate::DiskDeviceJobQueue::~DiskDeviceJobQueue()
       BPrivate::DiskDeviceJobQueue::~DiskDeviceJobQueue()
       BPrivate::DiskDeviceJobQueue::AddJob(BPrivate::DiskDeviceJob*)
       BPrivate::DiskDeviceJobQueue::DiskDeviceJobQueue()
       BPrivate::DiskDeviceJobQueue::DiskDeviceJobQueue()
       BPrivate::DiskDeviceJobQueue::Execute()
       BPrivate::DiskSystemAddOnManager::_AddOnAt(int) const
       BPrivate::DiskSystemAddOnManager::_InitSingleton()
       BPrivate::DiskSystemAddOnManager::_LoadAddOns(BPrivate::DiskSystemAddOnManager::StringSet&, directory_which)
       BPrivate::DiskSystemAddOnManager::_PutAddOn(int)
       BPrivate::DiskSystemAddOnManager::AddOnAt(int) const
       BPrivate::DiskSystemAddOnManager::CountAddOns() const
       BPrivate::DiskSystemAddOnManager::Default()
       BPrivate::DiskSystemAddOnManager::DiskSystemAddOnManager()
       BPrivate::DiskSystemAddOnManager::DiskSystemAddOnManager()
       BPrivate::DiskSystemAddOnManager::GetAddOn(char const*)
       BPrivate::DiskSystemAddOnManager::LoadDiskSystems()
       BPrivate::DiskSystemAddOnManager::Lock()
       BPrivate::DiskSystemAddOnManager::PutAddOn(BDiskSystemAddOn*)
       BPrivate::DiskSystemAddOnManager::sManager
       BPrivate::DiskSystemAddOnManager::UnloadDiskSystems()
       BPrivate::DiskSystemAddOnManager::Unlock()
       BPrivate::EditableCatalog::~EditableCatalog()
       BPrivate::EditableCatalog::~EditableCatalog()
       BPrivate::EditableCatalog::~EditableCatalog()
       BPrivate::EditableCatalog::CanWriteData() const
       BPrivate::EditableCatalog::CatalogData()
       BPrivate::EditableCatalog::EditableCatalog(char const*, char const*, char const*)
       BPrivate::EditableCatalog::EditableCatalog(char const*, char const*, char const*)
       BPrivate::EditableCatalog::MakeEmpty()
       BPrivate::EditableCatalog::ReadFromAttribute(entry_ref const&)
       BPrivate::EditableCatalog::ReadFromFile(char const*)
       BPrivate::EditableCatalog::ReadFromResource(entry_ref const&)
       BPrivate::EditableCatalog::SetData(char const*, BMessage*)
       BPrivate::EditableCatalog::SetData(unsigned int, BMessage*)
       BPrivate::EditableCatalog::SetString(char const*, char const*, char const*, char const*)
       BPrivate::EditableCatalog::SetString(int, char const*)
       BPrivate::EditableCatalog::WriteToAttribute(entry_ref const&)
       BPrivate::EditableCatalog::WriteToFile(char const*)
       BPrivate::EditableCatalog::WriteToResource(entry_ref const&)
       BPrivate::entry_ref_flatten(char*, unsigned long*, entry_ref const*)
       BPrivate::entry_ref_swap(char*, unsigned long)
       BPrivate::entry_ref_unflatten(entry_ref*, char const*, unsigned long)
       BPrivate::find_instantiation_func(char const*, char const*, int*)
       BPrivate::gDefaultTokens
       BPrivate::get_app_path(char*)
       BPrivate::get_app_path(int, char*)
       BPrivate::get_app_ref(entry_ref*, bool)
       BPrivate::get_app_ref(int, entry_ref*, bool)
       BPrivate::get_application_order(int, int**, int*)
       BPrivate::get_bytes_per_row(color_space, int)
       BPrivate::get_control_look(BString&)
       BPrivate::get_decorator(BString&)
       BPrivate::get_mode_parameter(unsigned int, int&, int&, unsigned int&)
       BPrivate::get_window_order(int, int**, int*)
       BPrivate::get_workspaces_layout(unsigned int*, unsigned int*)
       BPrivate::GetSystemColor(color_which, bool)
       BPrivate::gLooperList
       BPrivate::gSystemCatalog
       BPrivate::gWidthBuffer
       BPrivate::HaikuControlLook::_BevelLightColor(rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::_BevelShadowColor(rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::_DrawButtonBackground(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, bool, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::_DrawButtonFrame(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, rgb_color const&, float, float, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::_DrawFlatButtonBackground(BView*, BRect&, BRect const&, rgb_color const&, bool, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::_DrawFrame(BView*, BRect&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::_DrawFrame(BView*, BRect&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::_DrawMenuFieldBackgroundInside(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::_DrawMenuFieldBackgroundOutside(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, bool, unsigned int)
       BPrivate::HaikuControlLook::_DrawNonFlatButtonBackground(BView*, BRect&, BRect const&, BRegion&, float, float, float, float, rgb_color const&, bool, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::_DrawOuterResessedFrame(BView*, BRect&, rgb_color const&, float, float, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::_DrawPopUpMarker(BView*, BRect const&, rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::_DrawRoundBarCorner(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, float, float, float, float, orientation)
       BPrivate::HaikuControlLook::_DrawRoundCornerBackgroundLeftBottom(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, BGradientLinear const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerBackgroundLeftTop(BView*, BRect&, BRect const&, rgb_color const&, BGradientLinear const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerBackgroundRightBottom(BView*, BRect&, BRect const&, rgb_color const&, BGradientLinear const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerBackgroundRightTop(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, BGradientLinear const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerFrameLeftBottom(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerFrameLeftTop(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerFrameRightBottom(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerFrameRightTop(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerLeftBottom(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, BGradientLinear const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerLeftTop(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, BGradientLinear const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerRightBottom(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, BGradientLinear const&)
       BPrivate::HaikuControlLook::_DrawRoundCornerRightTop(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, rgb_color const&, BGradientLinear const&)
       BPrivate::HaikuControlLook::_EdgeLightColor(rgb_color const&, float, float, unsigned int)
       BPrivate::HaikuControlLook::_EdgeShadowColor(rgb_color const&, float, float, unsigned int)
       BPrivate::HaikuControlLook::_FillGlossyGradient(BView*, BRect const&, rgb_color const&, float, float, float, float, orientation)
       BPrivate::HaikuControlLook::_FillGradient(BView*, BRect const&, rgb_color const&, float, float, orientation)
       BPrivate::HaikuControlLook::_FrameLightColor(rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::_FrameShadowColor(rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::_MakeButtonGradient(BGradientLinear&, BRect&, rgb_color const&, unsigned int, orientation) const
       BPrivate::HaikuControlLook::_MakeGlossyGradient(BGradientLinear&, BRect const&, rgb_color const&, float, float, float, float, orientation) const
       BPrivate::HaikuControlLook::_MakeGradient(BGradientLinear&, BRect const&, rgb_color const&, float, float, orientation) const
       BPrivate::HaikuControlLook::_RadioButtonAndCheckBoxMarkColor(rgb_color const&, rgb_color&, unsigned int) const
       BPrivate::HaikuControlLook::~HaikuControlLook()
       BPrivate::HaikuControlLook::~HaikuControlLook()
       BPrivate::HaikuControlLook::~HaikuControlLook()
       BPrivate::HaikuControlLook::DefaultItemSpacing() const
       BPrivate::HaikuControlLook::DefaultLabelAlignment() const
       BPrivate::HaikuControlLook::DefaultLabelSpacing() const
       BPrivate::HaikuControlLook::DrawActiveTab(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int, unsigned int, int, int, int, int)
       BPrivate::HaikuControlLook::DrawArrowShape(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int, float)
       BPrivate::HaikuControlLook::DrawBorder(BView*, BRect&, BRect const&, rgb_color const&, border_style, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawButtonBackground(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawButtonBackground(BView*, BRect&, BRect const&, float, rgb_color const&, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawButtonBackground(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawButtonFrame(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawButtonFrame(BView*, BRect&, BRect const&, float, rgb_color const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawButtonFrame(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawButtonWithPopUpBackground(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawButtonWithPopUpBackground(BView*, BRect&, BRect const&, float, rgb_color const&, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawButtonWithPopUpBackground(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawCheckBox(BView*, BRect&, BRect const&, rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::DrawGroupFrame(BView*, BRect&, BRect const&, rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::DrawInactiveTab(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int, unsigned int, int, int, int, int)
       BPrivate::HaikuControlLook::DrawLabel(BView*, char const*, BBitmap const*, BRect, BRect const&, rgb_color const&, unsigned int, BAlignment const&, rgb_color const*)
       BPrivate::HaikuControlLook::DrawLabel(BView*, char const*, BRect, BRect const&, rgb_color const&, unsigned int, BAlignment const&, rgb_color const*)
       BPrivate::HaikuControlLook::DrawLabel(BView*, char const*, BRect, BRect const&, rgb_color const&, unsigned int, rgb_color const*)
       BPrivate::HaikuControlLook::DrawLabel(BView*, char const*, rgb_color const&, unsigned int, BPoint const&, rgb_color const*)
       BPrivate::HaikuControlLook::DrawMenuBackground(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuBarBackground(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuFieldBackground(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, bool, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuFieldBackground(BView*, BRect&, BRect const&, float, rgb_color const&, bool, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuFieldBackground(BView*, BRect&, BRect const&, rgb_color const&, bool, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuFieldBackground(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuFieldFrame(BView*, BRect&, BRect const&, float, float, float, float, rgb_color const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuFieldFrame(BView*, BRect&, BRect const&, float, rgb_color const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuFieldFrame(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawMenuItemBackground(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawRadioButton(BView*, BRect&, BRect const&, rgb_color const&, unsigned int)
       BPrivate::HaikuControlLook::DrawRaisedBorder(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawScrollBarBackground(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawScrollBarBackground(BView*, BRect&, BRect&, BRect const&, rgb_color const&, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawScrollBarBorder(BView*, BRect, BRect const&, rgb_color const&, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawScrollBarButton(BView*, BRect, BRect const&, rgb_color const&, unsigned int, int, orientation, bool)
       BPrivate::HaikuControlLook::DrawScrollBarThumb(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, orientation, unsigned int)
       BPrivate::HaikuControlLook::DrawScrollViewFrame(BView*, BRect&, BRect const&, BRect, BRect, rgb_color const&, border_style, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawSliderBar(BView*, BRect, BRect const&, rgb_color const&, rgb_color, rgb_color, float, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawSliderBar(BView*, BRect, BRect const&, rgb_color const&, rgb_color, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawSliderHashMarks(BView*, BRect&, BRect const&, rgb_color const&, int, hash_mark_location, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawSliderThumb(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawSliderTriangle(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawSliderTriangle(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, orientation)
       BPrivate::HaikuControlLook::DrawSplitter(BView*, BRect&, BRect const&, rgb_color const&, orientation, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::DrawStatusBar(BView*, BRect&, BRect const&, rgb_color const&, rgb_color const&, float)
       BPrivate::HaikuControlLook::DrawTabFrame(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int, border_style, unsigned int)
       BPrivate::HaikuControlLook::DrawTextControlBorder(BView*, BRect&, BRect const&, rgb_color const&, unsigned int, unsigned int)
       BPrivate::HaikuControlLook::Flags(BControl*) const
       BPrivate::HaikuControlLook::GetBackgroundInsets(BPrivate::BControlLook::background_type, unsigned int, float&, float&, float&, float&)
       BPrivate::HaikuControlLook::GetFrameInsets(BPrivate::BControlLook::frame_type, unsigned int, float&, float&, float&, float&)
       BPrivate::HaikuControlLook::HaikuControlLook()
       BPrivate::HaikuControlLook::HaikuControlLook()
       BPrivate::HaikuControlLook::SliderBarColor(rgb_color const&)
       BPrivate::HashMapCatalog::ComputeFingerprint() const
       BPrivate::HashMapCatalog::CountItems() const
       BPrivate::HashMapCatalog::GetString(BPrivate::CatKey const&)
       BPrivate::HashMapCatalog::GetString(char const*, char const*, char const*)
       BPrivate::HashMapCatalog::GetString(unsigned int)
       BPrivate::HashMapCatalog::MakeEmpty()
       BPrivate::HashMapCatalog::SetString(BPrivate::CatKey const&, char const*)
       BPrivate::HashMapCatalog::SetString(char const*, char const*, char const*, char const*)
       BPrivate::HashMapCatalog::SetString(int, char const*)
       BPrivate::HashMapCatalog::UpdateFingerprint()
       BPrivate::Icon::AffineTransformer::~AffineTransformer()
       BPrivate::Icon::AffineTransformer::~AffineTransformer()
       BPrivate::Icon::AffineTransformer::~AffineTransformer()
       BPrivate::Icon::AffineTransformer::AffineTransformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::AffineTransformer::AffineTransformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::AffineTransformer::AffineTransformer(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::AffineTransformer::AffineTransformer(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::AffineTransformer::ApproximationScale() const
       BPrivate::Icon::AffineTransformer::Clone(BPrivate::Icon::VertexSource&) const
       BPrivate::Icon::AffineTransformer::rewind(unsigned int)
       BPrivate::Icon::AffineTransformer::SetSource(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::AffineTransformer::vertex(double*, double*)
       BPrivate::Icon::ContourTransformer::~ContourTransformer()
       BPrivate::Icon::ContourTransformer::~ContourTransformer()
       BPrivate::Icon::ContourTransformer::~ContourTransformer()
       BPrivate::Icon::ContourTransformer::ApproximationScale() const
       BPrivate::Icon::ContourTransformer::Clone(BPrivate::Icon::VertexSource&) const
       BPrivate::Icon::ContourTransformer::ContourTransformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::ContourTransformer::ContourTransformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::ContourTransformer::ContourTransformer(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::ContourTransformer::ContourTransformer(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::ContourTransformer::rewind(unsigned int)
       BPrivate::Icon::ContourTransformer::SetSource(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::ContourTransformer::vertex(double*, double*)
       BPrivate::Icon::FLAT_ICON_MAGIC
       BPrivate::Icon::FlatIconImporter::_ParsePaths(BPrivate::Icon::LittleEndianBuffer&, BPrivate::Icon::PathContainer*)
       BPrivate::Icon::FlatIconImporter::_ParseSections(BPrivate::Icon::LittleEndianBuffer&, BPrivate::Icon::Icon*)
       BPrivate::Icon::FlatIconImporter::_ParseShapes(BPrivate::Icon::LittleEndianBuffer&, BPrivate::Icon::StyleContainer*, BPrivate::Icon::PathContainer*, BPrivate::Icon::ShapeContainer*)
       BPrivate::Icon::FlatIconImporter::_ParseStyles(BPrivate::Icon::LittleEndianBuffer&, BPrivate::Icon::StyleContainer*)
       BPrivate::Icon::FlatIconImporter::_ReadPathSourceShape(BPrivate::Icon::LittleEndianBuffer&, BPrivate::Icon::StyleContainer*, BPrivate::Icon::PathContainer*)
       BPrivate::Icon::FlatIconImporter::~FlatIconImporter()
       BPrivate::Icon::FlatIconImporter::~FlatIconImporter()
       BPrivate::Icon::FlatIconImporter::~FlatIconImporter()
       BPrivate::Icon::FlatIconImporter::FlatIconImporter()
       BPrivate::Icon::FlatIconImporter::FlatIconImporter()
       BPrivate::Icon::FlatIconImporter::Import(BPrivate::Icon::Icon*, BPositionIO*)
       BPrivate::Icon::FlatIconImporter::Import(BPrivate::Icon::Icon*, unsigned char*, unsigned long)
       BPrivate::Icon::Gradient::_MakeEmpty()
       BPrivate::Icon::Gradient::~Gradient()
       BPrivate::Icon::Gradient::~Gradient()
       BPrivate::Icon::Gradient::~Gradient()
       BPrivate::Icon::Gradient::AddColor(BGradient::ColorStop const&, int)
       BPrivate::Icon::Gradient::AddColor(rgb_color const&, float)
       BPrivate::Icon::Gradient::ColorAt(int) const
       BPrivate::Icon::Gradient::ColorAtFast(int) const
       BPrivate::Icon::Gradient::ColorStepsAreEqual(BPrivate::Icon::Gradient const&) const
       BPrivate::Icon::Gradient::CountColors() const
       BPrivate::Icon::Gradient::FitToBounds(BRect const&)
       BPrivate::Icon::Gradient::Gradient(BMessage*)
       BPrivate::Icon::Gradient::Gradient(BMessage*)
       BPrivate::Icon::Gradient::Gradient(bool)
       BPrivate::Icon::Gradient::Gradient(bool)
       BPrivate::Icon::Gradient::Gradient(BPrivate::Icon::Gradient const&)
       BPrivate::Icon::Gradient::Gradient(BPrivate::Icon::Gradient const&)
       BPrivate::Icon::Gradient::GradientArea() const
       BPrivate::Icon::Gradient::MakeGradient(unsigned int*, int) const
       BPrivate::Icon::Gradient::operator!=(BPrivate::Icon::Gradient const&) const
       BPrivate::Icon::Gradient::operator=(BPrivate::Icon::Gradient const&)
       BPrivate::Icon::Gradient::operator==(BPrivate::Icon::Gradient const&) const
       BPrivate::Icon::Gradient::PrintToStream() const
       BPrivate::Icon::Gradient::RemoveColor(int)
       BPrivate::Icon::Gradient::SetColor(int, BGradient::ColorStop const&)
       BPrivate::Icon::Gradient::SetColor(int, rgb_color const&)
       BPrivate::Icon::Gradient::SetColors(BPrivate::Icon::Gradient const&)
       BPrivate::Icon::Gradient::SetInheritTransformation(bool)
       BPrivate::Icon::Gradient::SetInterpolation(interpolation_type)
       BPrivate::Icon::Gradient::SetOffset(int, float)
       BPrivate::Icon::Gradient::SetType(gradients_type)
       BPrivate::Icon::Gradient::TransformationChanged()
       BPrivate::Icon::Icon::~Icon()
       BPrivate::Icon::Icon::~Icon()
       BPrivate::Icon::Icon::~Icon()
       BPrivate::Icon::Icon::Clone() const
       BPrivate::Icon::Icon::Icon()
       BPrivate::Icon::Icon::Icon()
       BPrivate::Icon::Icon::Icon(BPrivate::Icon::Icon const&)
       BPrivate::Icon::Icon::Icon(BPrivate::Icon::Icon const&)
       BPrivate::Icon::Icon::InitCheck() const
       BPrivate::Icon::Icon::MakeEmpty()
       BPrivate::Icon::IconRenderer::_CommitRenderPass(BPrivate::Icon::IconRenderer::StyleHandler&, bool)
       BPrivate::Icon::IconRenderer::_Render(BRect const&)
       BPrivate::Icon::IconRenderer::~IconRenderer()
       BPrivate::Icon::IconRenderer::~IconRenderer()
       BPrivate::Icon::IconRenderer::~IconRenderer()
       BPrivate::Icon::IconRenderer::Demultiply()
       BPrivate::Icon::IconRenderer::IconRenderer(BBitmap*)
       BPrivate::Icon::IconRenderer::IconRenderer(BBitmap*)
       BPrivate::Icon::IconRenderer::Render()
       BPrivate::Icon::IconRenderer::Render(BRect const&)
       BPrivate::Icon::IconRenderer::SetBackground(agg::rgba8 const&)
       BPrivate::Icon::IconRenderer::SetBackground(BBitmap const*)
       BPrivate::Icon::IconRenderer::SetIcon(BPrivate::Icon::Icon const*)
       BPrivate::Icon::IconRenderer::SetScale(double)
       BPrivate::Icon::IconRenderer::StyleHandler::color(unsigned int)
       BPrivate::Icon::IconRenderer::StyleHandler::generate_span(agg::rgba8*, int, int, unsigned int, unsigned int)
       BPrivate::Icon::kNativeIconMagicNumber
       BPrivate::Icon::kNativeIconMimeType
       BPrivate::Icon::kVectorAttrMimeName
       BPrivate::Icon::kVectorAttrNodeName
       BPrivate::Icon::LittleEndianBuffer::_SetSize(unsigned long)
       BPrivate::Icon::LittleEndianBuffer::~LittleEndianBuffer()
       BPrivate::Icon::LittleEndianBuffer::~LittleEndianBuffer()
       BPrivate::Icon::LittleEndianBuffer::LittleEndianBuffer()
       BPrivate::Icon::LittleEndianBuffer::LittleEndianBuffer()
       BPrivate::Icon::LittleEndianBuffer::LittleEndianBuffer(unsigned char*, unsigned long)
       BPrivate::Icon::LittleEndianBuffer::LittleEndianBuffer(unsigned char*, unsigned long)
       BPrivate::Icon::LittleEndianBuffer::LittleEndianBuffer(unsigned long)
       BPrivate::Icon::LittleEndianBuffer::LittleEndianBuffer(unsigned long)
       BPrivate::Icon::LittleEndianBuffer::Read(BPrivate::Icon::LittleEndianBuffer&, unsigned long)
       BPrivate::Icon::LittleEndianBuffer::Read(double&)
       BPrivate::Icon::LittleEndianBuffer::Read(float&)
       BPrivate::Icon::LittleEndianBuffer::Read(unsigned char&)
       BPrivate::Icon::LittleEndianBuffer::Read(unsigned int&)
       BPrivate::Icon::LittleEndianBuffer::Read(unsigned short&)
       BPrivate::Icon::LittleEndianBuffer::Reset()
       BPrivate::Icon::LittleEndianBuffer::Skip(unsigned long)
       BPrivate::Icon::LittleEndianBuffer::Write(BPrivate::Icon::LittleEndianBuffer const&)
       BPrivate::Icon::LittleEndianBuffer::Write(double)
       BPrivate::Icon::LittleEndianBuffer::Write(float)
       BPrivate::Icon::LittleEndianBuffer::Write(unsigned char const*, unsigned long)
       BPrivate::Icon::LittleEndianBuffer::Write(unsigned char)
       BPrivate::Icon::LittleEndianBuffer::Write(unsigned int)
       BPrivate::Icon::LittleEndianBuffer::Write(unsigned short)
       BPrivate::Icon::MessageImporter::_ImportPaths(BMessage const*, BPrivate::Icon::PathContainer*) const
       BPrivate::Icon::MessageImporter::_ImportShapes(BMessage const*, BPrivate::Icon::PathContainer*, BPrivate::Icon::StyleContainer*, BPrivate::Icon::ShapeContainer*) const
       BPrivate::Icon::MessageImporter::_ImportStyles(BMessage const*, BPrivate::Icon::StyleContainer*) const
       BPrivate::Icon::MessageImporter::~MessageImporter()
       BPrivate::Icon::MessageImporter::~MessageImporter()
       BPrivate::Icon::MessageImporter::~MessageImporter()
       BPrivate::Icon::MessageImporter::Import(BPrivate::Icon::Icon*, BPositionIO*)
       BPrivate::Icon::MessageImporter::MessageImporter()
       BPrivate::Icon::MessageImporter::MessageImporter()
       BPrivate::Icon::PathCommandQueue::_AppendCommand(unsigned char)
       BPrivate::Icon::PathCommandQueue::_AppendCurve(BPoint const&, BPoint const&, BPoint const&)
       BPrivate::Icon::PathCommandQueue::_AppendHLine(float)
       BPrivate::Icon::PathCommandQueue::_AppendLine(BPoint const&)
       BPrivate::Icon::PathCommandQueue::_AppendVLine(float)
       BPrivate::Icon::PathCommandQueue::_ReadCommand(unsigned char&)
       BPrivate::Icon::PathCommandQueue::~PathCommandQueue()
       BPrivate::Icon::PathCommandQueue::~PathCommandQueue()
       BPrivate::Icon::PathCommandQueue::~PathCommandQueue()
       BPrivate::Icon::PathCommandQueue::PathCommandQueue()
       BPrivate::Icon::PathCommandQueue::PathCommandQueue()
       BPrivate::Icon::PathCommandQueue::Read(BPrivate::Icon::LittleEndianBuffer&, BPrivate::Icon::VectorPath*, unsigned char)
       BPrivate::Icon::PathCommandQueue::Write(BPrivate::Icon::LittleEndianBuffer&, BPrivate::Icon::VectorPath const*, unsigned char)
       BPrivate::Icon::PathContainer::_MakeEmpty()
       BPrivate::Icon::PathContainer::~PathContainer()
       BPrivate::Icon::PathContainer::~PathContainer()
       BPrivate::Icon::PathContainer::~PathContainer()
       BPrivate::Icon::PathContainer::AddPath(BPrivate::Icon::VectorPath*, int)
       BPrivate::Icon::PathContainer::AddPath(BPrivate::Icon::VectorPath*)
       BPrivate::Icon::PathContainer::CountPaths() const
       BPrivate::Icon::PathContainer::HasPath(BPrivate::Icon::VectorPath*) const
       BPrivate::Icon::PathContainer::IndexOf(BPrivate::Icon::VectorPath*) const
       BPrivate::Icon::PathContainer::MakeEmpty()
       BPrivate::Icon::PathContainer::PathAt(int) const
       BPrivate::Icon::PathContainer::PathAtFast(int) const
       BPrivate::Icon::PathContainer::PathContainer(bool)
       BPrivate::Icon::PathContainer::PathContainer(bool)
       BPrivate::Icon::PathContainer::RemovePath(BPrivate::Icon::VectorPath*)
       BPrivate::Icon::PathContainer::RemovePath(int)
       BPrivate::Icon::PathSource::~PathSource()
       BPrivate::Icon::PathSource::~PathSource()
       BPrivate::Icon::PathSource::~PathSource()
       BPrivate::Icon::PathSource::ApproximationScale() const
       BPrivate::Icon::PathSource::PathSource(BPrivate::Icon::PathContainer*)
       BPrivate::Icon::PathSource::PathSource(BPrivate::Icon::PathContainer*)
       BPrivate::Icon::PathSource::rewind(unsigned int)
       BPrivate::Icon::PathSource::SetGlobalScale(double)
       BPrivate::Icon::PathSource::Update(bool, double)
       BPrivate::Icon::PathSource::vertex(double*, double*)
       BPrivate::Icon::PathSource::WantsOpenPaths() const
       BPrivate::Icon::PerspectiveTransformer::~PerspectiveTransformer()
       BPrivate::Icon::PerspectiveTransformer::~PerspectiveTransformer()
       BPrivate::Icon::PerspectiveTransformer::~PerspectiveTransformer()
       BPrivate::Icon::PerspectiveTransformer::ApproximationScale() const
       BPrivate::Icon::PerspectiveTransformer::Clone(BPrivate::Icon::VertexSource&) const
       BPrivate::Icon::PerspectiveTransformer::PerspectiveTransformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::PerspectiveTransformer::PerspectiveTransformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::PerspectiveTransformer::PerspectiveTransformer(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::PerspectiveTransformer::PerspectiveTransformer(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::PerspectiveTransformer::rewind(unsigned int)
       BPrivate::Icon::PerspectiveTransformer::SetSource(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::PerspectiveTransformer::vertex(double*, double*)
       BPrivate::Icon::read_coord(BPrivate::Icon::LittleEndianBuffer&, float&)
       BPrivate::Icon::read_float_24(BPrivate::Icon::LittleEndianBuffer&, float&)
       BPrivate::Icon::Shape::~Shape()
       BPrivate::Icon::Shape::~Shape()
       BPrivate::Icon::Shape::~Shape()
       BPrivate::Icon::Shape::AddTransformer(BPrivate::Icon::Transformer*, int)
       BPrivate::Icon::Shape::AddTransformer(BPrivate::Icon::Transformer*)
       BPrivate::Icon::Shape::Bounds(bool) const
       BPrivate::Icon::Shape::CountTransformers() const
       BPrivate::Icon::Shape::HasTransformer(BPrivate::Icon::Transformer*) const
       BPrivate::Icon::Shape::IndexOf(BPrivate::Icon::Transformer*) const
       BPrivate::Icon::Shape::InitCheck() const
       BPrivate::Icon::Shape::RemoveTransformer(BPrivate::Icon::Transformer*)
       BPrivate::Icon::Shape::SetGlobalScale(double)
       BPrivate::Icon::Shape::SetHinting(bool)
       BPrivate::Icon::Shape::SetMaxVisibilityScale(float)
       BPrivate::Icon::Shape::SetMinVisibilityScale(float)
       BPrivate::Icon::Shape::SetStyle(BPrivate::Icon::Style*)
       BPrivate::Icon::Shape::Shape(BPrivate::Icon::Shape const&)
       BPrivate::Icon::Shape::Shape(BPrivate::Icon::Shape const&)
       BPrivate::Icon::Shape::Shape(BPrivate::Icon::Style*)
       BPrivate::Icon::Shape::Shape(BPrivate::Icon::Style*)
       BPrivate::Icon::Shape::TransformerAt(int) const
       BPrivate::Icon::Shape::TransformerAtFast(int) const
       BPrivate::Icon::Shape::Unarchive(BMessage const*)
       BPrivate::Icon::Shape::VertexSource()
       BPrivate::Icon::ShapeContainer::_MakeEmpty()
       BPrivate::Icon::ShapeContainer::~ShapeContainer()
       BPrivate::Icon::ShapeContainer::~ShapeContainer()
       BPrivate::Icon::ShapeContainer::~ShapeContainer()
       BPrivate::Icon::ShapeContainer::AddShape(BPrivate::Icon::Shape*, int)
       BPrivate::Icon::ShapeContainer::AddShape(BPrivate::Icon::Shape*)
       BPrivate::Icon::ShapeContainer::CountShapes() const
       BPrivate::Icon::ShapeContainer::HasShape(BPrivate::Icon::Shape*) const
       BPrivate::Icon::ShapeContainer::IndexOf(BPrivate::Icon::Shape*) const
       BPrivate::Icon::ShapeContainer::MakeEmpty()
       BPrivate::Icon::ShapeContainer::RemoveShape(BPrivate::Icon::Shape*)
       BPrivate::Icon::ShapeContainer::RemoveShape(int)
       BPrivate::Icon::ShapeContainer::ShapeAt(int) const
       BPrivate::Icon::ShapeContainer::ShapeAtFast(int) const
       BPrivate::Icon::ShapeContainer::ShapeContainer()
       BPrivate::Icon::ShapeContainer::ShapeContainer()
       BPrivate::Icon::StrokeTransformer::~StrokeTransformer()
       BPrivate::Icon::StrokeTransformer::~StrokeTransformer()
       BPrivate::Icon::StrokeTransformer::~StrokeTransformer()
       BPrivate::Icon::StrokeTransformer::ApproximationScale() const
       BPrivate::Icon::StrokeTransformer::Clone(BPrivate::Icon::VertexSource&) const
       BPrivate::Icon::StrokeTransformer::rewind(unsigned int)
       BPrivate::Icon::StrokeTransformer::SetSource(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::StrokeTransformer::StrokeTransformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::StrokeTransformer::StrokeTransformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::StrokeTransformer::StrokeTransformer(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::StrokeTransformer::StrokeTransformer(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::StrokeTransformer::vertex(double*, double*)
       BPrivate::Icon::StrokeTransformer::WantsOpenPaths() const
       BPrivate::Icon::Style::~Style()
       BPrivate::Icon::Style::~Style()
       BPrivate::Icon::Style::~Style()
       BPrivate::Icon::Style::GammaCorrectedColors(agg::gamma_lut<unsigned char, unsigned char, 8u, 8u> const&) const
       BPrivate::Icon::Style::HasTransparency() const
       BPrivate::Icon::Style::SetColor(rgb_color const&)
       BPrivate::Icon::Style::SetGradient(BPrivate::Icon::Gradient const*)
       BPrivate::Icon::Style::Style()
       BPrivate::Icon::Style::Style()
       BPrivate::Icon::Style::Style(BMessage*)
       BPrivate::Icon::Style::Style(BMessage*)
       BPrivate::Icon::Style::Style(BPrivate::Icon::Style const&)
       BPrivate::Icon::Style::Style(BPrivate::Icon::Style const&)
       BPrivate::Icon::Style::Style(rgb_color const&)
       BPrivate::Icon::Style::Style(rgb_color const&)
       BPrivate::Icon::StyleContainer::_MakeEmpty()
       BPrivate::Icon::StyleContainer::~StyleContainer()
       BPrivate::Icon::StyleContainer::~StyleContainer()
       BPrivate::Icon::StyleContainer::~StyleContainer()
       BPrivate::Icon::StyleContainer::AddStyle(BPrivate::Icon::Style*, int)
       BPrivate::Icon::StyleContainer::AddStyle(BPrivate::Icon::Style*)
       BPrivate::Icon::StyleContainer::CountStyles() const
       BPrivate::Icon::StyleContainer::HasStyle(BPrivate::Icon::Style*) const
       BPrivate::Icon::StyleContainer::IndexOf(BPrivate::Icon::Style*) const
       BPrivate::Icon::StyleContainer::MakeEmpty()
       BPrivate::Icon::StyleContainer::RemoveStyle(BPrivate::Icon::Style*)
       BPrivate::Icon::StyleContainer::RemoveStyle(int)
       BPrivate::Icon::StyleContainer::StyleAt(int) const
       BPrivate::Icon::StyleContainer::StyleAtFast(int) const
       BPrivate::Icon::StyleContainer::StyleContainer()
       BPrivate::Icon::StyleContainer::StyleContainer()
       BPrivate::Icon::Transformable::~Transformable()
       BPrivate::Icon::Transformable::~Transformable()
       BPrivate::Icon::Transformable::~Transformable()
       BPrivate::Icon::Transformable::InverseTransform(BPoint const&) const
       BPrivate::Icon::Transformable::InverseTransform(BPoint*) const
       BPrivate::Icon::Transformable::InverseTransform(double*, double*) const
       BPrivate::Icon::Transformable::Invert()
       BPrivate::Icon::Transformable::IsIdentity() const
       BPrivate::Icon::Transformable::IsNotDistorted() const
       BPrivate::Icon::Transformable::IsTranslationOnly() const
       BPrivate::Icon::Transformable::IsValid() const
       BPrivate::Icon::Transformable::LoadFrom(double const*)
       BPrivate::Icon::Transformable::Multiply(BPrivate::Icon::Transformable const&)
       BPrivate::Icon::Transformable::operator!=(BPrivate::Icon::Transformable const&) const
       BPrivate::Icon::Transformable::operator=(BPrivate::Icon::Transformable const&)
       BPrivate::Icon::Transformable::operator==(BPrivate::Icon::Transformable const&) const
       BPrivate::Icon::Transformable::PrintToStream() const
       BPrivate::Icon::Transformable::Reset()
       BPrivate::Icon::Transformable::RotateBy(BPoint, double)
       BPrivate::Icon::Transformable::ScaleBy(BPoint, double, double)
       BPrivate::Icon::Transformable::SetTransform(BPrivate::Icon::Transformable const&)
       BPrivate::Icon::Transformable::ShearBy(BPoint, double, double)
       BPrivate::Icon::Transformable::StoreTo(double*) const
       BPrivate::Icon::Transformable::Transform(BPoint const&) const
       BPrivate::Icon::Transformable::Transform(BPoint*) const
       BPrivate::Icon::Transformable::Transform(double*, double*) const
       BPrivate::Icon::Transformable::Transformable()
       BPrivate::Icon::Transformable::Transformable()
       BPrivate::Icon::Transformable::Transformable(BPrivate::Icon::Transformable const&)
       BPrivate::Icon::Transformable::Transformable(BPrivate::Icon::Transformable const&)
       BPrivate::Icon::Transformable::TransformationChanged()
       BPrivate::Icon::Transformable::TransformBounds(BRect) const
       BPrivate::Icon::Transformable::TranslateBy(BPoint)
       BPrivate::Icon::Transformer::~Transformer()
       BPrivate::Icon::Transformer::~Transformer()
       BPrivate::Icon::Transformer::~Transformer()
       BPrivate::Icon::Transformer::ApproximationScale() const
       BPrivate::Icon::Transformer::rewind(unsigned int)
       BPrivate::Icon::Transformer::SetSource(BPrivate::Icon::VertexSource&)
       BPrivate::Icon::Transformer::Transformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::Transformer::Transformer(BPrivate::Icon::VertexSource&, BMessage*)
       BPrivate::Icon::Transformer::Transformer(BPrivate::Icon::VertexSource&, char const*)
       BPrivate::Icon::Transformer::Transformer(BPrivate::Icon::VertexSource&, char const*)
       BPrivate::Icon::Transformer::vertex(double*, double*)
       BPrivate::Icon::Transformer::WantsOpenPaths() const
       BPrivate::Icon::TransformerFactory::TransformerFor(BMessage*, BPrivate::Icon::VertexSource&)
       BPrivate::Icon::TransformerFactory::TransformerFor(unsigned int, BPrivate::Icon::VertexSource&)
       BPrivate::Icon::VectorPath::_Bounds() const
       BPrivate::Icon::VectorPath::_SetPoint(int, BPoint const&, BPoint const&, BPoint const&, bool)
       BPrivate::Icon::VectorPath::_SetPoint(int, BPoint)
       BPrivate::Icon::VectorPath::_SetPointCount(int)
       BPrivate::Icon::VectorPath::~VectorPath()
       BPrivate::Icon::VectorPath::~VectorPath()
       BPrivate::Icon::VectorPath::~VectorPath()
       BPrivate::Icon::VectorPath::AddPoint(BPoint const&, BPoint const&, BPoint const&, bool)
       BPrivate::Icon::VectorPath::AddPoint(BPoint, int)
       BPrivate::Icon::VectorPath::AddPoint(BPoint)
       BPrivate::Icon::VectorPath::ApplyTransform(BPrivate::Icon::Transformable const&)
       BPrivate::Icon::VectorPath::Bounds() const
       BPrivate::Icon::VectorPath::CleanUp()
       BPrivate::Icon::VectorPath::ControlPointBounds() const
       BPrivate::Icon::VectorPath::CountPoints() const
       BPrivate::Icon::VectorPath::GetAGGPathStorage(agg::path_base<agg::vertex_block_storage<double, 8u, 256u> >&) const
       BPrivate::Icon::VectorPath::GetPointAt(int, BPoint&) const
       BPrivate::Icon::VectorPath::GetPointInAt(int, BPoint&) const
       BPrivate::Icon::VectorPath::GetPointOutAt(int, BPoint&) const
       BPrivate::Icon::VectorPath::GetPointsAt(int, BPoint&, BPoint&, BPoint&, bool*) const
       BPrivate::Icon::VectorPath::Iterate(BPrivate::Icon::VectorPath::Iterator*, float) const
       BPrivate::Icon::VectorPath::MakeEmpty()
       BPrivate::Icon::VectorPath::operator=(BPrivate::Icon::VectorPath const&)
       BPrivate::Icon::VectorPath::operator==(BPrivate::Icon::VectorPath const&) const
       BPrivate::Icon::VectorPath::PrintToStream() const
       BPrivate::Icon::VectorPath::RemovePoint(int)
       BPrivate::Icon::VectorPath::Reverse()
       BPrivate::Icon::VectorPath::SetClosed(bool)
       BPrivate::Icon::VectorPath::SetInOutConnected(int, bool)
       BPrivate::Icon::VectorPath::SetPoint(int, BPoint, BPoint, BPoint, bool)
       BPrivate::Icon::VectorPath::SetPoint(int, BPoint)
       BPrivate::Icon::VectorPath::SetPointIn(int, BPoint)
       BPrivate::Icon::VectorPath::SetPointOut(int, BPoint, bool)
       BPrivate::Icon::VectorPath::VectorPath()
       BPrivate::Icon::VectorPath::VectorPath()
       BPrivate::Icon::VectorPath::VectorPath(BMessage*)
       BPrivate::Icon::VectorPath::VectorPath(BMessage*)
       BPrivate::Icon::VectorPath::VectorPath(BPrivate::Icon::VectorPath const&)
       BPrivate::Icon::VectorPath::VectorPath(BPrivate::Icon::VectorPath const&)
       BPrivate::Icon::VertexSource::~VertexSource()
       BPrivate::Icon::VertexSource::~VertexSource()
       BPrivate::Icon::VertexSource::~VertexSource()
       BPrivate::Icon::VertexSource::VertexSource()
       BPrivate::Icon::VertexSource::VertexSource()
       BPrivate::Icon::write_coord(BPrivate::Icon::LittleEndianBuffer&, float)
       BPrivate::Icon::write_float_24(BPrivate::Icon::LittleEndianBuffer&, float)
       BPrivate::IDFinderVisitor::IDFinderVisitor(int)
       BPrivate::IDFinderVisitor::IDFinderVisitor(int)
       BPrivate::IDFinderVisitor::Visit(BDiskDevice*)
       BPrivate::IDFinderVisitor::Visit(BPartition*, int)
       BPrivate::init_team_after_fork()
       BPrivate::InitializeJob::~InitializeJob()
       BPrivate::InitializeJob::~InitializeJob()
       BPrivate::InitializeJob::~InitializeJob()
       BPrivate::InitializeJob::Do()
       BPrivate::InitializeJob::Init(char const*, char const*, char const*)
       BPrivate::InitializeJob::InitializeJob(BPrivate::PartitionReference*)
       BPrivate::InitializeJob::InitializeJob(BPrivate::PartitionReference*)
       BPrivate::is_app_showing_modal_window(int)
       BPrivate::kDefaultColors
       BPrivate::kEmptyMenuLabel
       BPrivate::kKeyStoreServerSignature
       BPrivate::kRAppLooperPortName
       BPrivate::Layout::CollapsingLayouter::_AddConstraints()
       BPrivate::Layout::CollapsingLayouter::_AddConstraints(int, BPrivate::Layout::CollapsingLayouter::Constraint const*)
       BPrivate::Layout::CollapsingLayouter::_CreateLayouter()
       BPrivate::Layout::CollapsingLayouter::_DoCollapse()
       BPrivate::Layout::CollapsingLayouter::_SetWeights()
       BPrivate::Layout::CollapsingLayouter::_ValidateLayouter()
       BPrivate::Layout::CollapsingLayouter::~CollapsingLayouter()
       BPrivate::Layout::CollapsingLayouter::~CollapsingLayouter()
       BPrivate::Layout::CollapsingLayouter::~CollapsingLayouter()
       BPrivate::Layout::CollapsingLayouter::AddConstraints(int, int, float, float, float)
       BPrivate::Layout::CollapsingLayouter::CloneLayouter()
       BPrivate::Layout::CollapsingLayouter::CollapsingLayouter(int, float)
       BPrivate::Layout::CollapsingLayouter::CollapsingLayouter(int, float)
       BPrivate::Layout::CollapsingLayouter::CreateLayoutInfo()
       BPrivate::Layout::CollapsingLayouter::Layout(BPrivate::Layout::LayoutInfo*, float)
       BPrivate::Layout::CollapsingLayouter::MaxSize()
       BPrivate::Layout::CollapsingLayouter::MinSize()
       BPrivate::Layout::CollapsingLayouter::PreferredSize()
       BPrivate::Layout::CollapsingLayouter::SetWeight(int, float)
       BPrivate::Layout::ComplexLayouter::_AddOptimizerConstraints()
       BPrivate::Layout::ComplexLayouter::_ApplyMaxConstraint(BPrivate::Layout::ComplexLayouter::Constraint*, int)
       BPrivate::Layout::ComplexLayouter::_BackupValues(int)
       BPrivate::Layout::ComplexLayouter::_Layout(int, BPrivate::Layout::ComplexLayouter::SumItem*, int*)
       BPrivate::Layout::ComplexLayouter::_PropagateChanges(BPrivate::Layout::ComplexLayouter::SumItem*, int, BPrivate::Layout::ComplexLayouter::Constraint*)
       BPrivate::Layout::ComplexLayouter::_PropagateChangesBack(BPrivate::Layout::ComplexLayouter::SumItem*, int, BPrivate::Layout::ComplexLayouter::Constraint*)
       BPrivate::Layout::ComplexLayouter::_RestoreValues(int)
       BPrivate::Layout::ComplexLayouter::_SatisfiesConstraints(int*) const
       BPrivate::Layout::ComplexLayouter::_SatisfiesConstraintsSums(int*) const
       BPrivate::Layout::ComplexLayouter::_ValidateLayout()
       BPrivate::Layout::ComplexLayouter::~ComplexLayouter()
       BPrivate::Layout::ComplexLayouter::~ComplexLayouter()
       BPrivate::Layout::ComplexLayouter::~ComplexLayouter()
       BPrivate::Layout::ComplexLayouter::AddConstraints(int, int, float, float, float)
       BPrivate::Layout::ComplexLayouter::CloneLayouter()
       BPrivate::Layout::ComplexLayouter::ComplexLayouter(int, float)
       BPrivate::Layout::ComplexLayouter::ComplexLayouter(int, float)
       BPrivate::Layout::ComplexLayouter::CreateLayoutInfo()
       BPrivate::Layout::ComplexLayouter::InitCheck() const
       BPrivate::Layout::ComplexLayouter::Layout(BPrivate::Layout::LayoutInfo*, float)
       BPrivate::Layout::ComplexLayouter::MaxSize()
       BPrivate::Layout::ComplexLayouter::MinSize()
       BPrivate::Layout::ComplexLayouter::PreferredSize()
       BPrivate::Layout::ComplexLayouter::SetWeight(int, float)
       BPrivate::Layout::Layouter::~Layouter()
       BPrivate::Layout::Layouter::~Layouter()
       BPrivate::Layout::Layouter::~Layouter()
       BPrivate::Layout::Layouter::Layouter()
       BPrivate::Layout::Layouter::Layouter()
       BPrivate::Layout::LayoutInfo::~LayoutInfo()
       BPrivate::Layout::LayoutInfo::~LayoutInfo()
       BPrivate::Layout::LayoutInfo::~LayoutInfo()
       BPrivate::Layout::LayoutInfo::ElementRangeSize(int, int)
       BPrivate::Layout::LayoutInfo::LayoutInfo()
       BPrivate::Layout::LayoutInfo::LayoutInfo()
       BPrivate::Layout::LayoutOptimizer::_SetResult(double const*, double*)
       BPrivate::Layout::LayoutOptimizer::_Solve(double const*, double*)
       BPrivate::Layout::LayoutOptimizer::_SolveSubProblem(double const*, int, double*)
       BPrivate::Layout::LayoutOptimizer::~LayoutOptimizer()
       BPrivate::Layout::LayoutOptimizer::~LayoutOptimizer()
       BPrivate::Layout::LayoutOptimizer::AddConstraint(int, int, double, bool)
       BPrivate::Layout::LayoutOptimizer::AddConstraintsFrom(BPrivate::Layout::LayoutOptimizer const*)
       BPrivate::Layout::LayoutOptimizer::Clone() const
       BPrivate::Layout::LayoutOptimizer::InitCheck() const
       BPrivate::Layout::LayoutOptimizer::LayoutOptimizer(int)
       BPrivate::Layout::LayoutOptimizer::LayoutOptimizer(int)
       BPrivate::Layout::LayoutOptimizer::RemoveAllConstraints()
       BPrivate::Layout::LayoutOptimizer::Solve(double const*, double, double*)
       BPrivate::Layout::OneElementLayouter::~OneElementLayouter()
       BPrivate::Layout::OneElementLayouter::~OneElementLayouter()
       BPrivate::Layout::OneElementLayouter::~OneElementLayouter()
       BPrivate::Layout::OneElementLayouter::AddConstraints(int, int, float, float, float)
       BPrivate::Layout::OneElementLayouter::CloneLayouter()
       BPrivate::Layout::OneElementLayouter::CreateLayoutInfo()
       BPrivate::Layout::OneElementLayouter::Layout(BPrivate::Layout::LayoutInfo*, float)
       BPrivate::Layout::OneElementLayouter::MaxSize()
       BPrivate::Layout::OneElementLayouter::MinSize()
       BPrivate::Layout::OneElementLayouter::OneElementLayouter()
       BPrivate::Layout::OneElementLayouter::OneElementLayouter()
       BPrivate::Layout::OneElementLayouter::PreferredSize()
       BPrivate::Layout::OneElementLayouter::SetWeight(int, float)
       BPrivate::Layout::SimpleLayouter::_CalculateSumWeight(BList&)
       BPrivate::Layout::SimpleLayouter::_LayoutMax()
       BPrivate::Layout::SimpleLayouter::_LayoutStandard()
       BPrivate::Layout::SimpleLayouter::_ValidateMinMax()
       BPrivate::Layout::SimpleLayouter::~SimpleLayouter()
       BPrivate::Layout::SimpleLayouter::~SimpleLayouter()
       BPrivate::Layout::SimpleLayouter::~SimpleLayouter()
       BPrivate::Layout::SimpleLayouter::AddConstraints(int, int, float, float, float)
       BPrivate::Layout::SimpleLayouter::CloneLayouter()
       BPrivate::Layout::SimpleLayouter::CreateLayoutInfo()
       BPrivate::Layout::SimpleLayouter::DistributeSize(int, float*, int*, int)
       BPrivate::Layout::SimpleLayouter::Layout(BPrivate::Layout::LayoutInfo*, float)
       BPrivate::Layout::SimpleLayouter::MaxSize()
       BPrivate::Layout::SimpleLayouter::MinSize()
       BPrivate::Layout::SimpleLayouter::PreferredSize()
       BPrivate::Layout::SimpleLayouter::SetWeight(int, float)
       BPrivate::Layout::SimpleLayouter::SimpleLayouter(int, float)
       BPrivate::Layout::SimpleLayouter::SimpleLayouter(int, float)
       BPrivate::LinkReceiver::~LinkReceiver()
       BPrivate::LinkReceiver::~LinkReceiver()
       BPrivate::LinkReceiver::~LinkReceiver()
       BPrivate::LinkReceiver::AdjustReplyBuffer(long)
       BPrivate::LinkReceiver::Code() const
       BPrivate::LinkReceiver::GetNextMessage(int&, long)
       BPrivate::LinkReceiver::HasMessages() const
       BPrivate::LinkReceiver::LinkReceiver(int)
       BPrivate::LinkReceiver::LinkReceiver(int)
       BPrivate::LinkReceiver::NeedsReply() const
       BPrivate::LinkReceiver::Read(void*, long)
       BPrivate::LinkReceiver::ReadFromPort(long)
       BPrivate::LinkReceiver::ReadGradient(BGradient**)
       BPrivate::LinkReceiver::ReadRegion(BRegion*)
       BPrivate::LinkReceiver::ReadString(BString&, unsigned long*)
       BPrivate::LinkReceiver::ReadString(char*, unsigned long)
       BPrivate::LinkReceiver::ReadString(char**, unsigned long*)
       BPrivate::LinkReceiver::ResetBuffer()
       BPrivate::LinkReceiver::SetPort(int)
       BPrivate::LinkSender::~LinkSender()
       BPrivate::LinkSender::~LinkSender()
       BPrivate::LinkSender::~LinkSender()
       BPrivate::LinkSender::AdjustBuffer(unsigned long, char**)
       BPrivate::LinkSender::Attach(void const*, unsigned long)
       BPrivate::LinkSender::AttachString(char const*, int)
       BPrivate::LinkSender::CancelMessage()
       BPrivate::LinkSender::EndMessage(bool)
       BPrivate::LinkSender::Flush(long, bool)
       BPrivate::LinkSender::FlushCompleted(unsigned long)
       BPrivate::LinkSender::LinkSender(int)
       BPrivate::LinkSender::LinkSender(int)
       BPrivate::LinkSender::SetPort(int)
       BPrivate::LinkSender::StartMessage(int, unsigned long)
       BPrivate::LocaleRosterData::_AddDefaultFormattingConventionsToMessage(BMessage*) const
       BPrivate::LocaleRosterData::_AddDefaultTimeZoneToMessage(BMessage*) const
       BPrivate::LocaleRosterData::_AddFilesystemTranslationPreferenceToMessage(BMessage*) const
       BPrivate::LocaleRosterData::_AddPreferredLanguagesToMessage(BMessage*) const
       BPrivate::LocaleRosterData::_CleanupCatalogAddOns()
       BPrivate::LocaleRosterData::_Initialize()
       BPrivate::LocaleRosterData::_InitializeCatalogAddOns()
       BPrivate::LocaleRosterData::_LoadLocaleSettings()
       BPrivate::LocaleRosterData::_LoadTimeSettings()
       BPrivate::LocaleRosterData::_SaveLocaleSettings()
       BPrivate::LocaleRosterData::_SaveTimeSettings()
       BPrivate::LocaleRosterData::_SetDefaultFormattingConventions(BFormattingConventions const&)
       BPrivate::LocaleRosterData::_SetDefaultTimeZone(BTimeZone const&)
       BPrivate::LocaleRosterData::_SetFilesystemTranslationPreferred(bool)
       BPrivate::LocaleRosterData::_SetPreferredLanguages(BMessage const*)
       BPrivate::LocaleRosterData::~LocaleRosterData()
       BPrivate::LocaleRosterData::~LocaleRosterData()
       BPrivate::LocaleRosterData::CompareInfos(void const*, void const*)
       BPrivate::LocaleRosterData::GetResources(BResources**)
       BPrivate::LocaleRosterData::InitCheck() const
       BPrivate::LocaleRosterData::LocaleRosterData(BLanguage const&, BFormattingConventions const&)
       BPrivate::LocaleRosterData::LocaleRosterData(BLanguage const&, BFormattingConventions const&)
       BPrivate::LocaleRosterData::Refresh()
       BPrivate::LocaleRosterData::SetDefaultFormattingConventions(BFormattingConventions const&)
       BPrivate::LocaleRosterData::SetDefaultTimeZone(BTimeZone const&)
       BPrivate::LocaleRosterData::SetFilesystemTranslationPreferred(bool)
       BPrivate::LocaleRosterData::SetPreferredLanguages(BMessage const*)
       BPrivate::LowerScroller::Draw(BRect)
       BPrivate::LowerScroller::LowerScroller(BRect)
       BPrivate::LowerScroller::LowerScroller(BRect)
       BPrivate::main_thread_for(int)
       BPrivate::MenuItemPrivate::Install(BWindow*)
       BPrivate::MenuItemPrivate::MenuItemPrivate(BMenuItem*)
       BPrivate::MenuItemPrivate::MenuItemPrivate(BMenuItem*)
       BPrivate::MenuItemPrivate::SetSubmenu(BMenu*)
       BPrivate::MenuItemPrivate::Uninstall()
       BPrivate::MenuPrivate::Ascent() const
       BPrivate::MenuPrivate::CacheFontInfo()
       BPrivate::MenuPrivate::CreateBitmaps()
       BPrivate::MenuPrivate::DeleteBitmaps()
       BPrivate::MenuPrivate::FontHeight() const
       BPrivate::MenuPrivate::GetItemMargins(float*, float*, float*, float*) const
       BPrivate::MenuPrivate::Install(BWindow*)
       BPrivate::MenuPrivate::InvokeItem(BMenuItem*, bool)
       BPrivate::MenuPrivate::ItemMarked(BMenuItem*)
       BPrivate::MenuPrivate::Layout() const
       BPrivate::MenuPrivate::MenuItemCommand()
       BPrivate::MenuPrivate::MenuItemControl()
       BPrivate::MenuPrivate::MenuItemMenu()
       BPrivate::MenuPrivate::MenuItemOption()
       BPrivate::MenuPrivate::MenuItemShift()
       BPrivate::MenuPrivate::MenuPrivate(BMenu*)
       BPrivate::MenuPrivate::MenuPrivate(BMenu*)
       BPrivate::MenuPrivate::Padding() const
       BPrivate::MenuPrivate::QuitTracking(bool)
       BPrivate::MenuPrivate::SetItemMargins(float, float, float, float)
       BPrivate::MenuPrivate::SetLayout(menu_layout)
       BPrivate::MenuPrivate::SetSuper(BMenu*)
       BPrivate::MenuPrivate::SetSuperItem(BMenuItem*)
       BPrivate::MenuPrivate::sMenuItemAlt
       BPrivate::MenuPrivate::sMenuItemControl
       BPrivate::MenuPrivate::sMenuItemMenu
       BPrivate::MenuPrivate::sMenuItemOption
       BPrivate::MenuPrivate::sMenuItemShift
       BPrivate::MenuPrivate::State(BMenuItem**) const
       BPrivate::MenuPrivate::Uninstall()
       BPrivate::MessageAdapter::_ConvertFromKMessage(BPrivate::KMessage const*, BMessage*)
       BPrivate::MessageAdapter::_FlattenR5Message(unsigned int, BMessage const*, char*, long*)
       BPrivate::MessageAdapter::_R5FlattenedSize(BMessage const*)
       BPrivate::MessageAdapter::_UnflattenDanoMessage(unsigned int, BMessage*, BDataIO*)
       BPrivate::MessageAdapter::_UnflattenR5Message(unsigned int, BMessage*, BDataIO*)
       BPrivate::MessageAdapter::ConvertToKMessage(BMessage const*, BPrivate::KMessage&)
       BPrivate::MessageAdapter::Flatten(unsigned int, BMessage const*, BDataIO*, long*)
       BPrivate::MessageAdapter::Flatten(unsigned int, BMessage const*, char*, long*)
       BPrivate::MessageAdapter::FlattenedSize(unsigned int, BMessage const*)
       BPrivate::MessageAdapter::Unflatten(unsigned int, BMessage*, BDataIO*)
       BPrivate::MessageAdapter::Unflatten(unsigned int, BMessage*, char const*)
       BPrivate::MoveJob::~MoveJob()
       BPrivate::MoveJob::~MoveJob()
       BPrivate::MoveJob::~MoveJob()
       BPrivate::MoveJob::Do()
       BPrivate::MoveJob::Init(long, BPrivate::PartitionReference**, int)
       BPrivate::MoveJob::MoveJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::MoveJob::MoveJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::MutableLocaleRoster::~MutableLocaleRoster()
       BPrivate::MutableLocaleRoster::~MutableLocaleRoster()
       BPrivate::MutableLocaleRoster::CreateCatalog(char const*, char const*, char const*)
       BPrivate::MutableLocaleRoster::Default()
       BPrivate::MutableLocaleRoster::LoadCatalog(char const*, char const*) const
       BPrivate::MutableLocaleRoster::LoadCatalog(entry_ref const&, char const*, int) const
       BPrivate::MutableLocaleRoster::LoadSystemCatalog(BCatalog*) const
       BPrivate::MutableLocaleRoster::MutableLocaleRoster()
       BPrivate::MutableLocaleRoster::MutableLocaleRoster()
       BPrivate::MutableLocaleRoster::SetDefaultFormattingConventions(BFormattingConventions const&)
       BPrivate::MutableLocaleRoster::SetDefaultTimeZone(BTimeZone const&)
       BPrivate::MutableLocaleRoster::SetFilesystemTranslationPreferred(bool)
       BPrivate::MutableLocaleRoster::SetPreferredLanguages(BMessage const*)
       BPrivate::MutableLocaleRoster::UnloadCatalog(BCatalogData*)
       BPrivate::node_ref_flatten(char*, unsigned long*, node_ref const*)
       BPrivate::node_ref_swap(char*, unsigned long)
       BPrivate::node_ref_unflatten(node_ref*, char const*, unsigned long)
       BPrivate::ObserverList::_SendNotices(unsigned int, BMessage*)
       BPrivate::ObserverList::_ValidateHandlers(unsigned int)
       BPrivate::ObserverList::~ObserverList()
       BPrivate::ObserverList::~ObserverList()
       BPrivate::ObserverList::Add(BHandler const*, unsigned int)
       BPrivate::ObserverList::Add(BMessenger const&, unsigned int)
       BPrivate::ObserverList::IsEmpty()
       BPrivate::ObserverList::ObserverList()
       BPrivate::ObserverList::ObserverList()
       BPrivate::ObserverList::Remove(BHandler const*, unsigned int)
       BPrivate::ObserverList::Remove(BMessenger const&, unsigned int)
       BPrivate::ObserverList::SendNotices(unsigned int, BMessage const*)
       BPrivate::PaletteConverter::_InitializeDefaultAppServer()
       BPrivate::PaletteConverter::_InitializeDefaultNoAppServer()
       BPrivate::PaletteConverter::~PaletteConverter()
       BPrivate::PaletteConverter::~PaletteConverter()
       BPrivate::PaletteConverter::InitCheck() const
       BPrivate::PaletteConverter::InitializeDefault(bool)
       BPrivate::PaletteConverter::PaletteConverter()
       BPrivate::PaletteConverter::PaletteConverter()
       BPrivate::PaletteConverter::PaletteConverter(color_map const*)
       BPrivate::PaletteConverter::PaletteConverter(color_map const*)
       BPrivate::PaletteConverter::PaletteConverter(rgb_color const*)
       BPrivate::PaletteConverter::PaletteConverter(rgb_color const*)
       BPrivate::PaletteConverter::SetTo(color_map const*)
       BPrivate::PaletteConverter::SetTo(rgb_color const*)
       BPrivate::PartitionFilter::~PartitionFilter()
       BPrivate::PartitionFilter::~PartitionFilter()
       BPrivate::PartitionFilter::~PartitionFilter()
       BPrivate::PartitionFilterVisitor::PartitionFilterVisitor(BDiskDeviceVisitor*, BPrivate::PartitionFilter*)
       BPrivate::PartitionFilterVisitor::PartitionFilterVisitor(BDiskDeviceVisitor*, BPrivate::PartitionFilter*)
       BPrivate::PartitionFilterVisitor::Visit(BDiskDevice*)
       BPrivate::PartitionFilterVisitor::Visit(BPartition*, int)
       BPrivate::PartitionReference::~PartitionReference()
       BPrivate::PartitionReference::~PartitionReference()
       BPrivate::PartitionReference::~PartitionReference()
       BPrivate::PartitionReference::ChangeCounter() const
       BPrivate::PartitionReference::PartitionID() const
       BPrivate::PartitionReference::PartitionReference(int, int)
       BPrivate::PartitionReference::PartitionReference(int, int)
       BPrivate::PartitionReference::SetChangeCounter(int)
       BPrivate::PartitionReference::SetPartitionID(int)
       BPrivate::PartitionReference::SetTo(int, int)
       BPrivate::PicturePlayer::_Play(BPrivate::picture_player_callbacks const&, void*, void const*, unsigned long, unsigned short)
       BPrivate::PicturePlayer::~PicturePlayer()
       BPrivate::PicturePlayer::~PicturePlayer()
       BPrivate::PicturePlayer::~PicturePlayer()
       BPrivate::PicturePlayer::PicturePlayer(void const*, unsigned long, BList*)
       BPrivate::PicturePlayer::PicturePlayer(void const*, unsigned long, BList*)
       BPrivate::PicturePlayer::Play(BPrivate::picture_player_callbacks const&, unsigned long, void*)
       BPrivate::PicturePlayer::Play(void**, int, void*)
       BPrivate::PortLink::~PortLink()
       BPrivate::PortLink::~PortLink()
       BPrivate::PortLink::~PortLink()
       BPrivate::PortLink::PortLink(int, int)
       BPrivate::PortLink::PortLink(int, int)
       BPrivate::preview_decorator(BString const&, BWindow*)
       BPrivate::PrintServerMessenger::~PrintServerMessenger()
       BPrivate::PrintServerMessenger::~PrintServerMessenger()
       BPrivate::PrintServerMessenger::AllowUserInput()
       BPrivate::PrintServerMessenger::DeleteSemaphore()
       BPrivate::PrintServerMessenger::GetPrintServerMessenger(BMessenger&)
       BPrivate::PrintServerMessenger::MessengerThread(void*)
       BPrivate::PrintServerMessenger::PrintServerMessenger(unsigned int, BMessage*)
       BPrivate::PrintServerMessenger::PrintServerMessenger(unsigned int, BMessage*)
       BPrivate::PrintServerMessenger::RejectUserInput()
       BPrivate::PrintServerMessenger::Request()
       BPrivate::PrintServerMessenger::SendRequest()
       BPrivate::PrintServerMessenger::SetResult(BMessage*)
       BPrivate::ReadCMAP8(unsigned char const**, int)
       BPrivate::ReadGray1(unsigned char const**, int)
       BPrivate::ReadGray8(unsigned char const**, int)
       BPrivate::ReadRGB24(unsigned char const**, int)
       BPrivate::ReadRGB48(unsigned short const**, int)
       BPrivate::RepairJob::~RepairJob()
       BPrivate::RepairJob::~RepairJob()
       BPrivate::RepairJob::~RepairJob()
       BPrivate::RepairJob::Do()
       BPrivate::RepairJob::RepairJob(BPrivate::PartitionReference*, bool)
       BPrivate::RepairJob::RepairJob(BPrivate::PartitionReference*, bool)
       BPrivate::replicant_data::~replicant_data()
       BPrivate::replicant_data::~replicant_data()
       BPrivate::replicant_data::Archive(BMessage*)
       BPrivate::replicant_data::Find(BList const*, BMessage const*)
       BPrivate::replicant_data::Find(BList const*, BView const*, bool)
       BPrivate::replicant_data::Find(BList const*, unsigned long)
       BPrivate::replicant_data::IndexOf(BList const*, BMessage const*)
       BPrivate::replicant_data::IndexOf(BList const*, BView const*, bool)
       BPrivate::replicant_data::IndexOf(BList const*, unsigned long)
       BPrivate::replicant_data::replicant_data()
       BPrivate::replicant_data::replicant_data()
       BPrivate::replicant_data::replicant_data(BMessage*, BView*, BDragger*, BDragger::relation, unsigned long)
       BPrivate::replicant_data::replicant_data(BMessage*, BView*, BDragger*, BDragger::relation, unsigned long)
       BPrivate::ReplicantViewFilter::Filter(BMessage*, BHandler**)
       BPrivate::ReplicantViewFilter::ReplicantViewFilter(BShelf*, BView*)
       BPrivate::ReplicantViewFilter::ReplicantViewFilter(BShelf*, BView*)
       BPrivate::ResizeJob::~ResizeJob()
       BPrivate::ResizeJob::~ResizeJob()
       BPrivate::ResizeJob::~ResizeJob()
       BPrivate::ResizeJob::Do()
       BPrivate::ResizeJob::ResizeJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*, long, long)
       BPrivate::ResizeJob::ResizeJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*, long, long)
       BPrivate::ServerLink::~ServerLink()
       BPrivate::ServerLink::~ServerLink()
       BPrivate::ServerLink::~ServerLink()
       BPrivate::ServerLink::AttachGradient(BGradient const&)
       BPrivate::ServerLink::AttachRegion(BRegion const&)
       BPrivate::ServerLink::AttachShape(BShape&)
       BPrivate::ServerLink::FlushWithReply(int&)
       BPrivate::ServerLink::ReadGradient(BGradient**)
       BPrivate::ServerLink::ReadRegion(BRegion*)
       BPrivate::ServerLink::ReadShape(BShape*)
       BPrivate::ServerLink::ServerLink()
       BPrivate::ServerLink::ServerLink()
       BPrivate::ServerLink::SetTo(int, int)
       BPrivate::ServerMemoryAllocator::~ServerMemoryAllocator()
       BPrivate::ServerMemoryAllocator::~ServerMemoryAllocator()
       BPrivate::ServerMemoryAllocator::AddArea(int, int&, unsigned char*&, unsigned long, bool)
       BPrivate::ServerMemoryAllocator::AreaAndBaseFor(int, int&, unsigned char*&)
       BPrivate::ServerMemoryAllocator::InitCheck()
       BPrivate::ServerMemoryAllocator::RemoveArea(int)
       BPrivate::ServerMemoryAllocator::ServerMemoryAllocator()
       BPrivate::ServerMemoryAllocator::ServerMemoryAllocator()
       BPrivate::set_control_look(BString const&)
       BPrivate::set_decorator(BString const&)
       BPrivate::set_workspaces_layout(unsigned int, unsigned int)
       BPrivate::SetStringJob::~SetStringJob()
       BPrivate::SetStringJob::~SetStringJob()
       BPrivate::SetStringJob::~SetStringJob()
       BPrivate::SetStringJob::Do()
       BPrivate::SetStringJob::Init(char const*, unsigned int)
       BPrivate::SetStringJob::SetStringJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::SetStringJob::SetStringJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::ShelfContainerViewFilter::_ObjectDropFilter(BMessage*, BHandler**)
       BPrivate::ShelfContainerViewFilter::Filter(BMessage*, BHandler**)
       BPrivate::ShelfContainerViewFilter::ShelfContainerViewFilter(BShelf*, BView*)
       BPrivate::ShelfContainerViewFilter::ShelfContainerViewFilter(BShelf*, BView*)
       BPrivate::Storage::AttributeNode::AttributeNode(char const*)
       BPrivate::Storage::AttributeNode::AttributeNode(char const*)
       BPrivate::Storage::AttributeNode::GetString(BString&)
       BPrivate::Storage::BinaryNode::~BinaryNode()
       BPrivate::Storage::BinaryNode::~BinaryNode()
       BPrivate::Storage::BinaryNode::~BinaryNode()
       BPrivate::Storage::BinaryNode::Arity() const
       BPrivate::Storage::BinaryNode::BinaryNode()
       BPrivate::Storage::BinaryNode::BinaryNode()
       BPrivate::Storage::BinaryNode::ChildAt(int)
       BPrivate::Storage::BinaryNode::SetChildAt(BPrivate::Storage::QueryNode*, int)
       BPrivate::Storage::BinaryOpNode::BinaryOpNode(query_op)
       BPrivate::Storage::BinaryOpNode::BinaryOpNode(query_op)
       BPrivate::Storage::BinaryOpNode::GetString(BString&)
       BPrivate::Storage::check_entry_name(char const*)
       BPrivate::Storage::check_path_name(char const*)
       BPrivate::Storage::DateNode::DateNode(char const*)
       BPrivate::Storage::DateNode::DateNode(char const*)
       BPrivate::Storage::DateNode::GetString(BString&)
       BPrivate::Storage::device_is_root_device(int)
       BPrivate::Storage::escape_path(char const*, char*)
       BPrivate::Storage::escape_path(char*)
       BPrivate::Storage::FDCloser::Close()
       BPrivate::Storage::is_absolute_path(char const*)
       BPrivate::Storage::kFileTypeNames
       BPrivate::Storage::LeafNode::~LeafNode()
       BPrivate::Storage::LeafNode::~LeafNode()
       BPrivate::Storage::LeafNode::~LeafNode()
       BPrivate::Storage::LeafNode::Arity() const
       BPrivate::Storage::LeafNode::ChildAt(int)
       BPrivate::Storage::LeafNode::LeafNode()
       BPrivate::Storage::LeafNode::LeafNode()
       BPrivate::Storage::LeafNode::SetChildAt(BPrivate::Storage::QueryNode*, int)
       BPrivate::Storage::OffsetFile::~OffsetFile()
       BPrivate::Storage::OffsetFile::~OffsetFile()
       BPrivate::Storage::OffsetFile::~OffsetFile()
       BPrivate::Storage::OffsetFile::File() const
       BPrivate::Storage::OffsetFile::GetSize(long*) const
       BPrivate::Storage::OffsetFile::InitCheck() const
       BPrivate::Storage::OffsetFile::Offset() const
       BPrivate::Storage::OffsetFile::OffsetFile()
       BPrivate::Storage::OffsetFile::OffsetFile()
       BPrivate::Storage::OffsetFile::OffsetFile(BFile*, long)
       BPrivate::Storage::OffsetFile::OffsetFile(BFile*, long)
       BPrivate::Storage::OffsetFile::Position() const
       BPrivate::Storage::OffsetFile::ReadAt(long, void*, unsigned long)
       BPrivate::Storage::OffsetFile::Seek(long, unsigned int)
       BPrivate::Storage::OffsetFile::SetSize(long)
       BPrivate::Storage::OffsetFile::SetTo(BFile*, long)
       BPrivate::Storage::OffsetFile::Unset()
       BPrivate::Storage::OffsetFile::WriteAt(long, void const*, unsigned long)
       BPrivate::Storage::parse_first_path_component(char const*, char*&, int&)
       BPrivate::Storage::parse_first_path_component(char const*, int&, int&)
       BPrivate::Storage::parse_path(char const*, char*, char*)
       BPrivate::Storage::parse_path(char const*, int&, int&, int&)
       BPrivate::Storage::QueryNode::~QueryNode()
       BPrivate::Storage::QueryNode::~QueryNode()
       BPrivate::Storage::QueryNode::~QueryNode()
       BPrivate::Storage::QueryNode::QueryNode()
       BPrivate::Storage::QueryNode::QueryNode()
       BPrivate::Storage::QueryStack::_GetSubTree(BPrivate::Storage::QueryNode*&)
       BPrivate::Storage::QueryStack::~QueryStack()
       BPrivate::Storage::QueryStack::~QueryStack()
       BPrivate::Storage::QueryStack::~QueryStack()
       BPrivate::Storage::QueryStack::ConvertToTree(BPrivate::Storage::QueryNode*&)
       BPrivate::Storage::QueryStack::PopNode()
       BPrivate::Storage::QueryStack::PushNode(BPrivate::Storage::QueryNode*)
       BPrivate::Storage::QueryStack::QueryStack()
       BPrivate::Storage::QueryStack::QueryStack()
       BPrivate::Storage::ResourceFile::_InitELFFile(BFile&)
       BPrivate::Storage::ResourceFile::_InitFile(BFile&, bool)
       BPrivate::Storage::ResourceFile::_InitPEFFile(BFile&, PEFContainerHeader const&)
       BPrivate::Storage::ResourceFile::_MakeEmptyResourceFile()
       BPrivate::Storage::ResourceFile::_ReadHeader(BPrivate::Storage::resource_parse_info&)
       BPrivate::Storage::ResourceFile::_ReadIndex(BPrivate::Storage::resource_parse_info&)
       BPrivate::Storage::ResourceFile::_ReadIndexEntry(BPositionIO&, BPrivate::Storage::resource_parse_info&, int, unsigned int, bool)
       BPrivate::Storage::ResourceFile::_ReadInfoTable(BPrivate::Storage::resource_parse_info&)
       BPrivate::Storage::ResourceFile::_ReadInfoTableEnd(void const*, int)
       BPrivate::Storage::ResourceFile::_ReadResourceInfo(BPrivate::Storage::resource_parse_info&, BPrivate::Storage::MemArea const&, resource_info const*, unsigned int, bool*)
       BPrivate::Storage::ResourceFile::_WriteResources(BPrivate::Storage::ResourcesContainer&)
       BPrivate::Storage::ResourceFile::~ResourceFile()
       BPrivate::Storage::ResourceFile::~ResourceFile()
       BPrivate::Storage::ResourceFile::~ResourceFile()
       BPrivate::Storage::ResourceFile::InitCheck() const
       BPrivate::Storage::ResourceFile::InitContainer(BPrivate::Storage::ResourcesContainer&)
       BPrivate::Storage::ResourceFile::ReadResource(BPrivate::Storage::ResourceItem&, bool)
       BPrivate::Storage::ResourceFile::ReadResources(BPrivate::Storage::ResourcesContainer&, bool)
       BPrivate::Storage::ResourceFile::ResourceFile()
       BPrivate::Storage::ResourceFile::ResourceFile()
       BPrivate::Storage::ResourceFile::SetTo(BFile*, bool)
       BPrivate::Storage::ResourceFile::Unset()
       BPrivate::Storage::ResourceFile::WriteResources(BPrivate::Storage::ResourcesContainer&)
       BPrivate::Storage::ResourceItem::~ResourceItem()
       BPrivate::Storage::ResourceItem::~ResourceItem()
       BPrivate::Storage::ResourceItem::~ResourceItem()
       BPrivate::Storage::ResourceItem::Data() const
       BPrivate::Storage::ResourceItem::DataSize() const
       BPrivate::Storage::ResourceItem::ID() const
       BPrivate::Storage::ResourceItem::InitialSize() const
       BPrivate::Storage::ResourceItem::IsLoaded() const
       BPrivate::Storage::ResourceItem::IsModified() const
       BPrivate::Storage::ResourceItem::Name() const
       BPrivate::Storage::ResourceItem::Offset() const
       BPrivate::Storage::ResourceItem::ResourceItem()
       BPrivate::Storage::ResourceItem::ResourceItem()
       BPrivate::Storage::ResourceItem::SetID(int)
       BPrivate::Storage::ResourceItem::SetIdentity(unsigned int, int, char const*)
       BPrivate::Storage::ResourceItem::SetLoaded(bool)
       BPrivate::Storage::ResourceItem::SetLocation(int, unsigned long)
       BPrivate::Storage::ResourceItem::SetModified(bool)
       BPrivate::Storage::ResourceItem::SetName(char const*)
       BPrivate::Storage::ResourceItem::SetOffset(int)
       BPrivate::Storage::ResourceItem::SetSize(long)
       BPrivate::Storage::ResourceItem::SetType(unsigned int)
       BPrivate::Storage::ResourceItem::Type() const
       BPrivate::Storage::ResourceItem::WriteAt(long, void const*, unsigned long)
       BPrivate::Storage::ResourcesContainer::~ResourcesContainer()
       BPrivate::Storage::ResourcesContainer::~ResourcesContainer()
       BPrivate::Storage::ResourcesContainer::~ResourcesContainer()
       BPrivate::Storage::ResourcesContainer::AddResource(BPrivate::Storage::ResourceItem*, int, bool)
       BPrivate::Storage::ResourcesContainer::AssimilateResources(BPrivate::Storage::ResourcesContainer&)
       BPrivate::Storage::ResourcesContainer::CountResources() const
       BPrivate::Storage::ResourcesContainer::IndexOf(BPrivate::Storage::ResourceItem*) const
       BPrivate::Storage::ResourcesContainer::IndexOf(unsigned int, char const*) const
       BPrivate::Storage::ResourcesContainer::IndexOf(unsigned int, int) const
       BPrivate::Storage::ResourcesContainer::IndexOf(void const*) const
       BPrivate::Storage::ResourcesContainer::IndexOfType(unsigned int, int) const
       BPrivate::Storage::ResourcesContainer::IsModified() const
       BPrivate::Storage::ResourcesContainer::MakeEmpty()
       BPrivate::Storage::ResourcesContainer::RemoveResource(BPrivate::Storage::ResourceItem*)
       BPrivate::Storage::ResourcesContainer::RemoveResource(int)
       BPrivate::Storage::ResourcesContainer::ResourceAt(int) const
       BPrivate::Storage::ResourcesContainer::ResourcesContainer()
       BPrivate::Storage::ResourcesContainer::ResourcesContainer()
       BPrivate::Storage::ResourcesContainer::SetModified(bool)
       BPrivate::Storage::Sniffer::CharStream::~CharStream()
       BPrivate::Storage::Sniffer::CharStream::~CharStream()
       BPrivate::Storage::Sniffer::CharStream::~CharStream()
       BPrivate::Storage::Sniffer::CharStream::CharStream()
       BPrivate::Storage::Sniffer::CharStream::CharStream()
       BPrivate::Storage::Sniffer::CharStream::CharStream(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::CharStream::CharStream(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::CharStream::Get()
       BPrivate::Storage::Sniffer::CharStream::InitCheck() const
       BPrivate::Storage::Sniffer::CharStream::IsEmpty() const
       BPrivate::Storage::Sniffer::CharStream::Pos() const
       BPrivate::Storage::Sniffer::CharStream::SetTo(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::CharStream::String() const
       BPrivate::Storage::Sniffer::CharStream::Unget()
       BPrivate::Storage::Sniffer::CharStream::Unset()
       BPrivate::Storage::Sniffer::DisjList::~DisjList()
       BPrivate::Storage::Sniffer::DisjList::~DisjList()
       BPrivate::Storage::Sniffer::DisjList::~DisjList()
       BPrivate::Storage::Sniffer::DisjList::DisjList()
       BPrivate::Storage::Sniffer::DisjList::DisjList()
       BPrivate::Storage::Sniffer::DisjList::IsCaseInsensitive()
       BPrivate::Storage::Sniffer::DisjList::SetCaseInsensitive(bool)
       BPrivate::Storage::Sniffer::Err::~Err()
       BPrivate::Storage::Sniffer::Err::~Err()
       BPrivate::Storage::Sniffer::Err::~Err()
       BPrivate::Storage::Sniffer::Err::Err(BPrivate::Storage::Sniffer::Err const&)
       BPrivate::Storage::Sniffer::Err::Err(BPrivate::Storage::Sniffer::Err const&)
       BPrivate::Storage::Sniffer::Err::Err(char const*, long)
       BPrivate::Storage::Sniffer::Err::Err(char const*, long)
       BPrivate::Storage::Sniffer::Err::Err(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)
       BPrivate::Storage::Sniffer::Err::Err(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)
       BPrivate::Storage::Sniffer::Err::Msg() const
       BPrivate::Storage::Sniffer::Err::operator=(BPrivate::Storage::Sniffer::Err const&)
       BPrivate::Storage::Sniffer::Err::Pos() const
       BPrivate::Storage::Sniffer::Err::SetMsg(char const*)
       BPrivate::Storage::Sniffer::Err::SetPos(long)
       BPrivate::Storage::Sniffer::Err::SetTo(char const*, long)
       BPrivate::Storage::Sniffer::Err::SetTo(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)
       BPrivate::Storage::Sniffer::Err::Unset()
       BPrivate::Storage::Sniffer::FloatToken::~FloatToken()
       BPrivate::Storage::Sniffer::FloatToken::~FloatToken()
       BPrivate::Storage::Sniffer::FloatToken::~FloatToken()
       BPrivate::Storage::Sniffer::FloatToken::Float() const
       BPrivate::Storage::Sniffer::FloatToken::FloatToken(double, long)
       BPrivate::Storage::Sniffer::FloatToken::FloatToken(double, long)
       BPrivate::Storage::Sniffer::IntToken::~IntToken()
       BPrivate::Storage::Sniffer::IntToken::~IntToken()
       BPrivate::Storage::Sniffer::IntToken::~IntToken()
       BPrivate::Storage::Sniffer::IntToken::Float() const
       BPrivate::Storage::Sniffer::IntToken::Int() const
       BPrivate::Storage::Sniffer::IntToken::IntToken(int, long)
       BPrivate::Storage::Sniffer::IntToken::IntToken(int, long)
       BPrivate::Storage::Sniffer::parse(char const*, BPrivate::Storage::Sniffer::Rule*, BString*)
       BPrivate::Storage::Sniffer::Parser::~Parser()
       BPrivate::Storage::Sniffer::Parser::~Parser()
       BPrivate::Storage::Sniffer::Parser::ErrorMessage(BPrivate::Storage::Sniffer::Err*, char const*)
       BPrivate::Storage::Sniffer::Parser::Parse(char const*, BPrivate::Storage::Sniffer::Rule*, BString*)
       BPrivate::Storage::Sniffer::Parser::ParseConjList()
       BPrivate::Storage::Sniffer::Parser::ParseDisjList()
       BPrivate::Storage::Sniffer::Parser::ParsePattern()
       BPrivate::Storage::Sniffer::Parser::ParsePatternList(BPrivate::Storage::Sniffer::Range)
       BPrivate::Storage::Sniffer::Parser::ParsePriority()
       BPrivate::Storage::Sniffer::Parser::Parser()
       BPrivate::Storage::Sniffer::Parser::Parser()
       BPrivate::Storage::Sniffer::Parser::ParseRange()
       BPrivate::Storage::Sniffer::Parser::ParseRPattern()
       BPrivate::Storage::Sniffer::Parser::ParseRPatternList()
       BPrivate::Storage::Sniffer::Parser::ParseRule(BPrivate::Storage::Sniffer::Rule*)
       BPrivate::Storage::Sniffer::Parser::ThrowEndOfStreamError()
       BPrivate::Storage::Sniffer::Parser::ThrowUnexpectedTokenError(BPrivate::Storage::Sniffer::TokenType, BPrivate::Storage::Sniffer::Token const*)
       BPrivate::Storage::Sniffer::Parser::ThrowUnexpectedTokenError(BPrivate::Storage::Sniffer::TokenType, BPrivate::Storage::Sniffer::TokenType, BPrivate::Storage::Sniffer::Token const*)
       BPrivate::Storage::Sniffer::Pattern::~Pattern()
       BPrivate::Storage::Sniffer::Pattern::~Pattern()
       BPrivate::Storage::Sniffer::Pattern::BytesNeeded() const
       BPrivate::Storage::Sniffer::Pattern::GetErr() const
       BPrivate::Storage::Sniffer::Pattern::InitCheck() const
       BPrivate::Storage::Sniffer::Pattern::Pattern(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::Pattern::Pattern(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::Pattern::Pattern(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::Pattern::Pattern(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::Pattern::SetErrorMessage(char const*)
       BPrivate::Storage::Sniffer::Pattern::SetStatus(int, char const*)
       BPrivate::Storage::Sniffer::Pattern::SetTo(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::Pattern::Sniff(BPrivate::Storage::Sniffer::Range, BPositionIO*, bool) const
       BPrivate::Storage::Sniffer::Pattern::Sniff(long, long, BPositionIO*, bool) const
       BPrivate::Storage::Sniffer::PatternList::~PatternList()
       BPrivate::Storage::Sniffer::PatternList::~PatternList()
       BPrivate::Storage::Sniffer::PatternList::~PatternList()
       BPrivate::Storage::Sniffer::PatternList::Add(BPrivate::Storage::Sniffer::Pattern*)
       BPrivate::Storage::Sniffer::PatternList::BytesNeeded() const
       BPrivate::Storage::Sniffer::PatternList::GetErr() const
       BPrivate::Storage::Sniffer::PatternList::InitCheck() const
       BPrivate::Storage::Sniffer::PatternList::PatternList(BPrivate::Storage::Sniffer::Range)
       BPrivate::Storage::Sniffer::PatternList::PatternList(BPrivate::Storage::Sniffer::Range)
       BPrivate::Storage::Sniffer::PatternList::Sniff(BPositionIO*) const
       BPrivate::Storage::Sniffer::Range::End() const
       BPrivate::Storage::Sniffer::Range::GetErr() const
       BPrivate::Storage::Sniffer::Range::InitCheck() const
       BPrivate::Storage::Sniffer::Range::Range(int, int)
       BPrivate::Storage::Sniffer::Range::Range(int, int)
       BPrivate::Storage::Sniffer::Range::SetTo(int, int)
       BPrivate::Storage::Sniffer::Range::Start() const
       BPrivate::Storage::Sniffer::RPattern::~RPattern()
       BPrivate::Storage::Sniffer::RPattern::~RPattern()
       BPrivate::Storage::Sniffer::RPattern::BytesNeeded() const
       BPrivate::Storage::Sniffer::RPattern::GetErr() const
       BPrivate::Storage::Sniffer::RPattern::InitCheck() const
       BPrivate::Storage::Sniffer::RPattern::RPattern(BPrivate::Storage::Sniffer::Range, BPrivate::Storage::Sniffer::Pattern*)
       BPrivate::Storage::Sniffer::RPattern::RPattern(BPrivate::Storage::Sniffer::Range, BPrivate::Storage::Sniffer::Pattern*)
       BPrivate::Storage::Sniffer::RPattern::Sniff(BPositionIO*, bool) const
       BPrivate::Storage::Sniffer::RPatternList::~RPatternList()
       BPrivate::Storage::Sniffer::RPatternList::~RPatternList()
       BPrivate::Storage::Sniffer::RPatternList::~RPatternList()
       BPrivate::Storage::Sniffer::RPatternList::Add(BPrivate::Storage::Sniffer::RPattern*)
       BPrivate::Storage::Sniffer::RPatternList::BytesNeeded() const
       BPrivate::Storage::Sniffer::RPatternList::GetErr() const
       BPrivate::Storage::Sniffer::RPatternList::InitCheck() const
       BPrivate::Storage::Sniffer::RPatternList::RPatternList()
       BPrivate::Storage::Sniffer::RPatternList::RPatternList()
       BPrivate::Storage::Sniffer::RPatternList::Sniff(BPositionIO*) const
       BPrivate::Storage::Sniffer::Rule::~Rule()
       BPrivate::Storage::Sniffer::Rule::~Rule()
       BPrivate::Storage::Sniffer::Rule::BytesNeeded() const
       BPrivate::Storage::Sniffer::Rule::InitCheck() const
       BPrivate::Storage::Sniffer::Rule::Priority() const
       BPrivate::Storage::Sniffer::Rule::Rule()
       BPrivate::Storage::Sniffer::Rule::Rule()
       BPrivate::Storage::Sniffer::Rule::SetTo(double, std::vector<BPrivate::Storage::Sniffer::DisjList*, std::allocator<BPrivate::Storage::Sniffer::DisjList*> >*)
       BPrivate::Storage::Sniffer::Rule::Sniff(BPositionIO*) const
       BPrivate::Storage::Sniffer::Rule::Unset()
       BPrivate::Storage::Sniffer::StringToken::~StringToken()
       BPrivate::Storage::Sniffer::StringToken::~StringToken()
       BPrivate::Storage::Sniffer::StringToken::~StringToken()
       BPrivate::Storage::Sniffer::StringToken::String() const
       BPrivate::Storage::Sniffer::StringToken::StringToken(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)
       BPrivate::Storage::Sniffer::StringToken::StringToken(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)
       BPrivate::Storage::Sniffer::Token::~Token()
       BPrivate::Storage::Sniffer::Token::~Token()
       BPrivate::Storage::Sniffer::Token::~Token()
       BPrivate::Storage::Sniffer::Token::Float() const
       BPrivate::Storage::Sniffer::Token::Int() const
       BPrivate::Storage::Sniffer::Token::operator==(BPrivate::Storage::Sniffer::Token&) const
       BPrivate::Storage::Sniffer::Token::Pos() const
       BPrivate::Storage::Sniffer::Token::String() const
       BPrivate::Storage::Sniffer::Token::Token(BPrivate::Storage::Sniffer::TokenType, long)
       BPrivate::Storage::Sniffer::Token::Token(BPrivate::Storage::Sniffer::TokenType, long)
       BPrivate::Storage::Sniffer::Token::Type() const
       BPrivate::Storage::Sniffer::TokenStream::~TokenStream()
       BPrivate::Storage::Sniffer::TokenStream::~TokenStream()
       BPrivate::Storage::Sniffer::TokenStream::AddFloat(char const*, long)
       BPrivate::Storage::Sniffer::TokenStream::AddInt(char const*, long)
       BPrivate::Storage::Sniffer::TokenStream::AddString(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long)
       BPrivate::Storage::Sniffer::TokenStream::AddToken(BPrivate::Storage::Sniffer::TokenType, long)
       BPrivate::Storage::Sniffer::TokenStream::CondRead(BPrivate::Storage::Sniffer::TokenType)
       BPrivate::Storage::Sniffer::TokenStream::EndPos() const
       BPrivate::Storage::Sniffer::TokenStream::Get()
       BPrivate::Storage::Sniffer::TokenStream::InitCheck() const
       BPrivate::Storage::Sniffer::TokenStream::IsEmpty() const
       BPrivate::Storage::Sniffer::TokenStream::Pos() const
       BPrivate::Storage::Sniffer::TokenStream::Read(BPrivate::Storage::Sniffer::TokenType)
       BPrivate::Storage::Sniffer::TokenStream::SetTo(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::TokenStream::TokenStream()
       BPrivate::Storage::Sniffer::TokenStream::TokenStream()
       BPrivate::Storage::Sniffer::TokenStream::TokenStream(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::TokenStream::TokenStream(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
       BPrivate::Storage::Sniffer::TokenStream::Unget()
       BPrivate::Storage::Sniffer::TokenStream::Unset()
       BPrivate::Storage::Sniffer::tokenTypeToString(BPrivate::Storage::Sniffer::TokenType)
       BPrivate::Storage::SpecialOpNode::GetString(BString&)
       BPrivate::Storage::SpecialOpNode::SpecialOpNode(query_op)
       BPrivate::Storage::SpecialOpNode::SpecialOpNode(query_op)
       BPrivate::Storage::split_path(char const*, char**, char**)
       BPrivate::Storage::split_path(char const*, char*&, char*&)
       BPrivate::Storage::StringNode::GetString(BString&)
       BPrivate::Storage::StringNode::StringNode(char const*, bool)
       BPrivate::Storage::StringNode::StringNode(char const*, bool)
       BPrivate::Storage::to_lower(char const*, char*)
       BPrivate::Storage::to_lower(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
       BPrivate::Storage::to_lower(char const*)
       BPrivate::Storage::to_lower(char*)
       BPrivate::Storage::UnaryNode::~UnaryNode()
       BPrivate::Storage::UnaryNode::~UnaryNode()
       BPrivate::Storage::UnaryNode::~UnaryNode()
       BPrivate::Storage::UnaryNode::Arity() const
       BPrivate::Storage::UnaryNode::ChildAt(int)
       BPrivate::Storage::UnaryNode::SetChildAt(BPrivate::Storage::QueryNode*, int)
       BPrivate::Storage::UnaryNode::UnaryNode()
       BPrivate::Storage::UnaryNode::UnaryNode()
       BPrivate::Storage::UnaryOpNode::GetString(BString&)
       BPrivate::Storage::UnaryOpNode::UnaryOpNode(query_op)
       BPrivate::Storage::UnaryOpNode::UnaryOpNode(query_op)
       BPrivate::Storage::ValueNode<double>::GetString(BString&)
       BPrivate::Storage::ValueNode<float>::GetString(BString&)
       BPrivate::StripeView::~StripeView()
       BPrivate::StripeView::~StripeView()
       BPrivate::StripeView::~StripeView()
       BPrivate::StripeView::Draw(BRect)
       BPrivate::StripeView::SetIcon(BBitmap*)
       BPrivate::StripeView::StripeView(BBitmap*)
       BPrivate::StripeView::StripeView(BBitmap*)
       BPrivate::TextGapBuffer::_EnlargeGapTo(int)
       BPrivate::TextGapBuffer::_MoveGapTo(int)
       BPrivate::TextGapBuffer::_ShrinkGapTo(int)
       BPrivate::TextGapBuffer::~TextGapBuffer()
       BPrivate::TextGapBuffer::~TextGapBuffer()
       BPrivate::TextGapBuffer::FindChar(char, int, int*)
       BPrivate::TextGapBuffer::GetString(int, int, char*)
       BPrivate::TextGapBuffer::GetString(int, int*)
       BPrivate::TextGapBuffer::InsertText(BFile*, int, int, int)
       BPrivate::TextGapBuffer::InsertText(char const*, int, int)
       BPrivate::TextGapBuffer::PasswordMode() const
       BPrivate::TextGapBuffer::RealText()
       BPrivate::TextGapBuffer::RemoveRange(int, int)
       BPrivate::TextGapBuffer::SetPasswordMode(bool)
       BPrivate::TextGapBuffer::Text()
       BPrivate::TextGapBuffer::TextGapBuffer()
       BPrivate::TextGapBuffer::TextGapBuffer()
       BPrivate::ToolTipView::~ToolTipView()
       BPrivate::ToolTipView::~ToolTipView()
       BPrivate::ToolTipView::~ToolTipView()
       BPrivate::ToolTipView::AttachedToWindow()
       BPrivate::ToolTipView::DetachedFromWindow()
       BPrivate::ToolTipView::FrameResized(float, float)
       BPrivate::ToolTipView::HideTip()
       BPrivate::ToolTipView::KeyDown(char const*, int)
       BPrivate::ToolTipView::MouseMoved(BPoint, unsigned int, BMessage const*)
       BPrivate::ToolTipView::ResetWindowFrame()
       BPrivate::ToolTipView::ResetWindowFrame(BPoint)
       BPrivate::ToolTipView::ShowTip()
       BPrivate::ToolTipView::ToolTipView(BToolTip*)
       BPrivate::ToolTipView::ToolTipView(BToolTip*)
       BPrivate::ToolTipWindow::MessageReceived(BMessage*)
       BPrivate::ToolTipWindow::ToolTipWindow(BToolTip*, BPoint, void*)
       BPrivate::ToolTipWindow::ToolTipWindow(BToolTip*, BPoint, void*)
       BPrivate::UninitializeJob::~UninitializeJob()
       BPrivate::UninitializeJob::~UninitializeJob()
       BPrivate::UninitializeJob::~UninitializeJob()
       BPrivate::UninitializeJob::Do()
       BPrivate::UninitializeJob::UninitializeJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::UninitializeJob::UninitializeJob(BPrivate::PartitionReference*, BPrivate::PartitionReference*)
       BPrivate::UpperScroller::Draw(BRect)
       BPrivate::UpperScroller::UpperScroller(BRect)
       BPrivate::UpperScroller::UpperScroller(BRect)
       BPrivate::ViewState::UpdateFrom(BPrivate::PortLink&)
       BPrivate::ViewState::UpdateServerFontState(BPrivate::PortLink&)
       BPrivate::ViewState::UpdateServerState(BPrivate::PortLink&)
       BPrivate::ViewState::ViewState()
       BPrivate::ViewState::ViewState()
       BPrivate::WidthBuffer::~WidthBuffer()
       BPrivate::WidthBuffer::~WidthBuffer()
       BPrivate::WidthBuffer::~WidthBuffer()
       BPrivate::WidthBuffer::FindTable(BFont const*, int*)
       BPrivate::WidthBuffer::GetEscapement(unsigned int, int, float*)
       BPrivate::WidthBuffer::Hash(unsigned int)
       BPrivate::WidthBuffer::HashEscapements(char const*, int, int, int, BFont const*)
       BPrivate::WidthBuffer::InsertTable(BFont const*)
       BPrivate::WidthBuffer::StringWidth(BPrivate::TextGapBuffer&, int, int, BFont const*)
       BPrivate::WidthBuffer::StringWidth(char const*, int, int, BFont const*)
       BPrivate::WidthBuffer::WidthBuffer()
       BPrivate::WidthBuffer::WidthBuffer()
       BPrivate::WriteCMAP8(unsigned char**, unsigned char*, int)
       BPrivate::WriteGray1(unsigned char**, unsigned char*, int)
       BPrivate::WriteGray8(unsigned char**, unsigned char*, int)
       BPrivate::WriteRGB24(unsigned char**, unsigned char*, int)
       BPropertyInfo::_ReservedPropertyInfo1()
       BPropertyInfo::_ReservedPropertyInfo2()
       BPropertyInfo::_ReservedPropertyInfo3()
       BPropertyInfo::_ReservedPropertyInfo4()
       BPropertyInfo::~BPropertyInfo()
       BPropertyInfo::~BPropertyInfo()
       BPropertyInfo::~BPropertyInfo()
       BPropertyInfo::AllowsTypeCode(unsigned int) const
       BPropertyInfo::BPropertyInfo(BPropertyInfo const&)
       BPropertyInfo::BPropertyInfo(BPropertyInfo const&)
       BPropertyInfo::BPropertyInfo(property_info*, value_info*, bool)
       BPropertyInfo::BPropertyInfo(property_info*, value_info*, bool)
       BPropertyInfo::CountProperties() const
       BPropertyInfo::CountValues() const
       BPropertyInfo::FindCommand(unsigned int, int, property_info*)
       BPropertyInfo::FindMatch(BMessage*, int, BMessage*, int, char const*, void*) const
       BPropertyInfo::FindSpecifier(unsigned int, property_info*)
       BPropertyInfo::Flatten(void*, long) const
       BPropertyInfo::FlattenedSize() const
       BPropertyInfo::FreeMem()
       BPropertyInfo::IsFixedSize() const
       BPropertyInfo::operator=(BPropertyInfo const&)
       BPropertyInfo::PrintToStream() const
       BPropertyInfo::Properties() const
       BPropertyInfo::TypeCode() const
       BPropertyInfo::Unflatten(unsigned int, void const*, long)
       BPropertyInfo::Values() const
       BQuery::_EvaluateStack()
       BQuery::_HasFetched() const
       BQuery::_ParseDates(BString&)
       BQuery::_PushNode(BPrivate::Storage::QueryNode*, bool)
       BQuery::_QwertyQuery1()
       BQuery::_QwertyQuery2()
       BQuery::_QwertyQuery3()
       BQuery::_QwertyQuery4()
       BQuery::_QwertyQuery5()
       BQuery::_QwertyQuery6()
       BQuery::_SetPredicate(char const*)
       BQuery::~BQuery()
       BQuery::~BQuery()
       BQuery::~BQuery()
       BQuery::BQuery()
       BQuery::BQuery()
       BQuery::Clear()
       BQuery::CountEntries()
       BQuery::Fetch()
       BQuery::GetNextDirents(dirent*, unsigned long, int)
       BQuery::GetNextEntry(BEntry*, bool)
       BQuery::GetNextRef(entry_ref*)
       BQuery::GetPredicate(BString*)
       BQuery::GetPredicate(char*, unsigned long)
       BQuery::IsLive() const
       BQuery::PredicateLength()
       BQuery::PushAttr(char const*)
       BQuery::PushDate(char const*)
       BQuery::PushDouble(double)
       BQuery::PushFloat(float)
       BQuery::PushInt32(int)
       BQuery::PushInt64(long)
       BQuery::PushOp(query_op)
       BQuery::PushString(char const*, bool)
       BQuery::PushUInt32(unsigned int)
       BQuery::PushUInt64(unsigned long)
       BQuery::Rewind()
       BQuery::SetPredicate(char const*)
       BQuery::SetTarget(BMessenger)
       BQuery::SetVolume(BVolume const*)
       BQuery::TargetDevice() const
       BRadioButton::_KnobFrame() const
       BRadioButton::_KnobFrame(font_height const&) const
       BRadioButton::_Redraw()
       BRadioButton::_ReservedRadioButton1()
       BRadioButton::_ReservedRadioButton2()
       BRadioButton::~BRadioButton()
       BRadioButton::~BRadioButton()
       BRadioButton::~BRadioButton()
       BRadioButton::AllAttached()
       BRadioButton::AllDetached()
       BRadioButton::Archive(BMessage*, bool) const
       BRadioButton::AttachedToWindow()
       BRadioButton::BRadioButton(BMessage*)
       BRadioButton::BRadioButton(BMessage*)
       BRadioButton::BRadioButton(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BRadioButton::BRadioButton(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BRadioButton::BRadioButton(char const*, BMessage*)
       BRadioButton::BRadioButton(char const*, BMessage*)
       BRadioButton::BRadioButton(char const*, char const*, BMessage*, unsigned int)
       BRadioButton::BRadioButton(char const*, char const*, BMessage*, unsigned int)
       BRadioButton::DetachedFromWindow()
       BRadioButton::Draw(BRect)
       BRadioButton::FrameMoved(BPoint)
       BRadioButton::FrameResized(float, float)
       BRadioButton::GetPreferredSize(float*, float*)
       BRadioButton::GetSupportedSuites(BMessage*)
       BRadioButton::Instantiate(BMessage*)
       BRadioButton::Invoke(BMessage*)
       BRadioButton::KeyDown(char const*, int)
       BRadioButton::LayoutAlignment()
       BRadioButton::MakeFocus(bool)
       BRadioButton::MaxSize()
       BRadioButton::MessageReceived(BMessage*)
       BRadioButton::MouseDown(BPoint)
       BRadioButton::MouseMoved(BPoint, unsigned int, BMessage const*)
       BRadioButton::MouseUp(BPoint)
       BRadioButton::operator=(BRadioButton const&)
       BRadioButton::Perform(unsigned int, void*)
       BRadioButton::ResizeToPreferred()
       BRadioButton::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BRadioButton::SetIcon(BBitmap const*, unsigned int)
       BRadioButton::SetValue(int)
       BRadioButton::WindowActivated(bool)
       BRect::Contains(BPoint) const
       BRect::Contains(BRect) const
       BRect::InsetBy(BPoint)
       BRect::InsetBy(float, float)
       BRect::InsetByCopy(BPoint)
       BRect::InsetByCopy(BPoint) const
       BRect::InsetByCopy(float, float)
       BRect::InsetByCopy(float, float) const
       BRect::InsetBySelf(BPoint)
       BRect::InsetBySelf(float, float)
       BRect::Intersects(BRect) const
       BRect::OffsetBy(BPoint)
       BRect::OffsetBy(float, float)
       BRect::OffsetByCopy(BPoint)
       BRect::OffsetByCopy(BPoint) const
       BRect::OffsetByCopy(float, float)
       BRect::OffsetByCopy(float, float) const
       BRect::OffsetBySelf(BPoint)
       BRect::OffsetBySelf(float, float)
       BRect::OffsetTo(BPoint)
       BRect::OffsetTo(float, float)
       BRect::OffsetToCopy(BPoint)
       BRect::OffsetToCopy(BPoint) const
       BRect::OffsetToCopy(float, float)
       BRect::OffsetToCopy(float, float) const
       BRect::OffsetToSelf(BPoint)
       BRect::OffsetToSelf(float, float)
       BRect::operator!=(BRect) const
       BRect::operator&(BRect) const
       BRect::operator==(BRect) const
       BRect::operator|(BRect) const
       BRect::PrintToStream() const
       BRect::SetLeftBottom(BPoint)
       BRect::SetLeftTop(BPoint)
       BRect::SetRightBottom(BPoint)
       BRect::SetRightTop(BPoint)
       BReferenceable::~BReferenceable()
       BReferenceable::~BReferenceable()
       BReferenceable::~BReferenceable()
       BReferenceable::AcquireReference()
       BReferenceable::BReferenceable()
       BReferenceable::BReferenceable()
       BReferenceable::FirstReferenceAcquired()
       BReferenceable::LastReferenceReleased()
       BReferenceable::ReleaseReference()
       BRegion::_AdoptRegionData(BRegion&)
       BRegion::_Convert(BRect const&) const
       BRegion::_ConvertToInternal(BRect const&) const
       BRegion::_ConvertToInternal(clipping_rect const&) const
       BRegion::_SetSize(int)
       BRegion::~BRegion()
       BRegion::~BRegion()
       BRegion::~BRegion()
       BRegion::BRegion()
       BRegion::BRegion()
       BRegion::BRegion(BRect)
       BRegion::BRegion(BRect)
       BRegion::BRegion(BRegion const&)
       BRegion::BRegion(BRegion const&)
       BRegion::BRegion(clipping_rect const&)
       BRegion::BRegion(clipping_rect const&)
       BRegion::Contains(BPoint) const
       BRegion::Contains(int, int)
       BRegion::Contains(int, int) const
       BRegion::CountRects()
       BRegion::CountRects() const
       BRegion::Exclude(BRect)
       BRegion::Exclude(BRegion const*)
       BRegion::Exclude(clipping_rect)
       BRegion::ExclusiveInclude(BRegion const*)
       BRegion::Frame() const
       BRegion::FrameInt() const
       BRegion::Include(BRect)
       BRegion::Include(BRegion const*)
       BRegion::Include(clipping_rect)
       BRegion::Intersects(BRect) const
       BRegion::Intersects(clipping_rect) const
       BRegion::IntersectWith(BRegion const*)
       BRegion::MakeEmpty()
       BRegion::OffsetBy(BPoint const&)
       BRegion::OffsetBy(int, int)
       BRegion::operator=(BRegion const&)
       BRegion::operator==(BRegion const&) const
       BRegion::PrintToStream() const
       BRegion::RectAt(int)
       BRegion::RectAt(int) const
       BRegion::RectAtInt(int)
       BRegion::RectAtInt(int) const
       BRegion::ScaleBy(BSize)
       BRegion::ScaleBy(float, float)
       BRegion::Set(BRect)
       BRegion::Set(clipping_rect)
       BRegion::Support::CreateRegion()
       BRegion::Support::DestroyRegion(BRegion*)
       BRegion::Support::miCoalesce(BRegion*, int, int)
       BRegion::Support::miIntersectO(BRegion*, clipping_rect*, clipping_rect*, clipping_rect*, clipping_rect*, int, int)
       BRegion::Support::miRegionCopy(BRegion*, BRegion const*)
       BRegion::Support::miRegionOp(BRegion*, BRegion const*, BRegion const*, int (*)(BRegion*, clipping_rect*, clipping_rect*, clipping_rect*, clipping_rect*, int, int), int (*)(BRegion*, clipping_rect*, clipping_rect*, int, int), int (*)(BRegion*, clipping_rect*, clipping_rect*, int, int))
       BRegion::Support::miSetExtents(BRegion*)
       BRegion::Support::miSubtractNonO1(BRegion*, clipping_rect*, clipping_rect*, int, int)
       BRegion::Support::miSubtractO(BRegion*, clipping_rect*, clipping_rect*, clipping_rect*, clipping_rect*, int, int)
       BRegion::Support::miUnionNonO(BRegion*, clipping_rect*, clipping_rect*, int, int)
       BRegion::Support::miUnionO(BRegion*, clipping_rect*, clipping_rect*, clipping_rect*, clipping_rect*, int, int)
       BRegion::Support::XIntersectRegion(BRegion const*, BRegion const*, BRegion*)
       BRegion::Support::XOffsetRegion(BRegion*, int, int)
       BRegion::Support::XPointInRegion(BRegion const*, int, int)
       BRegion::Support::XRectInRegion(BRegion const*, clipping_rect const&)
       BRegion::Support::XSubtractRegion(BRegion const*, BRegion const*, BRegion*)
       BRegion::Support::XUnionRegion(BRegion const*, BRegion const*, BRegion*)
       BRegion::Support::XXorRegion(BRegion const*, BRegion const*, BRegion*)
       BRelativeDateTimeFormat::~BRelativeDateTimeFormat()
       BRelativeDateTimeFormat::~BRelativeDateTimeFormat()
       BRelativeDateTimeFormat::~BRelativeDateTimeFormat()
       BRelativeDateTimeFormat::BRelativeDateTimeFormat()
       BRelativeDateTimeFormat::BRelativeDateTimeFormat()
       BRelativeDateTimeFormat::BRelativeDateTimeFormat(BLanguage const&, BFormattingConventions const&)
       BRelativeDateTimeFormat::BRelativeDateTimeFormat(BLanguage const&, BFormattingConventions const&)
       BRelativeDateTimeFormat::BRelativeDateTimeFormat(BRelativeDateTimeFormat const&)
       BRelativeDateTimeFormat::BRelativeDateTimeFormat(BRelativeDateTimeFormat const&)
       BRelativeDateTimeFormat::Format(BString&, long) const
       BResources::_ReservedResources1()
       BResources::_ReservedResources2()
       BResources::_ReservedResources3()
       BResources::_ReservedResources4()
       BResources::_ReservedResources5()
       BResources::_ReservedResources6()
       BResources::_ReservedResources7()
       BResources::_ReservedResources8()
       BResources::~BResources()
       BResources::~BResources()
       BResources::~BResources()
       BResources::AddResource(unsigned int, int, void const*, unsigned long, char const*)
       BResources::BResources()
       BResources::BResources()
       BResources::BResources(BFile const*, bool)
       BResources::BResources(BFile const*, bool)
       BResources::BResources(char const*, bool)
       BResources::BResources(char const*, bool)
       BResources::BResources(entry_ref const*, bool)
       BResources::BResources(entry_ref const*, bool)
       BResources::File() const
       BResources::FindResource(unsigned int, char const*, unsigned long*)
       BResources::FindResource(unsigned int, int, unsigned long*)
       BResources::GetResourceInfo(int, unsigned int*, int*, char const**, unsigned long*)
       BResources::GetResourceInfo(unsigned int, char const*, int*, unsigned long*)
       BResources::GetResourceInfo(unsigned int, int, char const**, unsigned long*)
       BResources::GetResourceInfo(unsigned int, int, int*, char const**, unsigned long*)
       BResources::GetResourceInfo(void const*, unsigned int*, int*, unsigned long*, char const**)
       BResources::HasResource(unsigned int, char const*)
       BResources::HasResource(unsigned int, int)
       BResources::InitCheck() const
       BResources::LoadResource(unsigned int, char const*, unsigned long*)
       BResources::LoadResource(unsigned int, int, unsigned long*)
       BResources::MergeFrom(BFile*)
       BResources::PreloadResourceType(unsigned int)
       BResources::ReadResource(unsigned int, int, void*, long, unsigned long)
       BResources::RemoveResource(unsigned int, int)
       BResources::RemoveResource(void const*)
       BResources::SetTo(BFile const*, bool)
       BResources::SetTo(char const*, bool)
       BResources::SetTo(entry_ref const*, bool)
       BResources::SetToImage(int, bool)
       BResources::SetToImage(void const*, bool)
       BResources::Sync()
       BResources::Unset()
       BResources::WriteResource(unsigned int, int, void const*, long, unsigned long)
       BResources::WriteTo(BFile*)
       BResourceStrings::_AddString(char*, int, bool)
       BResourceStrings::_Cleanup()
       BResourceStrings::_FindString(int)
       BResourceStrings::_MakeEmpty()
       BResourceStrings::_Rehash(int)
       BResourceStrings::_Reserved_ResourceStrings_0(void*)
       BResourceStrings::_Reserved_ResourceStrings_1(void*)
       BResourceStrings::_Reserved_ResourceStrings_2(void*)
       BResourceStrings::_Reserved_ResourceStrings_3(void*)
       BResourceStrings::_Reserved_ResourceStrings_4(void*)
       BResourceStrings::_Reserved_ResourceStrings_5(void*)
       BResourceStrings::_string_id_hash::_string_id_hash()
       BResourceStrings::_string_id_hash::_string_id_hash()
       BResourceStrings::_string_id_hash::~_string_id_hash()
       BResourceStrings::_string_id_hash::~_string_id_hash()
       BResourceStrings::_string_id_hash::assign_string(char const*, bool)
       BResourceStrings::~BResourceStrings()
       BResourceStrings::~BResourceStrings()
       BResourceStrings::~BResourceStrings()
       BResourceStrings::BResourceStrings()
       BResourceStrings::BResourceStrings()
       BResourceStrings::BResourceStrings(entry_ref const&)
       BResourceStrings::BResourceStrings(entry_ref const&)
       BResourceStrings::FindString(int)
       BResourceStrings::GetStringFile(entry_ref*)
       BResourceStrings::InitCheck()
       BResourceStrings::NewString(int)
       BResourceStrings::SetStringFile(entry_ref const*)
       BRoster::_AddApplication(char const*, entry_ref const*, unsigned int, int, int, int, bool, unsigned int*, int*) const
       BRoster::_AddToRecentApps(char const*) const
       BRoster::_ApplicationCrashed(int)
       BRoster::_ClearRecentApps() const
       BRoster::_ClearRecentDocuments() const
       BRoster::_ClearRecentFolders() const
       BRoster::_CompleteRegistration(int, int, int) const
       BRoster::_DumpRoster() const
       BRoster::_GetFileType(entry_ref const*, BNodeInfo*, char*) const
       BRoster::_InitMessenger()
       BRoster::_InitMimeMessenger(void*)
       BRoster::_IsAppRegistered(entry_ref const*, int, unsigned int, bool*, app_info*) const
       BRoster::_IsShutDownInProgress(bool*)
       BRoster::_LaunchApp(char const*, entry_ref const*, BList const*, int, char const* const*, char const**, int*, int*, int*, unsigned int*, bool) const
       BRoster::_LoadRecentLists(char const*) const
       BRoster::_MimeMessenger()
       BRoster::_RemoveApp(int) const
       BRoster::_RemovePreRegApp(unsigned int) const
       BRoster::_ResolveApp(char const*, entry_ref*, entry_ref*, char*, unsigned int*, bool*) const
       BRoster::_SaveRecentLists(char const*) const
       BRoster::_SendToRunning(int, int, char const* const*, BList const*, entry_ref const*, bool) const
       BRoster::_SetAppFlags(int, unsigned int) const
       BRoster::_SetSignature(int, char const*) const
       BRoster::_SetThread(int, int) const
       BRoster::_SetThreadAndTeam(unsigned int, int, int, int*) const
       BRoster::_SetWithoutRegistrar(bool)
       BRoster::_ShutDown(bool, bool, bool)
       BRoster::_TranslateRef(entry_ref*, BMimeType*, entry_ref*, BFile*, bool*) const
       BRoster::_TranslateType(char const*, BMimeType*, entry_ref*, BFile*) const
       BRoster::_UpdateActiveApp(int) const
       BRoster::~BRoster()
       BRoster::~BRoster()
       BRoster::ActivateApp(int) const
       BRoster::AddToRecentDocuments(entry_ref const*, char const*) const
       BRoster::AddToRecentFolders(entry_ref const*, char const*) const
       BRoster::ArgVector::~ArgVector()
       BRoster::ArgVector::~ArgVector()
       BRoster::ArgVector::ArgVector()
       BRoster::ArgVector::ArgVector()
       BRoster::ArgVector::Init(int, char const* const*, entry_ref const*, entry_ref const*)
       BRoster::ArgVector::Unset()
       BRoster::Broadcast(BMessage*, BMessenger) const
       BRoster::Broadcast(BMessage*) const
       BRoster::BRoster()
       BRoster::BRoster()
       BRoster::FindApp(char const*, entry_ref*) const
       BRoster::FindApp(entry_ref*, entry_ref*) const
       BRoster::GetActiveAppInfo(app_info*) const
       BRoster::GetAppInfo(char const*, app_info*) const
       BRoster::GetAppInfo(entry_ref*, app_info*) const
       BRoster::GetAppList(BList*) const
       BRoster::GetAppList(char const*, BList*) const
       BRoster::GetRecentApps(BMessage*, int) const
       BRoster::GetRecentDocuments(BMessage*, int, char const*, char const*) const
       BRoster::GetRecentDocuments(BMessage*, int, char const**, int, char const*) const
       BRoster::GetRecentFolders(BMessage*, int, char const*) const
       BRoster::GetRunningAppInfo(int, app_info*) const
       BRoster::IsRunning(char const*) const
       BRoster::IsRunning(entry_ref*) const
       BRoster::Launch(char const*, BList*, int*) const
       BRoster::Launch(char const*, BMessage*, int*) const
       BRoster::Launch(char const*, int, char const* const*, int*) const
       BRoster::Launch(entry_ref const*, BList const*, int*) const
       BRoster::Launch(entry_ref const*, BMessage const*, int*) const
       BRoster::Launch(entry_ref const*, int, char const* const*, int*) const
       BRoster::Private::DeleteBeRoster()
       BRoster::Private::InitBeRoster()
       BRoster::Private::IsMessengerValid(bool) const
       BRoster::Private::SendTo(BMessage*, BMessage*, bool)
       BRoster::Private::SetTo(BMessenger, BMessenger)
       BRoster::StartWatching(BMessenger, unsigned int) const
       BRoster::StopWatching(BMessenger) const
       BRoster::TeamFor(char const*) const
       BRoster::TeamFor(entry_ref*) const
       BScreen::~BScreen()
       BScreen::~BScreen()
       BScreen::BaseAddress()
       BScreen::BScreen(BWindow*)
       BScreen::BScreen(BWindow*)
       BScreen::BScreen(screen_id)
       BScreen::BScreen(screen_id)
       BScreen::BytesPerRow()
       BScreen::ColorForIndex(unsigned char)
       BScreen::ColorMap()
       BScreen::ColorSpace()
       BScreen::DesktopColor()
       BScreen::DesktopColor(unsigned int)
       BScreen::DPMSCapabilites()
       BScreen::DPMSState()
       BScreen::Frame()
       BScreen::GetBitmap(BBitmap**, bool, BRect*)
       BScreen::GetBrightness(float*)
       BScreen::GetDeviceInfo(accelerant_device_info*)
       BScreen::GetMode(display_mode*)
       BScreen::GetMode(unsigned int, display_mode*)
       BScreen::GetModeList(display_mode**, unsigned int*)
       BScreen::GetMonitorInfo(monitor_info*)
       BScreen::GetPixelClockLimits(display_mode*, unsigned int*, unsigned int*)
       BScreen::GetTimingConstraints(display_timing_constraints*)
       BScreen::ID()
       BScreen::IndexForColor(unsigned char, unsigned char, unsigned char, unsigned char)
       BScreen::InvertIndex(unsigned char)
       BScreen::IsValid()
       BScreen::private_screen()
       BScreen::ProposeDisplayMode(display_mode*, display_mode const*, display_mode const*)
       BScreen::ProposeMode(display_mode*, display_mode const*, display_mode const*)
       BScreen::ReadBitmap(BBitmap*, bool, BRect*)
       BScreen::SetBrightness(float)
       BScreen::SetDesktopColor(rgb_color, bool)
       BScreen::SetDesktopColor(rgb_color, unsigned int, bool)
       BScreen::SetDPMS(unsigned int)
       BScreen::SetMode(display_mode*, bool)
       BScreen::SetMode(unsigned int, display_mode*, bool)
       BScreen::SetToNext()
       BScreen::WaitForRetrace()
       BScreen::WaitForRetrace(long)
       BScrollBar::_ButtonFor(BPoint) const
       BScrollBar::_ButtonRectFor(int) const
       BScrollBar::_DoubleArrows() const
       BScrollBar::_MinSize() const
       BScrollBar::_ReservedScrollBar1()
       BScrollBar::_ReservedScrollBar2()
       BScrollBar::_ReservedScrollBar3()
       BScrollBar::_ReservedScrollBar4()
       BScrollBar::_UpdateArrowButtons()
       BScrollBar::_UpdateTargetValue(BPoint)
       BScrollBar::_UpdateThumbFrame()
       BScrollBar::_ValueFor(BPoint) const
       BScrollBar::~BScrollBar()
       BScrollBar::~BScrollBar()
       BScrollBar::~BScrollBar()
       BScrollBar::AllAttached()
       BScrollBar::AllDetached()
       BScrollBar::Archive(BMessage*, bool) const
       BScrollBar::AttachedToWindow()
       BScrollBar::BScrollBar(BMessage*)
       BScrollBar::BScrollBar(BMessage*)
       BScrollBar::BScrollBar(BRect, char const*, BView*, float, float, orientation)
       BScrollBar::BScrollBar(BRect, char const*, BView*, float, float, orientation)
       BScrollBar::BScrollBar(char const*, BView*, float, float, orientation)
       BScrollBar::BScrollBar(char const*, BView*, float, float, orientation)
       BScrollBar::DetachedFromWindow()
       BScrollBar::Draw(BRect)
       BScrollBar::FrameMoved(BPoint)
       BScrollBar::FrameResized(float, float)
       BScrollBar::GetPreferredSize(float*, float*)
       BScrollBar::GetRange(float*, float*) const
       BScrollBar::GetSteps(float*, float*) const
       BScrollBar::GetSupportedSuites(BMessage*)
       BScrollBar::Instantiate(BMessage*)
       BScrollBar::MakeFocus(bool)
       BScrollBar::MaxSize()
       BScrollBar::MessageReceived(BMessage*)
       BScrollBar::MinSize()
       BScrollBar::MouseDown(BPoint)
       BScrollBar::MouseMoved(BPoint, unsigned int, BMessage const*)
       BScrollBar::MouseUp(BPoint)
       BScrollBar::operator=(BScrollBar const&)
       BScrollBar::Orientation() const
       BScrollBar::Perform(unsigned int, void*)
       BScrollBar::PreferredSize()
       BScrollBar::Private::button_repeater_thread(void*)
       BScrollBar::Private::ButtonRepeaterThread()
       BScrollBar::Proportion() const
       BScrollBar::ResizeToPreferred()
       BScrollBar::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BScrollBar::SetBorderHighlighted(bool)
       BScrollBar::SetOrientation(orientation)
       BScrollBar::SetProportion(float)
       BScrollBar::SetRange(float, float)
       BScrollBar::SetSteps(float, float)
       BScrollBar::SetTarget(BView*)
       BScrollBar::SetTarget(char const*)
       BScrollBar::SetValue(float)
       BScrollBar::Target() const
       BScrollBar::Value() const
       BScrollBar::ValueChanged(float)
       BScrollBar::WindowActivated(bool)
       BScrollView::_AlignScrollBars(bool, bool, BRect)
       BScrollView::_BorderSize() const
       BScrollView::_BorderSize(border_style)
       BScrollView::_ComputeFrame(BRect, BScrollBar*, BScrollBar*, border_style, unsigned int)
       BScrollView::_ComputeFrame(BRect) const
       BScrollView::_ComputeFrame(BView*, BScrollBar*, BScrollBar*, border_style, unsigned int)
       BScrollView::_ComputeSize(BSize) const
       BScrollView::_Init(bool, bool)
       BScrollView::_InnerFrame() const
       BScrollView::_InsetBorders(BRect&, border_style, unsigned int, bool)
       BScrollView::_ModifyFlags(unsigned int, BView*, border_style)
       BScrollView::_ReservedScrollView1()
       BScrollView::_ReservedScrollView2()
       BScrollView::_ReservedScrollView3()
       BScrollView::_ReservedScrollView4()
       BScrollView::~BScrollView()
       BScrollView::~BScrollView()
       BScrollView::~BScrollView()
       BScrollView::AllAttached()
       BScrollView::AllDetached()
       BScrollView::AllUnarchived(BMessage const*)
       BScrollView::Archive(BMessage*, bool) const
       BScrollView::AttachedToWindow()
       BScrollView::Border() const
       BScrollView::Borders() const
       BScrollView::BScrollView(BMessage*)
       BScrollView::BScrollView(BMessage*)
       BScrollView::BScrollView(char const*, BView*, unsigned int, bool, bool, border_style)
       BScrollView::BScrollView(char const*, BView*, unsigned int, bool, bool, border_style)
       BScrollView::BScrollView(char const*, BView*, unsigned int, unsigned int, bool, bool, border_style)
       BScrollView::BScrollView(char const*, BView*, unsigned int, unsigned int, bool, bool, border_style)
       BScrollView::DetachedFromWindow()
       BScrollView::DoLayout()
       BScrollView::Draw(BRect)
       BScrollView::FrameMoved(BPoint)
       BScrollView::FrameResized(float, float)
       BScrollView::GetPreferredSize(float*, float*)
       BScrollView::GetSupportedSuites(BMessage*)
       BScrollView::Instantiate(BMessage*)
       BScrollView::InvalidateLayout(bool)
       BScrollView::IsBorderHighlighted() const
       BScrollView::LayoutInvalidated(bool)
       BScrollView::MakeFocus(bool)
       BScrollView::MaxSize()
       BScrollView::MessageReceived(BMessage*)
       BScrollView::MinSize()
       BScrollView::MouseDown(BPoint)
       BScrollView::MouseMoved(BPoint, unsigned int, BMessage const*)
       BScrollView::MouseUp(BPoint)
       BScrollView::operator=(BScrollView const&)
       BScrollView::Perform(unsigned int, void*)
       BScrollView::PreferredSize()
       BScrollView::ResizeToPreferred()
       BScrollView::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BScrollView::ScrollBar(orientation) const
       BScrollView::SetBorder(border_style)
       BScrollView::SetBorderHighlighted(bool)
       BScrollView::SetBorders(unsigned int)
       BScrollView::SetTarget(BView*)
       BScrollView::Target() const
       BScrollView::WindowActivated(bool)
       BSeparatorItem::_ReservedSeparatorItem1()
       BSeparatorItem::_ReservedSeparatorItem2()
       BSeparatorItem::~BSeparatorItem()
       BSeparatorItem::~BSeparatorItem()
       BSeparatorItem::~BSeparatorItem()
       BSeparatorItem::Archive(BMessage*, bool) const
       BSeparatorItem::BSeparatorItem()
       BSeparatorItem::BSeparatorItem()
       BSeparatorItem::BSeparatorItem(BMessage*)
       BSeparatorItem::BSeparatorItem(BMessage*)
       BSeparatorItem::Draw()
       BSeparatorItem::GetContentSize(float*, float*)
       BSeparatorItem::Instantiate(BMessage*)
       BSeparatorItem::operator=(BSeparatorItem const&)
       BSeparatorItem::SetEnabled(bool)
       BSeparatorView::_BorderSize() const
       BSeparatorView::_Init(char const*, BView*, orientation, BAlignment, border_style)
       BSeparatorView::_MaxLabelBounds() const
       BSeparatorView::_ReservedSeparatorView1()
       BSeparatorView::_ReservedSeparatorView10()
       BSeparatorView::_ReservedSeparatorView2()
       BSeparatorView::_ReservedSeparatorView3()
       BSeparatorView::_ReservedSeparatorView4()
       BSeparatorView::_ReservedSeparatorView5()
       BSeparatorView::_ReservedSeparatorView6()
       BSeparatorView::_ReservedSeparatorView7()
       BSeparatorView::_ReservedSeparatorView8()
       BSeparatorView::_ReservedSeparatorView9()
       BSeparatorView::~BSeparatorView()
       BSeparatorView::~BSeparatorView()
       BSeparatorView::~BSeparatorView()
       BSeparatorView::Archive(BMessage*, bool) const
       BSeparatorView::BSeparatorView(BMessage*)
       BSeparatorView::BSeparatorView(BMessage*)
       BSeparatorView::BSeparatorView(BView*, orientation, border_style, BAlignment const&)
       BSeparatorView::BSeparatorView(BView*, orientation, border_style, BAlignment const&)
       BSeparatorView::BSeparatorView(char const*, BView*, orientation, border_style, BAlignment const&)
       BSeparatorView::BSeparatorView(char const*, BView*, orientation, border_style, BAlignment const&)
       BSeparatorView::BSeparatorView(char const*, char const*, orientation, border_style, BAlignment const&)
       BSeparatorView::BSeparatorView(char const*, char const*, orientation, border_style, BAlignment const&)
       BSeparatorView::BSeparatorView(char const*, orientation, border_style, BAlignment const&)
       BSeparatorView::BSeparatorView(char const*, orientation, border_style, BAlignment const&)
       BSeparatorView::BSeparatorView(orientation, border_style)
       BSeparatorView::BSeparatorView(orientation, border_style)
       BSeparatorView::DoLayout()
       BSeparatorView::Draw(BRect)
       BSeparatorView::GetPreferredSize(float*, float*)
       BSeparatorView::Instantiate(BMessage*)
       BSeparatorView::MaxSize()
       BSeparatorView::MinSize()
       BSeparatorView::Perform(unsigned int, void*)
       BSeparatorView::PreferredSize()
       BSeparatorView::SetAlignment(BAlignment const&)
       BSeparatorView::SetBorderStyle(border_style)
       BSeparatorView::SetLabel(BView*, bool)
       BSeparatorView::SetLabel(char const*)
       BSeparatorView::SetOrientation(orientation)
       BServer::BServer(char const*, bool, int*)
       BServer::BServer(char const*, bool, int*)
       BServer::BServer(char const*, char const*, int, bool, int*)
       BServer::BServer(char const*, char const*, int, bool, int*)
       BServer::InitGUIContext()
       BShape::_ReservedShape1()
       BShape::_ReservedShape2()
       BShape::_ReservedShape3()
       BShape::_ReservedShape4()
       BShape::~BShape()
       BShape::~BShape()
       BShape::~BShape()
       BShape::AddShape(BShape const*)
       BShape::Archive(BMessage*, bool) const
       BShape::ArcTo(float, float, float, bool, bool, BPoint const&)
       BShape::BezierTo(BPoint const&, BPoint const&, BPoint const&)
       BShape::BezierTo(BPoint*)
       BShape::Bounds() const
       BShape::BShape()
       BShape::BShape()
       BShape::BShape(BMessage*)
       BShape::BShape(BMessage*)
       BShape::BShape(BShape const&)
       BShape::BShape(BShape const&)
       BShape::Clear()
       BShape::Close()
       BShape::CurrentPosition() const
       BShape::GetData(int*, int*, unsigned int**, BPoint**)
       BShape::InitData()
       BShape::Instantiate(BMessage*)
       BShape::LineTo(BPoint)
       BShape::MoveTo(BPoint)
       BShape::operator!=(BShape const&) const
       BShape::operator=(BShape const&)
       BShape::operator==(BShape const&) const
       BShape::Perform(unsigned int, void*)
       BShape::SetData(int, int, unsigned int const*, BPoint const*)
       BShapeIterator::_ReservedShapeIterator1()
       BShapeIterator::_ReservedShapeIterator2()
       BShapeIterator::_ReservedShapeIterator3()
       BShapeIterator::_ReservedShapeIterator4()
       BShapeIterator::~BShapeIterator()
       BShapeIterator::~BShapeIterator()
       BShapeIterator::~BShapeIterator()
       BShapeIterator::BShapeIterator()
       BShapeIterator::BShapeIterator()
       BShapeIterator::Iterate(BShape*)
       BShapeIterator::IterateArcTo(float&, float&, float&, bool, bool, BPoint&)
       BShapeIterator::IterateBezierTo(int, BPoint*)
       BShapeIterator::IterateClose()
       BShapeIterator::IterateLineTo(int, BPoint*)
       BShapeIterator::IterateMoveTo(BPoint*)
       BShelf::_AddReplicant(BMessage*, BPoint*, unsigned int)
       BShelf::_Archive(BMessage*) const
       BShelf::_CreateZombie(BMessage*, BDragger*&)
       BShelf::_DeleteReplicant(BPrivate::replicant_data*)
       BShelf::_GetProperty(BMessage*, BMessage*)
       BShelf::_GetReplicant(BMessage*, BView*, BPoint const&, BDragger*&, BDragger::relation&)
       BShelf::_GetReplicantData(BMessage*, BView*, BView*&, BDragger*&, BDragger::relation&)
       BShelf::_InitData(BEntry*, BDataIO*, BView*, bool)
       BShelf::_InstantiateObject(BMessage*, int*)
       BShelf::_ReservedShelf2()
       BShelf::_ReservedShelf3()
       BShelf::_ReservedShelf4()
       BShelf::_ReservedShelf5()
       BShelf::_ReservedShelf6()
       BShelf::_ReservedShelf7()
       BShelf::_ReservedShelf8()
       BShelf::~BShelf()
       BShelf::~BShelf()
       BShelf::~BShelf()
       BShelf::AddReplicant(BMessage*, BPoint)
       BShelf::AdjustReplicantBy(BRect, BMessage*) const
       BShelf::AllowsDragging() const
       BShelf::AllowsZombies() const
       BShelf::Archive(BMessage*, bool) const
       BShelf::BShelf(BDataIO*, BView*, bool, char const*)
       BShelf::BShelf(BDataIO*, BView*, bool, char const*)
       BShelf::BShelf(BMessage*)
       BShelf::BShelf(BMessage*)
       BShelf::BShelf(BShelf const&)
       BShelf::BShelf(BShelf const&)
       BShelf::BShelf(BView*, bool, char const*)
       BShelf::BShelf(BView*, bool, char const*)
       BShelf::BShelf(entry_ref const*, BView*, bool, char const*)
       BShelf::BShelf(entry_ref const*, BView*, bool, char const*)
       BShelf::CanAcceptReplicantMessage(BMessage*) const
       BShelf::CanAcceptReplicantView(BRect, BView*, BMessage*) const
       BShelf::CountReplicants() const
       BShelf::DeleteReplicant(BMessage*)
       BShelf::DeleteReplicant(BView*)
       BShelf::DeleteReplicant(int)
       BShelf::DisplaysZombies() const
       BShelf::GetSupportedSuites(BMessage*)
       BShelf::IndexOf(BMessage const*) const
       BShelf::IndexOf(BView const*) const
       BShelf::IndexOf(unsigned int) const
       BShelf::Instantiate(BMessage*)
       BShelf::IsDirty() const
       BShelf::IsTypeEnforced() const
       BShelf::MessageReceived(BMessage*)
       BShelf::operator=(BShelf const&)
       BShelf::Perform(unsigned int, void*)
       BShelf::ReplicantAt(int, BView**, unsigned int*, int*) const
       BShelf::ReplicantDeleted(int, BMessage const*, BView const*)
       BShelf::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BShelf::Save()
       BShelf::SaveLocation(entry_ref*) const
       BShelf::SetAllowsDragging(bool)
       BShelf::SetAllowsZombies(bool)
       BShelf::SetDirty(bool)
       BShelf::SetDisplaysZombies(bool)
       BShelf::SetSaveLocation(BDataIO*)
       BShelf::SetSaveLocation(entry_ref const*)
       BShelf::SetTypeEnforced(bool)
       BSlider::_ConstrainPoint(BPoint&, BPoint) const
       BSlider::_DrawBlockThumb()
       BSlider::_DrawTriangleThumb()
       BSlider::_InitBarColor()
       BSlider::_InitObject()
       BSlider::_Location() const
       BSlider::_MaxPosition() const
       BSlider::_MinPosition() const
       BSlider::_ReservedSlider10()
       BSlider::_ReservedSlider11()
       BSlider::_ReservedSlider12()
       BSlider::_ReservedSlider6()
       BSlider::_ReservedSlider7()
       BSlider::_ReservedSlider8()
       BSlider::_ReservedSlider9()
       BSlider::_SetLocationForValue(int)
       BSlider::_ValidateMinSize()
       BSlider::~BSlider()
       BSlider::~BSlider()
       BSlider::~BSlider()
       BSlider::AllAttached()
       BSlider::AllDetached()
       BSlider::Archive(BMessage*, bool) const
       BSlider::AttachedToWindow()
       BSlider::BarColor() const
       BSlider::BarFrame() const
       BSlider::BarThickness() const
       BSlider::BSlider(BMessage*)
       BSlider::BSlider(BMessage*)
       BSlider::BSlider(BRect, char const*, char const*, BMessage*, int, int, orientation, thumb_style, unsigned int, unsigned int)
       BSlider::BSlider(BRect, char const*, char const*, BMessage*, int, int, orientation, thumb_style, unsigned int, unsigned int)
       BSlider::BSlider(BRect, char const*, char const*, BMessage*, int, int, thumb_style, unsigned int, unsigned int)
       BSlider::BSlider(BRect, char const*, char const*, BMessage*, int, int, thumb_style, unsigned int, unsigned int)
       BSlider::BSlider(char const*, char const*, BMessage*, int, int, orientation, thumb_style, unsigned int)
       BSlider::BSlider(char const*, char const*, BMessage*, int, int, orientation, thumb_style, unsigned int)
       BSlider::DetachedFromWindow()
       BSlider::Draw(BRect)
       BSlider::DrawBar()
       BSlider::DrawFocusMark()
       BSlider::DrawHashMarks()
       BSlider::DrawSlider()
       BSlider::DrawText()
       BSlider::DrawThumb()
       BSlider::FillColor(rgb_color*) const
       BSlider::FrameMoved(BPoint)
       BSlider::FrameResized(float, float)
       BSlider::GetLimits(int*, int*) const
       BSlider::GetPreferredSize(float*, float*)
       BSlider::GetSupportedSuites(BMessage*)
       BSlider::HashMarkCount() const
       BSlider::HashMarks() const
       BSlider::HashMarksFrame() const
       BSlider::Instantiate(BMessage*)
       BSlider::InvalidateLayout(bool)
       BSlider::Invoke(BMessage*)
       BSlider::KeyDown(char const*, int)
       BSlider::KeyIncrementValue() const
       BSlider::KeyUp(char const*, int)
       BSlider::LayoutInvalidated(bool)
       BSlider::MaxLimitLabel() const
       BSlider::MaxSize()
       BSlider::MaxUpdateTextWidth()
       BSlider::MessageReceived(BMessage*)
       BSlider::MinLimitLabel() const
       BSlider::MinSize()
       BSlider::ModificationMessage() const
       BSlider::MouseDown(BPoint)
       BSlider::MouseMoved(BPoint, unsigned int, BMessage const*)
       BSlider::MouseUp(BPoint)
       BSlider::OffscreenView() const
       BSlider::operator=(BSlider const&)
       BSlider::Orientation() const
       BSlider::Perform(unsigned int, void*)
       BSlider::Position() const
       BSlider::PreferredSize()
       BSlider::Pulse()
       BSlider::ResizeToPreferred()
       BSlider::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BSlider::SetBarColor(rgb_color)
       BSlider::SetBarThickness(float)
       BSlider::SetEnabled(bool)
       BSlider::SetFlags(unsigned int)
       BSlider::SetFont(BFont const*, unsigned int)
       BSlider::SetHashMarkCount(int)
       BSlider::SetHashMarks(hash_mark_location)
       BSlider::SetIcon(BBitmap const*, unsigned int)
       BSlider::SetKeyIncrementValue(int)
       BSlider::SetLabel(char const*)
       BSlider::SetLimitLabels(char const*, char const*)
       BSlider::SetLimits(int, int)
       BSlider::SetModificationMessage(BMessage*)
       BSlider::SetOrientation(orientation)
       BSlider::SetPosition(float)
       BSlider::SetResizingMode(unsigned int)
       BSlider::SetSnoozeAmount(int)
       BSlider::SetStyle(thumb_style)
       BSlider::SetValue(int)
       BSlider::SnoozeAmount() const
       BSlider::Style() const
       BSlider::ThumbFrame() const
       BSlider::UpdateText() const
       BSlider::UpdateTextChanged()
       BSlider::UseFillColor(bool, rgb_color const*)
       BSlider::ValueForPoint(BPoint) const
       BSlider::WindowActivated(bool)
       BSpaceLayoutItem::_ReservedSpaceLayoutItem1()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem10()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem2()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem3()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem4()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem5()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem6()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem7()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem8()
       BSpaceLayoutItem::_ReservedSpaceLayoutItem9()
       BSpaceLayoutItem::~BSpaceLayoutItem()
       BSpaceLayoutItem::~BSpaceLayoutItem()
       BSpaceLayoutItem::~BSpaceLayoutItem()
       BSpaceLayoutItem::Alignment()
       BSpaceLayoutItem::Archive(BMessage*, bool) const
       BSpaceLayoutItem::BSpaceLayoutItem(BMessage*)
       BSpaceLayoutItem::BSpaceLayoutItem(BMessage*)
       BSpaceLayoutItem::BSpaceLayoutItem(BSize, BSize, BSize, BAlignment)
       BSpaceLayoutItem::BSpaceLayoutItem(BSize, BSize, BSize, BAlignment)
       BSpaceLayoutItem::CreateGlue()
       BSpaceLayoutItem::CreateHorizontalStrut(float)
       BSpaceLayoutItem::CreateVerticalStrut(float)
       BSpaceLayoutItem::Frame()
       BSpaceLayoutItem::Instantiate(BMessage*)
       BSpaceLayoutItem::IsVisible()
       BSpaceLayoutItem::MaxSize()
       BSpaceLayoutItem::MinSize()
       BSpaceLayoutItem::PreferredSize()
       BSpaceLayoutItem::SetExplicitAlignment(BAlignment)
       BSpaceLayoutItem::SetExplicitMaxSize(BSize)
       BSpaceLayoutItem::SetExplicitMinSize(BSize)
       BSpaceLayoutItem::SetExplicitPreferredSize(BSize)
       BSpaceLayoutItem::SetFrame(BRect)
       BSpaceLayoutItem::SetVisible(bool)
       BSpinner::_InitObject()
       BSpinner::_ReservedSpinner1()
       BSpinner::_ReservedSpinner10()
       BSpinner::_ReservedSpinner11()
       BSpinner::_ReservedSpinner12()
       BSpinner::_ReservedSpinner13()
       BSpinner::_ReservedSpinner14()
       BSpinner::_ReservedSpinner15()
       BSpinner::_ReservedSpinner16()
       BSpinner::_ReservedSpinner17()
       BSpinner::_ReservedSpinner18()
       BSpinner::_ReservedSpinner19()
       BSpinner::_ReservedSpinner2()
       BSpinner::_ReservedSpinner20()
       BSpinner::_ReservedSpinner3()
       BSpinner::_ReservedSpinner4()
       BSpinner::_ReservedSpinner5()
       BSpinner::_ReservedSpinner6()
       BSpinner::_ReservedSpinner7()
       BSpinner::_ReservedSpinner8()
       BSpinner::_ReservedSpinner9()
       BSpinner::~BSpinner()
       BSpinner::~BSpinner()
       BSpinner::~BSpinner()
       BSpinner::Archive(BMessage*, bool) const
       BSpinner::AttachedToWindow()
       BSpinner::BSpinner(BMessage*)
       BSpinner::BSpinner(BMessage*)
       BSpinner::BSpinner(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BSpinner::BSpinner(BRect, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BSpinner::BSpinner(char const*, char const*, BMessage*, unsigned int)
       BSpinner::BSpinner(char const*, char const*, BMessage*, unsigned int)
       BSpinner::Decrement()
       BSpinner::GetSupportedSuites(BMessage*)
       BSpinner::Increment()
       BSpinner::Instantiate(BMessage*)
       BSpinner::Range(int*, int*)
       BSpinner::SetEnabled(bool)
       BSpinner::SetMaxValue(int)
       BSpinner::SetMinValue(int)
       BSpinner::SetRange(int, int)
       BSpinner::SetValue(int)
       BSpinner::SetValueFromText()
       BSplitLayout::_AddInsets(BSize)
       BSplitLayout::_AddInsets(float*, float*, float*)
       BSplitLayout::_GetSplitterValueRange(int, BSplitLayout::ValueRange&)
       BSplitLayout::_InternalGetHeightForWidth(float, bool, float*, float*, float*)
       BSplitLayout::_InvalidateCachedHeightForWidth()
       BSplitLayout::_ItemLayoutInfo(BLayoutItem*) const
       BSplitLayout::_LayoutItem(BLayoutItem*, BRect, bool)
       BSplitLayout::_LayoutItem(BLayoutItem*, BSplitLayout::ItemLayoutInfo*)
       BSplitLayout::_SetSplitterValue(int, int)
       BSplitLayout::_SplitterItemAt(BPoint const&, int*) const
       BSplitLayout::_SplitterItemAt(int) const
       BSplitLayout::_SplitterSpace() const
       BSplitLayout::_SplitterValue(int) const
       BSplitLayout::_SubtractInsets(BSize)
       BSplitLayout::_UpdateSplitterWeights()
       BSplitLayout::_ValidateMinMax()
       BSplitLayout::~BSplitLayout()
       BSplitLayout::~BSplitLayout()
       BSplitLayout::~BSplitLayout()
       BSplitLayout::AddItem(BLayoutItem*, float)
       BSplitLayout::AddItem(BLayoutItem*)
       BSplitLayout::AddItem(int, BLayoutItem*, float)
       BSplitLayout::AddItem(int, BLayoutItem*)
       BSplitLayout::AddView(BView*, float)
       BSplitLayout::AddView(BView*)
       BSplitLayout::AddView(int, BView*, float)
       BSplitLayout::AddView(int, BView*)
       BSplitLayout::Archive(BMessage*, bool) const
       BSplitLayout::BaseAlignment()
       BSplitLayout::BaseMaxSize()
       BSplitLayout::BaseMinSize()
       BSplitLayout::BasePreferredSize()
       BSplitLayout::BSplitLayout(BMessage*)
       BSplitLayout::BSplitLayout(BMessage*)
       BSplitLayout::BSplitLayout(orientation, float)
       BSplitLayout::BSplitLayout(orientation, float)
       BSplitLayout::DoLayout()
       BSplitLayout::DraggedSplitter() const
       BSplitLayout::DragSplitter(BPoint)
       BSplitLayout::GetHeightForWidth(float, float*, float*, float*)
       BSplitLayout::GetInsets(float*, float*, float*, float*) const
       BSplitLayout::HasHeightForWidth()
       BSplitLayout::Instantiate(BMessage*)
       BSplitLayout::IsAboveSplitter(BPoint const&) const
       BSplitLayout::IsCollapsible(int) const
       BSplitLayout::IsItemCollapsed(int) const
       BSplitLayout::ItemAdded(BLayoutItem*, int)
       BSplitLayout::ItemArchived(BMessage*, BLayoutItem*, int) const
       BSplitLayout::ItemRemoved(BLayoutItem*, int)
       BSplitLayout::ItemUnarchived(BMessage const*, BLayoutItem*, int)
       BSplitLayout::ItemWeight(BLayoutItem*) const
       BSplitLayout::ItemWeight(int) const
       BSplitLayout::LayoutInvalidated(bool)
       BSplitLayout::Orientation() const
       BSplitLayout::SetCollapsible(bool)
       BSplitLayout::SetCollapsible(int, bool)
       BSplitLayout::SetCollapsible(int, int, bool)
       BSplitLayout::SetInsets(float, float, float, float)
       BSplitLayout::SetItemCollapsed(int, bool)
       BSplitLayout::SetItemWeight(BLayoutItem*, float)
       BSplitLayout::SetItemWeight(int, float, bool)
       BSplitLayout::SetOrientation(orientation)
       BSplitLayout::SetSpacing(float)
       BSplitLayout::SetSplitterSize(float)
       BSplitLayout::Spacing() const
       BSplitLayout::SplitterItemFrame(int) const
       BSplitLayout::SplitterSize() const
       BSplitLayout::StartDraggingSplitter(BPoint)
       BSplitLayout::StopDraggingSplitter()
       BSplitLayoutBuilder::Add(BLayoutItem*, float)
       BSplitLayoutBuilder::Add(BLayoutItem*)
       BSplitLayoutBuilder::Add(BView*, float)
       BSplitLayoutBuilder::Add(BView*)
       BSplitLayoutBuilder::BSplitLayoutBuilder(BSplitView*)
       BSplitLayoutBuilder::BSplitLayoutBuilder(BSplitView*)
       BSplitLayoutBuilder::BSplitLayoutBuilder(orientation, float)
       BSplitLayoutBuilder::BSplitLayoutBuilder(orientation, float)
       BSplitLayoutBuilder::GetSplitView(BSplitView**)
       BSplitLayoutBuilder::operator BSplitView*()
       BSplitLayoutBuilder::SetCollapsible(bool)
       BSplitLayoutBuilder::SetInsets(float, float, float, float)
       BSplitLayoutBuilder::SplitView() const
       BSplitView::_DrawDefaultSplitter(BView*, BRect, BRect const&, orientation, bool)
       BSplitView::_ReservedSplitView1()
       BSplitView::_ReservedSplitView10()
       BSplitView::_ReservedSplitView2()
       BSplitView::_ReservedSplitView3()
       BSplitView::_ReservedSplitView4()
       BSplitView::_ReservedSplitView5()
       BSplitView::_ReservedSplitView6()
       BSplitView::_ReservedSplitView7()
       BSplitView::_ReservedSplitView8()
       BSplitView::_ReservedSplitView9()
       BSplitView::~BSplitView()
       BSplitView::~BSplitView()
       BSplitView::~BSplitView()
       BSplitView::AddChild(BLayoutItem*, float)
       BSplitView::AddChild(BLayoutItem*)
       BSplitView::AddChild(BView*, BView*)
       BSplitView::AddChild(BView*, float)
       BSplitView::AddChild(int, BLayoutItem*, float)
       BSplitView::AddChild(int, BView*, float)
       BSplitView::AllArchived(BMessage*) const
       BSplitView::AllUnarchived(BMessage const*)
       BSplitView::Archive(BMessage*, bool) const
       BSplitView::AttachedToWindow()
       BSplitView::BSplitView(BMessage*)
       BSplitView::BSplitView(BMessage*)
       BSplitView::BSplitView(orientation, float)
       BSplitView::BSplitView(orientation, float)
       BSplitView::CountItems() const
       BSplitView::Draw(BRect)
       BSplitView::DrawAfterChildren(BRect)
       BSplitView::DrawSplitter(BRect, BRect const&, orientation, bool)
       BSplitView::GetInsets(float*, float*, float*, float*) const
       BSplitView::Instantiate(BMessage*)
       BSplitView::IsCollapsible(int) const
       BSplitView::IsItemCollapsed(int) const
       BSplitView::ItemWeight(BLayoutItem*) const
       BSplitView::ItemWeight(int) const
       BSplitView::MessageReceived(BMessage*)
       BSplitView::MouseDown(BPoint)
       BSplitView::MouseMoved(BPoint, unsigned int, BMessage const*)
       BSplitView::MouseUp(BPoint)
       BSplitView::Orientation() const
       BSplitView::Perform(unsigned int, void*)
       BSplitView::SetCollapsible(bool)
       BSplitView::SetCollapsible(int, bool)
       BSplitView::SetCollapsible(int, int, bool)
       BSplitView::SetInsets(float, float, float, float)
       BSplitView::SetInsets(float, float)
       BSplitView::SetInsets(float)
       BSplitView::SetItemCollapsed(int, bool)
       BSplitView::SetItemWeight(BLayoutItem*, float)
       BSplitView::SetItemWeight(int, float, bool)
       BSplitView::SetLayout(BLayout*)
       BSplitView::SetOrientation(orientation)
       BSplitView::SetSpacing(float)
       BSplitView::SetSplitterSize(float)
       BSplitView::Spacing() const
       BSplitView::SplitterSize() const
       BStatable::_OhSoStatable1()
       BStatable::_OhSoStatable2()
       BStatable::_OhSoStatable3()
       BStatable::~BStatable()
       BStatable::~BStatable()
       BStatable::~BStatable()
       BStatable::GetAccessTime(long*) const
       BStatable::GetCreationTime(long*) const
       BStatable::GetGroup(unsigned int*) const
       BStatable::GetModificationTime(long*) const
       BStatable::GetNodeRef(node_ref*) const
       BStatable::GetOwner(unsigned int*) const
       BStatable::GetPermissions(unsigned int*) const
       BStatable::GetSize(long*) const
       BStatable::GetVolume(BVolume*) const
       BStatable::IsDirectory() const
       BStatable::IsFile() const
       BStatable::IsSymLink() const
       BStatable::SetAccessTime(long)
       BStatable::SetCreationTime(long)
       BStatable::SetGroup(unsigned int)
       BStatable::SetModificationTime(long)
       BStatable::SetOwner(unsigned int)
       BStatable::SetPermissions(unsigned int)
       BStatusBar::_BarFrame(font_height const*) const
       BStatusBar::_BarPosition(BRect const&) const
       BStatusBar::_HasText() const
       BStatusBar::_InitObject()
       BStatusBar::_ReservedStatusBar2()
       BStatusBar::_ReservedStatusBar3()
       BStatusBar::_ReservedStatusBar4()
       BStatusBar::_SetTextData(BString&, char const*, BString const&, bool)
       BStatusBar::~BStatusBar()
       BStatusBar::~BStatusBar()
       BStatusBar::~BStatusBar()
       BStatusBar::AllAttached()
       BStatusBar::AllDetached()
       BStatusBar::Archive(BMessage*, bool) const
       BStatusBar::AttachedToWindow()
       BStatusBar::BarColor() const
       BStatusBar::BarHeight() const
       BStatusBar::BStatusBar(BMessage*)
       BStatusBar::BStatusBar(BMessage*)
       BStatusBar::BStatusBar(BRect, char const*, char const*, char const*)
       BStatusBar::BStatusBar(BRect, char const*, char const*, char const*)
       BStatusBar::BStatusBar(char const*, char const*, char const*)
       BStatusBar::BStatusBar(char const*, char const*, char const*)
       BStatusBar::CurrentValue() const
       BStatusBar::DetachedFromWindow()
       BStatusBar::Draw(BRect)
       BStatusBar::FrameMoved(BPoint)
       BStatusBar::FrameResized(float, float)
       BStatusBar::GetPreferredSize(float*, float*)
       BStatusBar::GetSupportedSuites(BMessage*)
       BStatusBar::Instantiate(BMessage*)
       BStatusBar::Label() const
       BStatusBar::MakeFocus(bool)
       BStatusBar::MaxSize()
       BStatusBar::MaxValue() const
       BStatusBar::MessageReceived(BMessage*)
       BStatusBar::MinSize()
       BStatusBar::MouseDown(BPoint)
       BStatusBar::MouseMoved(BPoint, unsigned int, BMessage const*)
       BStatusBar::MouseUp(BPoint)
       BStatusBar::operator=(BStatusBar const&)
       BStatusBar::Perform(unsigned int, void*)
       BStatusBar::PreferredSize()
       BStatusBar::Reset(char const*, char const*)
       BStatusBar::ResizeToPreferred()
       BStatusBar::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BStatusBar::SetBarColor(rgb_color)
       BStatusBar::SetBarHeight(float)
       BStatusBar::SetMaxValue(float)
       BStatusBar::SetText(char const*)
       BStatusBar::SetTo(float, char const*, char const*)
       BStatusBar::SetTrailingText(char const*)
       BStatusBar::Text() const
       BStatusBar::TrailingLabel() const
       BStatusBar::TrailingText() const
       BStatusBar::Update(float, char const*, char const*)
       BStatusBar::WindowActivated(bool)
       BStopWatch::_ReservedStopWatch1()
       BStopWatch::_ReservedStopWatch2()
       BStopWatch::~BStopWatch()
       BStopWatch::~BStopWatch()
       BStopWatch::~BStopWatch()
       BStopWatch::BStopWatch(char const*, bool)
       BStopWatch::BStopWatch(char const*, bool)
       BStopWatch::ElapsedTime() const
       BStopWatch::Lap()
       BStopWatch::Name() const
       BStopWatch::Reset()
       BStopWatch::Resume()
       BStopWatch::Suspend()
       BString::_Allocate(int)
       BString::_Clone(char const*, int)
       BString::_DoAppend(char const*, int)
       BString::_DoCharacterDeescape(char const*, char)
       BString::_DoCharacterEscape(char const*, char const*, char)
       BString::_DoInsert(char const*, int, int)
       BString::_DoPrepend(char const*, int)
       BString::_DoReplace(char const*, char const*, int, int, bool)
       BString::_FindAfter(char const*, int, int) const
       BString::_FindBefore(char const*, int, int) const
       BString::_FreePrivateData()
       BString::_IFindAfter(char const*, int, int) const
       BString::_IFindBefore(char const*, int, int) const
       BString::_Init(char const*, int)
       BString::_MakeWritable()
       BString::_MakeWritable(int, bool)
       BString::_OpenAtBy(int, int)
       BString::_ReleasePrivateData()
       BString::_ReplaceAtPositions(BString::PosVect const*, int, char const*, int)
       BString::_Resize(int)
       BString::_SetLength(int)
       BString::_ShortFindAfter(char const*, int) const
       BString::_ShrinkAtBy(int, int)
       BString::~BString()
       BString::~BString()
       BString::Adopt(BString&, int)
       BString::Adopt(BString&)
       BString::AdoptChars(BString&, int)
       BString::Append(BString const&, int)
       BString::Append(char const*, int)
       BString::Append(char, int)
       BString::AppendChars(BString const&, int)
       BString::AppendChars(char const*, int)
       BString::BString()
       BString::BString()
       BString::BString(BString const&)
       BString::BString(BString const&)
       BString::BString(BString&&)
       BString::BString(BString&&)
       BString::BString(char const*, int)
       BString::BString(char const*, int)
       BString::BString(char const*)
       BString::BString(char const*)
       BString::BString(char*, BString::PrivateDataTag)
       BString::BString(char*, BString::PrivateDataTag)
       BString::Capitalize()
       BString::CapitalizeEachWord()
       BString::CharacterDeescape(char const*, char)
       BString::CharacterDeescape(char)
       BString::CharacterEscape(char const*, char const*, char)
       BString::CharacterEscape(char const*, char)
       BString::CharAt(int, char*, int*) const
       BString::CharAt(int, int*) const
       BString::Compare(BString const&, int) const
       BString::Compare(BString const&) const
       BString::Compare(char const*, int) const
       BString::Compare(char const*) const
       BString::CompareAt(unsigned long, BString const&, int) const
       BString::CompareChars(BString const&, int) const
       BString::CompareChars(char const*, int) const
       BString::CopyCharsInto(BString&, int, int) const
       BString::CopyCharsInto(char*, int*, int, int) const
       BString::CopyInto(BString&, int, int) const
       BString::CopyInto(char*, int, int) const
       BString::CountBytes(int, int) const
       BString::CountChars() const
       BString::EndsWith(BString const&) const
       BString::EndsWith(char const*, int) const
       BString::EndsWith(char const*) const
       BString::FindFirst(BString const&, int) const
       BString::FindFirst(BString const&) const
       BString::FindFirst(char const*, int) const
       BString::FindFirst(char const*) const
       BString::FindFirst(char, int) const
       BString::FindFirst(char) const
       BString::FindFirstChars(BString const&, int) const
       BString::FindFirstChars(char const*, int) const
       BString::FindLast(BString const&, int) const
       BString::FindLast(BString const&) const
       BString::FindLast(char const*, int) const
       BString::FindLast(char const*) const
       BString::FindLast(char, int) const
       BString::FindLast(char) const
       BString::FindLastChars(BString const&, int) const
       BString::FindLastChars(char const*, int) const
       BString::HashValue(char const*)
       BString::ICompare(BString const&, int) const
       BString::ICompare(BString const&) const
       BString::ICompare(char const*, int) const
       BString::ICompare(char const*) const
       BString::IEndsWith(BString const&) const
       BString::IEndsWith(char const*, int) const
       BString::IEndsWith(char const*) const
       BString::IFindFirst(BString const&, int) const
       BString::IFindFirst(BString const&) const
       BString::IFindFirst(char const*, int) const
       BString::IFindFirst(char const*) const
       BString::IFindLast(BString const&, int) const
       BString::IFindLast(BString const&) const
       BString::IFindLast(char const*, int) const
       BString::IFindLast(char const*) const
       BString::Insert(BString const&, int, int, int)
       BString::Insert(BString const&, int, int)
       BString::Insert(BString const&, int)
       BString::Insert(char const*, int, int, int)
       BString::Insert(char const*, int, int)
       BString::Insert(char const*, int)
       BString::Insert(char, int, int)
       BString::InsertChars(BString const&, int, int, int)
       BString::InsertChars(BString const&, int, int)
       BString::InsertChars(BString const&, int)
       BString::InsertChars(char const*, int, int, int)
       BString::InsertChars(char const*, int, int)
       BString::InsertChars(char const*, int)
       BString::IReplace(char const*, char const*, int, int)
       BString::IReplace(char, char, int, int)
       BString::IReplaceAll(char const*, char const*, int)
       BString::IReplaceAll(char, char, int)
       BString::IReplaceFirst(char const*, char const*)
       BString::IReplaceFirst(char, char)
       BString::IReplaceLast(char const*, char const*)
       BString::IReplaceLast(char, char)
       BString::IStartsWith(BString const&) const
       BString::IStartsWith(char const*, int) const
       BString::IStartsWith(char const*) const
       BString::LockBuffer(int)
       BString::MoveCharsInto(BString&, int, int)
       BString::MoveCharsInto(char*, int*, int, int)
       BString::MoveInto(BString&, int, int)
       BString::MoveInto(char*, int, int)
       BString::operator[](int)
       BString::operator+=(char const*)
       BString::operator+=(char)
       BString::operator<(char const*) const
       BString::operator<<(bool)
       BString::operator<<(BString const&)
       BString::operator<<(char const*)
       BString::operator<<(char)
       BString::operator<<(double)
       BString::operator<<(float)
       BString::operator<<(int)
       BString::operator<<(long long)
       BString::operator<<(long)
       BString::operator<<(unsigned int)
       BString::operator<<(unsigned long long)
       BString::operator<<(unsigned long)
       BString::operator<=(char const*) const
       BString::operator=(BString const&)
       BString::operator=(BString&&)
       BString::operator=(char const*)
       BString::operator=(char)
       BString::operator==(char const*) const
       BString::operator>(char const*) const
       BString::operator>=(char const*) const
       BString::Prepend(BString const&, int)
       BString::Prepend(BString const&)
       BString::Prepend(char const*, int)
       BString::Prepend(char const*)
       BString::Prepend(char, int)
       BString::PrependChars(BString const&, int)
       BString::PrependChars(char const*, int)
       BString::Remove(int, int)
       BString::RemoveAll(BString const&)
       BString::RemoveAll(char const*)
       BString::RemoveChars(int, int)
       BString::RemoveCharsSet(char const*)
       BString::RemoveFirst(BString const&)
       BString::RemoveFirst(char const*)
       BString::RemoveLast(BString const&)
       BString::RemoveLast(char const*)
       BString::RemoveSet(char const*)
       BString::Replace(char const*, char const*, int, int)
       BString::Replace(char, char, int, int)
       BString::ReplaceAll(char const*, char const*, int)
       BString::ReplaceAll(char, char, int)
       BString::ReplaceAllChars(char const*, char const*, int)
       BString::ReplaceChars(char const*, char const*, int, int)
       BString::ReplaceCharsSet(char const*, char const*)
       BString::ReplaceFirst(char const*, char const*)
       BString::ReplaceFirst(char, char)
       BString::ReplaceLast(char const*, char const*)
       BString::ReplaceLast(char, char)
       BString::ReplaceSet(char const*, char const*)
       BString::ReplaceSet(char const*, char)
       BString::ScanWithFormat(char const*, ...)
       BString::ScanWithFormatVarArgs(char const*, __va_list_tag*)
       BString::SetByteAt(int, char)
       BString::SetTo(BString const&, int)
       BString::SetTo(BString const&)
       BString::SetTo(char const*, int)
       BString::SetTo(char, int)
       BString::SetToChars(BString const&, int)
       BString::SetToChars(char const*, int)
       BString::SetToFormat(char const*, ...)
       BString::SetToFormatVarArgs(char const*, __va_list_tag*)
       BString::Split(char const*, bool, BStringList&) const
       BString::StartsWith(BString const&) const
       BString::StartsWith(char const*, int) const
       BString::StartsWith(char const*) const
       BString::ToLower()
       BString::ToUpper()
       BString::Trim()
       BString::Truncate(int, bool)
       BString::TruncateChars(int, bool)
       BString::UnlockBuffer(int)
       BStringFormat::_Initialize(icu_66::UnicodeString const&)
       BStringFormat::~BStringFormat()
       BStringFormat::~BStringFormat()
       BStringFormat::~BStringFormat()
       BStringFormat::BStringFormat(BLanguage const&, BString)
       BStringFormat::BStringFormat(BLanguage const&, BString)
       BStringFormat::BStringFormat(BString)
       BStringFormat::BStringFormat(BString)
       BStringFormat::Format(BString&, long) const
       BStringFormat::InitCheck()
       BStringItem::_ReservedStringItem1()
       BStringItem::_ReservedStringItem2()
       BStringItem::~BStringItem()
       BStringItem::~BStringItem()
       BStringItem::~BStringItem()
       BStringItem::Archive(BMessage*, bool) const
       BStringItem::BaselineOffset() const
       BStringItem::BStringItem(BMessage*)
       BStringItem::BStringItem(BMessage*)
       BStringItem::BStringItem(BStringItem const&)
       BStringItem::BStringItem(BStringItem const&)
       BStringItem::BStringItem(char const*, unsigned int, bool)
       BStringItem::BStringItem(char const*, unsigned int, bool)
       BStringItem::DrawItem(BView*, BRect, bool)
       BStringItem::Instantiate(BMessage*)
       BStringItem::operator=(BStringItem const&)
       BStringItem::Perform(unsigned int, void*)
       BStringItem::SetText(char const*)
       BStringItem::Text() const
       BStringItem::Update(BView*, BFont const*)
       BStringList::_DecrementRefCounts() const
       BStringList::_IncrementRefCounts() const
       BStringList::_Join(char const*, int) const
       BStringList::~BStringList()
       BStringList::~BStringList()
       BStringList::~BStringList()
       BStringList::Add(BString const&, int)
       BStringList::Add(BString const&)
       BStringList::Add(BStringList const&, int)
       BStringList::Add(BStringList const&)
       BStringList::AllowsTypeCode(unsigned int) const
       BStringList::BStringList(BStringList const&)
       BStringList::BStringList(BStringList const&)
       BStringList::BStringList(int)
       BStringList::BStringList(int)
       BStringList::CountStrings() const
       BStringList::DoForEach(bool (*)(BString const&, void*), void*)
       BStringList::DoForEach(bool (*)(BString const&))
       BStringList::First() const
       BStringList::Flatten(void*, long) const
       BStringList::FlattenedSize() const
       BStringList::IndexOf(BString const&, bool) const
       BStringList::IsEmpty() const
       BStringList::IsFixedSize() const
       BStringList::Join(char const*, int) const
       BStringList::Last() const
       BStringList::MakeEmpty()
       BStringList::Move(int, int)
       BStringList::operator=(BStringList const&)
       BStringList::operator==(BStringList const&) const
       BStringList::Remove(BString const&, bool)
       BStringList::Remove(BStringList const&, bool)
       BStringList::Remove(int, int)
       BStringList::Remove(int)
       BStringList::Replace(int, BString const&)
       BStringList::Sort(bool)
       BStringList::StringAt(int) const
       BStringList::Swap(int, int)
       BStringList::TypeCode() const
       BStringList::Unflatten(unsigned int, void const*, long)
       BStringRef::BStringRef(BString&, int)
       BStringRef::BStringRef(BString&, int)
       BStringRef::operator char() const
       BStringRef::operator&()
       BStringRef::operator&() const
       BStringRef::operator=(BStringRef const&)
       BStringRef::operator=(char)
       BStringView::_ReservedStringView1()
       BStringView::_ReservedStringView2()
       BStringView::_ReservedStringView3()
       BStringView::_StringWidth(char const*)
       BStringView::_ValidatePreferredSize()
       BStringView::~BStringView()
       BStringView::~BStringView()
       BStringView::~BStringView()
       BStringView::Alignment() const
       BStringView::AllAttached()
       BStringView::AllDetached()
       BStringView::Archive(BMessage*, bool) const
       BStringView::AttachedToWindow()
       BStringView::BStringView(BMessage*)
       BStringView::BStringView(BMessage*)
       BStringView::BStringView(BRect, char const*, char const*, unsigned int, unsigned int)
       BStringView::BStringView(BRect, char const*, char const*, unsigned int, unsigned int)
       BStringView::BStringView(char const*, char const*, unsigned int)
       BStringView::BStringView(char const*, char const*, unsigned int)
       BStringView::DetachedFromWindow()
       BStringView::Draw(BRect)
       BStringView::FrameMoved(BPoint)
       BStringView::FrameResized(float, float)
       BStringView::GetPreferredSize(float*, float*)
       BStringView::GetSupportedSuites(BMessage*)
       BStringView::Instantiate(BMessage*)
       BStringView::InvalidateLayout(bool)
       BStringView::LayoutAlignment()
       BStringView::LayoutInvalidated(bool)
       BStringView::MakeFocus(bool)
       BStringView::MaxSize()
       BStringView::MessageReceived(BMessage*)
       BStringView::MinSize()
       BStringView::MouseDown(BPoint)
       BStringView::MouseMoved(BPoint, unsigned int, BMessage const*)
       BStringView::MouseUp(BPoint)
       BStringView::operator=(BStringView const&)
       BStringView::Perform(unsigned int, void*)
       BStringView::PreferredSize()
       BStringView::ResizeToPreferred()
       BStringView::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BStringView::SetAlignment(alignment)
       BStringView::SetFont(BFont const*, unsigned int)
       BStringView::SetText(char const*)
       BStringView::SetTruncation(unsigned int)
       BStringView::Text() const
       BStringView::Truncation() const
       BSupportKit::BJob::_ClearTicketNumber()
       BSupportKit::BJob::_SetTicketNumber(unsigned int)
       BSupportKit::BJob::~BJob()
       BSupportKit::BJob::~BJob()
       BSupportKit::BJob::~BJob()
       BSupportKit::BJob::AddDependency(BSupportKit::BJob*)
       BSupportKit::BJob::AddStateListener(BSupportKit::BJobStateListener*)
       BSupportKit::BJob::BJob(BString const&)
       BSupportKit::BJob::BJob(BString const&)
       BSupportKit::BJob::Cleanup(int)
       BSupportKit::BJob::CountDependencies() const
       BSupportKit::BJob::DependantJobAt(int) const
       BSupportKit::BJob::ErrorString() const
       BSupportKit::BJob::InitCheck() const
       BSupportKit::BJob::IsRunnable() const
       BSupportKit::BJob::NotifyStateListeners()
       BSupportKit::BJob::RemoveDependency(BSupportKit::BJob*)
       BSupportKit::BJob::RemoveStateListener(BSupportKit::BJobStateListener*)
       BSupportKit::BJob::Result() const
       BSupportKit::BJob::Run()
       BSupportKit::BJob::SetErrorString(BString const&)
       BSupportKit::BJob::SetState(BSupportKit::BJobState)
       BSupportKit::BJob::State() const
       BSupportKit::BJob::TicketNumber() const
       BSupportKit::BJob::Title() const
       BSupportKit::BJobStateListener::~BJobStateListener()
       BSupportKit::BJobStateListener::~BJobStateListener()
       BSupportKit::BJobStateListener::~BJobStateListener()
       BSupportKit::BJobStateListener::JobAborted(BSupportKit::BJob*)
       BSupportKit::BJobStateListener::JobFailed(BSupportKit::BJob*)
       BSupportKit::BJobStateListener::JobProgress(BSupportKit::BJob*)
       BSupportKit::BJobStateListener::JobStarted(BSupportKit::BJob*)
       BSupportKit::BJobStateListener::JobSucceeded(BSupportKit::BJob*)
       BSupportKit::BPrivate::JobQueue::_Init()
       BSupportKit::BPrivate::JobQueue::_RemoveDependantJobsOf(BSupportKit::BJob*)
       BSupportKit::BPrivate::JobQueue::_RequeueDependantJobsOf(BSupportKit::BJob*)
       BSupportKit::BPrivate::JobQueue::~JobQueue()
       BSupportKit::BPrivate::JobQueue::~JobQueue()
       BSupportKit::BPrivate::JobQueue::~JobQueue()
       BSupportKit::BPrivate::JobQueue::AddJob(BSupportKit::BJob*)
       BSupportKit::BPrivate::JobQueue::Close()
       BSupportKit::BPrivate::JobQueue::CountJobs() const
       BSupportKit::BPrivate::JobQueue::InitCheck() const
       BSupportKit::BPrivate::JobQueue::JobFailed(BSupportKit::BJob*)
       BSupportKit::BPrivate::JobQueue::JobPriorityLess::operator()(BSupportKit::BJob const*, BSupportKit::BJob const*) const
       BSupportKit::BPrivate::JobQueue::JobQueue()
       BSupportKit::BPrivate::JobQueue::JobQueue()
       BSupportKit::BPrivate::JobQueue::JobSucceeded(BSupportKit::BJob*)
       BSupportKit::BPrivate::JobQueue::Pop()
       BSupportKit::BPrivate::JobQueue::Pop(long, bool, BSupportKit::BJob**)
       BSupportKit::BPrivate::JobQueue::RemoveJob(BSupportKit::BJob*)
       BSymLink::_MissingSymLink1()
       BSymLink::_MissingSymLink2()
       BSymLink::_MissingSymLink3()
       BSymLink::_MissingSymLink4()
       BSymLink::_MissingSymLink5()
       BSymLink::_MissingSymLink6()
       BSymLink::~BSymLink()
       BSymLink::~BSymLink()
       BSymLink::~BSymLink()
       BSymLink::BSymLink()
       BSymLink::BSymLink()
       BSymLink::BSymLink(BDirectory const*, char const*)
       BSymLink::BSymLink(BDirectory const*, char const*)
       BSymLink::BSymLink(BEntry const*)
       BSymLink::BSymLink(BEntry const*)
       BSymLink::BSymLink(BSymLink const&)
       BSymLink::BSymLink(BSymLink const&)
       BSymLink::BSymLink(char const*)
       BSymLink::BSymLink(char const*)
       BSymLink::BSymLink(entry_ref const*)
       BSymLink::BSymLink(entry_ref const*)
       BSymLink::get_fd() const
       BSymLink::IsAbsolute()
       BSymLink::MakeLinkedPath(BDirectory const*, BPath*)
       BSymLink::MakeLinkedPath(char const*, BPath*)
       BSymLink::ReadLink(char*, unsigned long)
       BTab::_Borders(BView*, BRect)
       BTab::_ReservedTab1()
       BTab::_ReservedTab10()
       BTab::_ReservedTab11()
       BTab::_ReservedTab12()
       BTab::_ReservedTab2()
       BTab::_ReservedTab3()
       BTab::_ReservedTab4()
       BTab::_ReservedTab5()
       BTab::_ReservedTab6()
       BTab::_ReservedTab7()
       BTab::_ReservedTab8()
       BTab::_ReservedTab9()
       BTab::~BTab()
       BTab::~BTab()
       BTab::~BTab()
       BTab::Archive(BMessage*, bool) const
       BTab::BTab(BMessage*)
       BTab::BTab(BMessage*)
       BTab::BTab(BView*)
       BTab::BTab(BView*)
       BTab::Deselect()
       BTab::DrawFocusMark(BView*, BRect)
       BTab::DrawLabel(BView*, BRect)
       BTab::DrawTab(BView*, BRect, tab_position, bool)
       BTab::Instantiate(BMessage*)
       BTab::IsEnabled() const
       BTab::IsFocus() const
       BTab::IsSelected() const
       BTab::Label() const
       BTab::MakeFocus(bool)
       BTab::operator=(BTab const&)
       BTab::Perform(unsigned int, void*)
       BTab::Select(BView*)
       BTab::SetEnabled(bool)
       BTab::SetLabel(char const*)
       BTab::SetView(BView*)
       BTab::View() const
       BTabView::_BorderWidth() const
       BTabView::_InitContainerView(bool)
       BTabView::_InitObject(bool, button_width)
       BTabView::_LayoutContainerView(bool)
       BTabView::_ReservedTabView1()
       BTabView::_ReservedTabView10()
       BTabView::_ReservedTabView11()
       BTabView::_ReservedTabView12()
       BTabView::_ReservedTabView2()
       BTabView::_ReservedTabView3()
       BTabView::_ReservedTabView4()
       BTabView::_ReservedTabView5()
       BTabView::_ReservedTabView6()
       BTabView::_ReservedTabView7()
       BTabView::_ReservedTabView8()
       BTabView::_ReservedTabView9()
       BTabView::_TabsMinSize() const
       BTabView::~BTabView()
       BTabView::~BTabView()
       BTabView::~BTabView()
       BTabView::AddTab(BView*, BTab*)
       BTabView::AllAttached()
       BTabView::AllDetached()
       BTabView::AllUnarchived(BMessage const*)
       BTabView::Archive(BMessage*, bool) const
       BTabView::AttachedToWindow()
       BTabView::Border() const
       BTabView::BTabView(BMessage*)
       BTabView::BTabView(BMessage*)
       BTabView::BTabView(BRect, char const*, button_width, unsigned int, unsigned int)
       BTabView::BTabView(BRect, char const*, button_width, unsigned int, unsigned int)
       BTabView::BTabView(BTabView const&)
       BTabView::BTabView(BTabView const&)
       BTabView::BTabView(char const*, button_width, unsigned int)
       BTabView::BTabView(char const*, button_width, unsigned int)
       BTabView::ContainerView() const
       BTabView::CountTabs() const
       BTabView::DetachedFromWindow()
       BTabView::Draw(BRect)
       BTabView::DrawBox(BRect)
       BTabView::DrawTabs()
       BTabView::FocusTab() const
       BTabView::FrameMoved(BPoint)
       BTabView::FrameResized(float, float)
       BTabView::GetPreferredSize(float*, float*)
       BTabView::GetSupportedSuites(BMessage*)
       BTabView::IndexOf(BTab*) const
       BTabView::Instantiate(BMessage*)
       BTabView::KeyDown(char const*, int)
       BTabView::MakeFocus(bool)
       BTabView::MaxSize()
       BTabView::MessageReceived(BMessage*)
       BTabView::MinSize()
       BTabView::MouseDown(BPoint)
       BTabView::MouseMoved(BPoint, unsigned int, BMessage const*)
       BTabView::MouseUp(BPoint)
       BTabView::operator=(BTabView const&)
       BTabView::Perform(unsigned int, void*)
       BTabView::PreferredSize()
       BTabView::Pulse()
       BTabView::RemoveTab(int)
       BTabView::ResizeToPreferred()
       BTabView::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BTabView::Select(int)
       BTabView::Selection() const
       BTabView::SetBorder(border_style)
       BTabView::SetFlags(unsigned int)
       BTabView::SetFocusTab(int, bool)
       BTabView::SetResizingMode(unsigned int)
       BTabView::SetTabHeight(float)
       BTabView::SetTabSide(BTabView::tab_side)
       BTabView::SetTabWidth(button_width)
       BTabView::TabAt(int) const
       BTabView::TabFrame(int) const
       BTabView::TabHeight() const
       BTabView::TabSide() const
       BTabView::TabWidth() const
       BTabView::ViewForTab(int) const
       BTabView::WindowActivated(bool)
       BTextControl::_CommitValue()
       BTextControl::_InitData(char const*, BMessage const*)
       BTextControl::_InitText(char const*, BMessage const*)
       BTextControl::_LayoutTextView()
       BTextControl::_ReservedTextControl1()
       BTextControl::_ReservedTextControl2()
       BTextControl::_ReservedTextControl3()
       BTextControl::_ReservedTextControl4()
       BTextControl::_UpdateFrame()
       BTextControl::_UpdateTextViewColors(bool)
       BTextControl::_ValidateLayout()
       BTextControl::_ValidateLayoutData()
       BTextControl::~BTextControl()
       BTextControl::~BTextControl()
       BTextControl::~BTextControl()
       BTextControl::AllArchived(BMessage*) const
       BTextControl::AllAttached()
       BTextControl::AllDetached()
       BTextControl::AllUnarchived(BMessage const*)
       BTextControl::Archive(BMessage*, bool) const
       BTextControl::AttachedToWindow()
       BTextControl::BTextControl(BMessage*)
       BTextControl::BTextControl(BMessage*)
       BTextControl::BTextControl(BRect, char const*, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BTextControl::BTextControl(BRect, char const*, char const*, char const*, BMessage*, unsigned int, unsigned int)
       BTextControl::BTextControl(char const*, char const*, BMessage*)
       BTextControl::BTextControl(char const*, char const*, BMessage*)
       BTextControl::BTextControl(char const*, char const*, char const*, BMessage*, unsigned int)
       BTextControl::BTextControl(char const*, char const*, char const*, BMessage*, unsigned int)
       BTextControl::CreateLabelLayoutItem()
       BTextControl::CreateTextViewLayoutItem()
       BTextControl::DetachedFromWindow()
       BTextControl::Divider() const
       BTextControl::DoLayout()
       BTextControl::Draw(BRect)
       BTextControl::FrameMoved(BPoint)
       BTextControl::FrameResized(float, float)
       BTextControl::GetAlignment(alignment*, alignment*) const
       BTextControl::GetPreferredSize(float*, float*)
       BTextControl::GetSupportedSuites(BMessage*)
       BTextControl::Instantiate(BMessage*)
       BTextControl::InvalidateLayout(bool)
       BTextControl::Invoke(BMessage*)
       BTextControl::LabelLayoutItem::Archive(BMessage*, bool) const
       BTextControl::LabelLayoutItem::BaseAlignment()
       BTextControl::LabelLayoutItem::BaseMaxSize()
       BTextControl::LabelLayoutItem::BaseMinSize()
       BTextControl::LabelLayoutItem::BasePreferredSize()
       BTextControl::LabelLayoutItem::Frame()
       BTextControl::LabelLayoutItem::FrameInParent() const
       BTextControl::LabelLayoutItem::Instantiate(BMessage*)
       BTextControl::LabelLayoutItem::IsVisible()
       BTextControl::LabelLayoutItem::LabelLayoutItem(BMessage*)
       BTextControl::LabelLayoutItem::LabelLayoutItem(BMessage*)
       BTextControl::LabelLayoutItem::LabelLayoutItem(BTextControl*)
       BTextControl::LabelLayoutItem::LabelLayoutItem(BTextControl*)
       BTextControl::LabelLayoutItem::SetFrame(BRect)
       BTextControl::LabelLayoutItem::SetParent(BTextControl*)
       BTextControl::LabelLayoutItem::SetVisible(bool)
       BTextControl::LabelLayoutItem::View()
       BTextControl::LayoutAlignment()
       BTextControl::LayoutInvalidated(bool)
       BTextControl::MakeFocus(bool)
       BTextControl::MarkAsInvalid(bool)
       BTextControl::MaxSize()
       BTextControl::MessageReceived(BMessage*)
       BTextControl::MinSize()
       BTextControl::ModificationMessage() const
       BTextControl::MouseDown(BPoint)
       BTextControl::MouseMoved(BPoint, unsigned int, BMessage const*)
       BTextControl::MouseUp(BPoint)
       BTextControl::operator=(BTextControl const&)
       BTextControl::Perform(unsigned int, void*)
       BTextControl::PreferredSize()
       BTextControl::ResizeToPreferred()
       BTextControl::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BTextControl::SetAlignment(alignment, alignment)
       BTextControl::SetDivider(float)
       BTextControl::SetEnabled(bool)
       BTextControl::SetFlags(unsigned int)
       BTextControl::SetIcon(BBitmap const*, unsigned int)
       BTextControl::SetModificationMessage(BMessage*)
       BTextControl::SetText(char const*)
       BTextControl::SetValue(int)
       BTextControl::Text() const
       BTextControl::TextLength() const
       BTextControl::TextView() const
       BTextControl::TextViewLayoutItem::Archive(BMessage*, bool) const
       BTextControl::TextViewLayoutItem::BaseAlignment()
       BTextControl::TextViewLayoutItem::BaseMaxSize()
       BTextControl::TextViewLayoutItem::BaseMinSize()
       BTextControl::TextViewLayoutItem::BasePreferredSize()
       BTextControl::TextViewLayoutItem::Frame()
       BTextControl::TextViewLayoutItem::FrameInParent() const
       BTextControl::TextViewLayoutItem::Instantiate(BMessage*)
       BTextControl::TextViewLayoutItem::IsVisible()
       BTextControl::TextViewLayoutItem::SetFrame(BRect)
       BTextControl::TextViewLayoutItem::SetParent(BTextControl*)
       BTextControl::TextViewLayoutItem::SetVisible(bool)
       BTextControl::TextViewLayoutItem::TextViewLayoutItem(BMessage*)
       BTextControl::TextViewLayoutItem::TextViewLayoutItem(BMessage*)
       BTextControl::TextViewLayoutItem::TextViewLayoutItem(BTextControl*)
       BTextControl::TextViewLayoutItem::TextViewLayoutItem(BTextControl*)
       BTextControl::TextViewLayoutItem::View()
       BTextControl::WindowActivated(bool)
       BTextToolTip::_InitData(char const*)
       BTextToolTip::~BTextToolTip()
       BTextToolTip::~BTextToolTip()
       BTextToolTip::~BTextToolTip()
       BTextToolTip::Archive(BMessage*, bool) const
       BTextToolTip::BTextToolTip(BMessage*)
       BTextToolTip::BTextToolTip(BMessage*)
       BTextToolTip::BTextToolTip(char const*)
       BTextToolTip::BTextToolTip(char const*)
       BTextToolTip::Instantiate(BMessage*)
       BTextToolTip::SetText(char const*)
       BTextToolTip::Text() const
       BTextToolTip::View() const
       BTextView::_Activate()
       BTextView::_ActualTabWidth(float) const
       BTextView::_ApplyStyleRange(int, int, unsigned int, BFont const*, rgb_color const*, bool)
       BTextView::_AutoResize(bool)
       BTextView::_CancelInputMethod()
       BTextView::_CharClassification(int) const
       BTextView::_CountProperties(BMessage*, BMessage*, char const*, BMessage*)
       BTextView::_Deactivate()
       BTextView::_DeleteOffscreen()
       BTextView::_DoDeleteText(int, int)
       BTextView::_DoInsertText(char const*, int, int, text_run_array const*)
       BTextView::_DragCaret(int)
       BTextView::_DrawCaret(int, bool)
       BTextView::_DrawLine(BView*, int const&, int const&, bool const&, BRect&, BRegion&)
       BTextView::_DrawLines(int, int, int, bool)
       BTextView::_FilterDisallowedChars(char*, long&, text_run_array*)
       BTextView::_FindLineBreak(int, float*, float*, float*)
       BTextView::_GetProperty(BMessage*, BMessage*, char const*, BMessage*)
       BTextView::_HandleAlphaKey(char const*, int)
       BTextView::_HandleArrowKey(unsigned int, int)
       BTextView::_HandleBackspace(int)
       BTextView::_HandleDelete(int)
       BTextView::_HandleInputMethodChanged(BMessage*)
       BTextView::_HandleInputMethodLocationRequest()
       BTextView::_HandlePageKey(unsigned int, int)
       BTextView::_InitiateDrag()
       BTextView::_InitObject(BRect, BFont const*, rgb_color const*)
       BTextView::_InvertCaret()
       BTextView::_IsOnEmptyLastLine(int) const
       BTextView::_LineAt(BPoint const&) const
       BTextView::_LineAt(int) const
       BTextView::_MessageDropped(BMessage*, BPoint, BPoint)
       BTextView::_NewOffscreen(float)
       BTextView::_NextInitialByte(int) const
       BTextView::_NextLineEnd(int)
       BTextView::_NextWordBoundary(int)
       BTextView::_NextWordEnd(int)
       BTextView::_NormalizeFont(BFont*)
       BTextView::_NullStyleHeight() const
       BTextView::_PerformAutoScrolling()
       BTextView::_PerformMouseMoved(BPoint, unsigned int)
       BTextView::_PerformMouseUp(BPoint)
       BTextView::_PreviousInitialByte(int) const
       BTextView::_PreviousLineStart(int)
       BTextView::_PreviousWordBoundary(int)
       BTextView::_PreviousWordStart(int)
       BTextView::_RecalculateLineBreaks(int*, int*)
       BTextView::_Refresh(int, int, int)
       BTextView::_RequestDrawLines(int, int)
       BTextView::_ReservedTextView10()
       BTextView::_ReservedTextView11()
       BTextView::_ReservedTextView12()
       BTextView::_ReservedTextView3()
       BTextView::_ReservedTextView4()
       BTextView::_ReservedTextView5()
       BTextView::_ReservedTextView6()
       BTextView::_ReservedTextView7()
       BTextView::_ReservedTextView8()
       BTextView::_ReservedTextView9()
       BTextView::_ResetTextRect()
       BTextView::_ScrollBy(float, float)
       BTextView::_ScrollTo(float, float)
       BTextView::_SetProperty(BMessage*, BMessage*, char const*, BMessage*)
       BTextView::_SetRunArray(int, int, text_run_array const*)
       BTextView::_ShowContextMenu(BPoint)
       BTextView::_StopMouseTracking()
       BTextView::_StyledWidth(int, int, float*, float*) const
       BTextView::_TabExpandedStyledWidth(int, int, float*, float*) const
       BTextView::_TrackDrag(BPoint)
       BTextView::_TrackMouse(BPoint, BMessage const*, bool)
       BTextView::_UpdateInsets(BRect const&)
       BTextView::_UpdateScrollbars()
       BTextView::_ValidateLayoutData()
       BTextView::_ValidateTextRect()
       BTextView::~BTextView()
       BTextView::~BTextView()
       BTextView::~BTextView()
       BTextView::AcceptsDrop(BMessage const*)
       BTextView::AcceptsPaste(BClipboard*)
       BTextView::Alignment() const
       BTextView::AllAttached()
       BTextView::AllDetached()
       BTextView::AllocRunArray(int, int*)
       BTextView::AllowChar(unsigned int)
       BTextView::Archive(BMessage*, bool) const
       BTextView::AttachedToWindow()
       BTextView::BTextView(BMessage*)
       BTextView::BTextView(BMessage*)
       BTextView::BTextView(BRect, char const*, BRect, BFont const*, rgb_color const*, unsigned int, unsigned int)
       BTextView::BTextView(BRect, char const*, BRect, BFont const*, rgb_color const*, unsigned int, unsigned int)
       BTextView::BTextView(BRect, char const*, BRect, unsigned int, unsigned int)
       BTextView::BTextView(BRect, char const*, BRect, unsigned int, unsigned int)
       BTextView::BTextView(char const*, BFont const*, rgb_color const*, unsigned int)
       BTextView::BTextView(char const*, BFont const*, rgb_color const*, unsigned int)
       BTextView::BTextView(char const*, unsigned int)
       BTextView::BTextView(char const*, unsigned int)
       BTextView::ByteAt(int) const
       BTextView::CanEndLine(int)
       BTextView::Clear()
       BTextView::ClearUndoBuffer::~ClearUndoBuffer()
       BTextView::ClearUndoBuffer::~ClearUndoBuffer()
       BTextView::ClearUndoBuffer::~ClearUndoBuffer()
       BTextView::ClearUndoBuffer::ClearUndoBuffer(BTextView*)
       BTextView::ClearUndoBuffer::ClearUndoBuffer(BTextView*)
       BTextView::ClearUndoBuffer::RedoSelf(BClipboard*)
       BTextView::ColorSpace() const
       BTextView::Copy(BClipboard*)
       BTextView::CopyRunArray(text_run_array const*, int)
       BTextView::CountLines() const
       BTextView::CurrentLine() const
       BTextView::Cut(BClipboard*)
       BTextView::CutUndoBuffer::~CutUndoBuffer()
       BTextView::CutUndoBuffer::~CutUndoBuffer()
       BTextView::CutUndoBuffer::~CutUndoBuffer()
       BTextView::CutUndoBuffer::CutUndoBuffer(BTextView*)
       BTextView::CutUndoBuffer::CutUndoBuffer(BTextView*)
       BTextView::CutUndoBuffer::RedoSelf(BClipboard*)
       BTextView::Delete()
       BTextView::Delete(int, int)
       BTextView::DeleteText(int, int)
       BTextView::DetachedFromWindow()
       BTextView::DisallowChar(unsigned int)
       BTextView::DoesAutoindent() const
       BTextView::DoesUndo() const
       BTextView::DoesWordWrap() const
       BTextView::DoLayout()
       BTextView::Draw(BRect)
       BTextView::DropUndoBuffer::~DropUndoBuffer()
       BTextView::DropUndoBuffer::~DropUndoBuffer()
       BTextView::DropUndoBuffer::~DropUndoBuffer()
       BTextView::DropUndoBuffer::DropUndoBuffer(BTextView*, char const*, int, text_run_array*, int, int, bool)
       BTextView::DropUndoBuffer::DropUndoBuffer(BTextView*, char const*, int, text_run_array*, int, int, bool)
       BTextView::DropUndoBuffer::RedoSelf(BClipboard*)
       BTextView::DropUndoBuffer::UndoSelf(BClipboard*)
       BTextView::FindWord(int, int*, int*)
       BTextView::FlattenRunArray(text_run_array const*, int*)
       BTextView::FrameResized(float, float)
       BTextView::FreeRunArray(text_run_array*)
       BTextView::GetDragParameters(BMessage*, BBitmap**, BPoint*, BHandler**)
       BTextView::GetFontAndColor(BFont*, unsigned int*, rgb_color*, bool*) const
       BTextView::GetFontAndColor(int, BFont*, rgb_color*) const
       BTextView::GetHeightForWidth(float, float*, float*, float*)
       BTextView::GetInsets(float*, float*, float*, float*) const
       BTextView::GetPreferredSize(float*, float*)
       BTextView::GetSelection(int*, int*) const
       BTextView::GetSupportedSuites(BMessage*)
       BTextView::GetText(int, int, char*) const
       BTextView::GetTextRegion(int, int, BRegion*) const
       BTextView::GoToLine(int)
       BTextView::HasHeightForWidth()
       BTextView::HideTyping(bool)
       BTextView::Highlight(int, int)
       BTextView::InlineInput::~InlineInput()
       BTextView::InlineInput::~InlineInput()
       BTextView::InlineInput::AddClause(int, int)
       BTextView::InlineInput::CountClauses() const
       BTextView::InlineInput::GetClause(int, int*, int*) const
       BTextView::InlineInput::InlineInput(BMessenger)
       BTextView::InlineInput::InlineInput(BMessenger)
       BTextView::InlineInput::IsActive() const
       BTextView::InlineInput::Length() const
       BTextView::InlineInput::Method() const
       BTextView::InlineInput::Offset() const
       BTextView::InlineInput::ResetClauses()
       BTextView::InlineInput::SelectionLength() const
       BTextView::InlineInput::SelectionOffset() const
       BTextView::InlineInput::SetActive(bool)
       BTextView::InlineInput::SetLength(int)
       BTextView::InlineInput::SetOffset(int)
       BTextView::InlineInput::SetSelectionLength(int)
       BTextView::InlineInput::SetSelectionOffset(int)
       BTextView::Insert(char const*, int, text_run_array const*)
       BTextView::Insert(char const*, text_run_array const*)
       BTextView::Insert(int, char const*, int, text_run_array const*)
       BTextView::InsertText(char const*, int, int, text_run_array const*)
       BTextView::Instantiate(BMessage*)
       BTextView::InvalidateLayout(bool)
       BTextView::IsEditable() const
       BTextView::IsResizable() const
       BTextView::IsSelectable() const
       BTextView::IsStylable() const
       BTextView::IsTypingHidden() const
       BTextView::KeyDown(char const*, int)
       BTextView::LayoutInvalidated(bool)
       BTextView::LineAt(BPoint) const
       BTextView::LineAt(int) const
       BTextView::LineBuffer::~LineBuffer()
       BTextView::LineBuffer::~LineBuffer()
       BTextView::LineBuffer::~LineBuffer()
       BTextView::LineBuffer::BumpOffset(int, int)
       BTextView::LineBuffer::BumpOrigin(float, int)
       BTextView::LineBuffer::InsertLine(STELine*, int)
       BTextView::LineBuffer::LineBuffer()
       BTextView::LineBuffer::LineBuffer()
       BTextView::LineBuffer::MaxWidth() const
       BTextView::LineBuffer::OffsetToLine(int) const
       BTextView::LineBuffer::PixelToLine(float) const
       BTextView::LineBuffer::RemoveLineRange(int, int)
       BTextView::LineBuffer::RemoveLines(int, int)
       BTextView::LineHeight(int) const
       BTextView::LineWidth(int) const
       BTextView::MakeEditable(bool)
       BTextView::MakeFocus(bool)
       BTextView::MakeResizable(bool, BView*)
       BTextView::MakeSelectable(bool)
       BTextView::MaxBytes() const
       BTextView::MaxSize()
       BTextView::MessageReceived(BMessage*)
       BTextView::MinSize()
       BTextView::MouseDown(BPoint)
       BTextView::MouseMoved(BPoint, unsigned int, BMessage const*)
       BTextView::MouseUp(BPoint)
       BTextView::OffsetAt(BPoint) const
       BTextView::OffsetAt(int) const
       BTextView::Paste(BClipboard*)
       BTextView::PasteUndoBuffer::~PasteUndoBuffer()
       BTextView::PasteUndoBuffer::~PasteUndoBuffer()
       BTextView::PasteUndoBuffer::~PasteUndoBuffer()
       BTextView::PasteUndoBuffer::PasteUndoBuffer(BTextView*, char const*, int, text_run_array*, int)
       BTextView::PasteUndoBuffer::PasteUndoBuffer(BTextView*, char const*, int, text_run_array*, int)
       BTextView::PasteUndoBuffer::RedoSelf(BClipboard*)
       BTextView::PasteUndoBuffer::UndoSelf(BClipboard*)
       BTextView::Perform(unsigned int, void*)
       BTextView::PointAt(int, float*) const
       BTextView::PreferredSize()
       BTextView::Pulse()
       BTextView::ResizeToPreferred()
       BTextView::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BTextView::RunArray(int, int, int*) const
       BTextView::ScrollToOffset(int)
       BTextView::ScrollToSelection()
       BTextView::Select(int, int)
       BTextView::SelectAll()
       BTextView::SetAlignment(alignment)
       BTextView::SetAutoindent(bool)
       BTextView::SetColorSpace(color_space)
       BTextView::SetDoesUndo(bool)
       BTextView::SetFontAndColor(BFont const*, unsigned int, rgb_color const*)
       BTextView::SetFontAndColor(int, int, BFont const*, unsigned int, rgb_color const*)
       BTextView::SetInsets(float, float, float, float)
       BTextView::SetMaxBytes(int)
       BTextView::SetRunArray(int, int, text_run_array const*)
       BTextView::SetStylable(bool)
       BTextView::SetTabWidth(float)
       BTextView::SetText(BFile*, int, int, text_run_array const*)
       BTextView::SetText(char const*, int, text_run_array const*)
       BTextView::SetText(char const*, text_run_array const*)
       BTextView::SetTextRect(BRect)
       BTextView::SetWordWrap(bool)
       BTextView::StyleBuffer::AllocateStyleRange(int) const
       BTextView::StyleBuffer::BumpOffset(int, int)
       BTextView::StyleBuffer::ContinuousGetStyle(BFont*, unsigned int*, rgb_color*, bool*, int, int) const
       BTextView::StyleBuffer::GetNullStyle(BFont const**, rgb_color const**) const
       BTextView::StyleBuffer::GetStyle(int, BFont*, rgb_color*) const
       BTextView::StyleBuffer::GetStyleRange(int, int) const
       BTextView::StyleBuffer::InvalidateNullStyle()
       BTextView::StyleBuffer::IsValidNullStyle() const
       BTextView::StyleBuffer::Iterate(int, int, BTextView::InlineInput*, BFont const**, rgb_color const**, float*, float*, unsigned int*) const
       BTextView::StyleBuffer::OffsetToRun(int) const
       BTextView::StyleBuffer::operator[](int) const
       BTextView::StyleBuffer::RemoveStyleRange(int, int)
       BTextView::StyleBuffer::RemoveStyles(int, int)
       BTextView::StyleBuffer::SetNullStyle(unsigned int, BFont const*, rgb_color const*, int)
       BTextView::StyleBuffer::SetStyleRange(int, int, int, unsigned int, BFont const*, rgb_color const*)
       BTextView::StyleBuffer::StyleBuffer(BFont const*, rgb_color const*)
       BTextView::StyleBuffer::StyleBuffer(BFont const*, rgb_color const*)
       BTextView::StyleBuffer::SyncNullStyle(int)
       BTextView::TabWidth() const
       BTextView::Text() const
       BTextView::TextHeight(int, int) const
       BTextView::TextLength() const
       BTextView::TextRect() const
       BTextView::TextTrackState::~TextTrackState()
       BTextView::TextTrackState::~TextTrackState()
       BTextView::TextTrackState::SimulateMouseMovement(BTextView*)
       BTextView::TextTrackState::TextTrackState(BMessenger)
       BTextView::TextTrackState::TextTrackState(BMessenger)
       BTextView::TypingUndoBuffer::_Reset()
       BTextView::TypingUndoBuffer::~TypingUndoBuffer()
       BTextView::TypingUndoBuffer::~TypingUndoBuffer()
       BTextView::TypingUndoBuffer::~TypingUndoBuffer()
       BTextView::TypingUndoBuffer::BackwardErase()
       BTextView::TypingUndoBuffer::ForwardErase()
       BTextView::TypingUndoBuffer::InputCharacter(int)
       BTextView::TypingUndoBuffer::RedoSelf(BClipboard*)
       BTextView::TypingUndoBuffer::TypingUndoBuffer(BTextView*)
       BTextView::TypingUndoBuffer::TypingUndoBuffer(BTextView*)
       BTextView::TypingUndoBuffer::UndoSelf(BClipboard*)
       BTextView::Undo(BClipboard*)
       BTextView::UndoBuffer::~UndoBuffer()
       BTextView::UndoBuffer::~UndoBuffer()
       BTextView::UndoBuffer::~UndoBuffer()
       BTextView::UndoBuffer::RedoSelf(BClipboard*)
       BTextView::UndoBuffer::State(bool*) const
       BTextView::UndoBuffer::Undo(BClipboard*)
       BTextView::UndoBuffer::UndoBuffer(BTextView*, undo_state)
       BTextView::UndoBuffer::UndoBuffer(BTextView*, undo_state)
       BTextView::UndoBuffer::UndoSelf(BClipboard*)
       BTextView::UndoState(bool*) const
       BTextView::UnflattenRunArray(void const*, int*)
       BTextView::WindowActivated(bool)
       BTimeFormat::_CreateTimeFormatter(BTimeFormatStyle) const
       BTimeFormat::~BTimeFormat()
       BTimeFormat::~BTimeFormat()
       BTimeFormat::~BTimeFormat()
       BTimeFormat::BTimeFormat()
       BTimeFormat::BTimeFormat()
       BTimeFormat::BTimeFormat(BLanguage const&, BFormattingConventions const&)
       BTimeFormat::BTimeFormat(BLanguage const&, BFormattingConventions const&)
       BTimeFormat::BTimeFormat(BTimeFormat const&)
       BTimeFormat::BTimeFormat(BTimeFormat const&)
       BTimeFormat::Format(BString&, int*&, int&, long, BTimeFormatStyle) const
       BTimeFormat::Format(BString&, long, BTimeFormatStyle, BTimeZone const*) const
       BTimeFormat::Format(char*, unsigned long, long, BTimeFormatStyle) const
       BTimeFormat::GetTimeFields(BDateElement*&, int&, BTimeFormatStyle) const
       BTimeFormat::Parse(BString, BTimeFormatStyle, BPrivate::BTime&)
       BTimeFormat::SetTimeFormat(BTimeFormatStyle, BString const&)
       BTimeUnitFormat::~BTimeUnitFormat()
       BTimeUnitFormat::~BTimeUnitFormat()
       BTimeUnitFormat::~BTimeUnitFormat()
       BTimeUnitFormat::BTimeUnitFormat(BLanguage const&, BFormattingConventions const&, time_unit_style)
       BTimeUnitFormat::BTimeUnitFormat(BLanguage const&, BFormattingConventions const&, time_unit_style)
       BTimeUnitFormat::BTimeUnitFormat(BTimeUnitFormat const&)
       BTimeUnitFormat::BTimeUnitFormat(BTimeUnitFormat const&)
       BTimeUnitFormat::BTimeUnitFormat(time_unit_style)
       BTimeUnitFormat::BTimeUnitFormat(time_unit_style)
       BTimeUnitFormat::Format(BString&, int, time_unit_element) const
       BTimeZone::~BTimeZone()
       BTimeZone::~BTimeZone()
       BTimeZone::BTimeZone(BTimeZone const&)
       BTimeZone::BTimeZone(BTimeZone const&)
       BTimeZone::BTimeZone(char const*, BLanguage const*)
       BTimeZone::BTimeZone(char const*, BLanguage const*)
       BTimeZone::DaylightSavingName() const
       BTimeZone::ID() const
       BTimeZone::InitCheck() const
       BTimeZone::kNameOfGmtZone
       BTimeZone::Name() const
       BTimeZone::OffsetFromGMT() const
       BTimeZone::operator=(BTimeZone const&)
       BTimeZone::SetLanguage(BLanguage const*)
       BTimeZone::SetTo(char const*, BLanguage const*)
       BTimeZone::ShortDaylightSavingName() const
       BTimeZone::ShortName() const
       BTimeZone::SupportsDaylightSaving() const
       BToolTip::_InitData()
       BToolTip::~BToolTip()
       BToolTip::~BToolTip()
       BToolTip::~BToolTip()
       BToolTip::Alignment() const
       BToolTip::Archive(BMessage*, bool) const
       BToolTip::AttachedToWindow()
       BToolTip::BToolTip()
       BToolTip::BToolTip()
       BToolTip::BToolTip(BMessage*)
       BToolTip::BToolTip(BMessage*)
       BToolTip::DetachedFromWindow()
       BToolTip::IsSticky() const
       BToolTip::Lock()
       BToolTip::MouseRelativeLocation() const
       BToolTip::SetAlignment(BAlignment)
       BToolTip::SetMouseRelativeLocation(BPoint)
       BToolTip::SetSticky(bool)
       BToolTip::Unlock()
       BToolTipManager::_InitSingleton()
       BToolTipManager::~BToolTipManager()
       BToolTipManager::~BToolTipManager()
       BToolTipManager::~BToolTipManager()
       BToolTipManager::BToolTipManager()
       BToolTipManager::BToolTipManager()
       BToolTipManager::HideDelay() const
       BToolTipManager::HideTip()
       BToolTipManager::Manager()
       BToolTipManager::sDefaultInstance
       BToolTipManager::SetHideDelay(long)
       BToolTipManager::SetShowDelay(long)
       BToolTipManager::ShowDelay() const
       BToolTipManager::ShowTip(BToolTip*, BPoint, void*)
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout1()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout10()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout2()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout3()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout4()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout5()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout6()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout7()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout8()
       BTwoDimensionalLayout::_ReservedTwoDimensionalLayout9()
       BTwoDimensionalLayout::_ValidateMinMax()
       BTwoDimensionalLayout::~BTwoDimensionalLayout()
       BTwoDimensionalLayout::~BTwoDimensionalLayout()
       BTwoDimensionalLayout::~BTwoDimensionalLayout()
       BTwoDimensionalLayout::AddInsets(BSize)
       BTwoDimensionalLayout::AddInsets(float*, float*, float*)
       BTwoDimensionalLayout::AlignLayoutWith(BTwoDimensionalLayout*, orientation)
       BTwoDimensionalLayout::AllArchived(BMessage*) const
       BTwoDimensionalLayout::AllUnarchived(BMessage const*)
       BTwoDimensionalLayout::Archive(BMessage*, bool) const
       BTwoDimensionalLayout::BaseAlignment()
       BTwoDimensionalLayout::BaseMaxSize()
       BTwoDimensionalLayout::BaseMinSize()
       BTwoDimensionalLayout::BasePreferredSize()
       BTwoDimensionalLayout::BTwoDimensionalLayout()
       BTwoDimensionalLayout::BTwoDimensionalLayout()
       BTwoDimensionalLayout::BTwoDimensionalLayout(BMessage*)
       BTwoDimensionalLayout::BTwoDimensionalLayout(BMessage*)
       BTwoDimensionalLayout::CompoundLayouter::_AddConstraints(BPrivate::Layout::Layouter*)
       BTwoDimensionalLayout::CompoundLayouter::_CountElements()
       BTwoDimensionalLayout::CompoundLayouter::_HasMultiElementItems()
       BTwoDimensionalLayout::CompoundLayouter::_PrepareItems()
       BTwoDimensionalLayout::CompoundLayouter::_Spacing()
       BTwoDimensionalLayout::CompoundLayouter::~CompoundLayouter()
       BTwoDimensionalLayout::CompoundLayouter::~CompoundLayouter()
       BTwoDimensionalLayout::CompoundLayouter::~CompoundLayouter()
       BTwoDimensionalLayout::CompoundLayouter::AbsorbCompoundLayouter(BTwoDimensionalLayout::CompoundLayouter*)
       BTwoDimensionalLayout::CompoundLayouter::AddAlignedLayoutsToArchive(BArchiver*, BTwoDimensionalLayout::LocalLayouter*)
       BTwoDimensionalLayout::CompoundLayouter::AddLocalLayouter(BTwoDimensionalLayout::LocalLayouter*)
       BTwoDimensionalLayout::CompoundLayouter::CompoundLayouter(orientation)
       BTwoDimensionalLayout::CompoundLayouter::CompoundLayouter(orientation)
       BTwoDimensionalLayout::CompoundLayouter::DoLayout(float, BTwoDimensionalLayout::LocalLayouter*, BLayoutContext*)
       BTwoDimensionalLayout::CompoundLayouter::GetLayouter(bool)
       BTwoDimensionalLayout::CompoundLayouter::GetLayoutInfo()
       BTwoDimensionalLayout::CompoundLayouter::InvalidateLayout()
       BTwoDimensionalLayout::CompoundLayouter::IsMinMaxValid()
       BTwoDimensionalLayout::CompoundLayouter::Layout(float, BTwoDimensionalLayout::LocalLayouter*, BLayoutContext*)
       BTwoDimensionalLayout::CompoundLayouter::Orientation()
       BTwoDimensionalLayout::CompoundLayouter::RemoveLocalLayouter(BTwoDimensionalLayout::LocalLayouter*)
       BTwoDimensionalLayout::CompoundLayouter::ValidateMinMax()
       BTwoDimensionalLayout::DoLayout()
       BTwoDimensionalLayout::GetHeightForWidth(float, float*, float*, float*)
       BTwoDimensionalLayout::GetInsets(float*, float*, float*, float*) const
       BTwoDimensionalLayout::HasHeightForWidth()
       BTwoDimensionalLayout::HasMultiColumnItems()
       BTwoDimensionalLayout::HasMultiRowItems()
       BTwoDimensionalLayout::ItemArchived(BMessage*, BLayoutItem*, int) const
       BTwoDimensionalLayout::ItemUnarchived(BMessage const*, BLayoutItem*, int)
       BTwoDimensionalLayout::LayoutInvalidated(bool)
       BTwoDimensionalLayout::LocalLayouter::_SetHorizontalLayoutContext(BLayoutContext*, float)
       BTwoDimensionalLayout::LocalLayouter::~LocalLayouter()
       BTwoDimensionalLayout::LocalLayouter::~LocalLayouter()
       BTwoDimensionalLayout::LocalLayouter::~LocalLayouter()
       BTwoDimensionalLayout::LocalLayouter::AddAlignedLayoutsToArchive(BArchiver*)
       BTwoDimensionalLayout::LocalLayouter::AddConstraints(BTwoDimensionalLayout::CompoundLayouter*, BPrivate::Layout::Layouter*)
       BTwoDimensionalLayout::LocalLayouter::AddHeightForWidthConstraints(BTwoDimensionalLayout::VerticalCompoundLayouter*, BPrivate::Layout::Layouter*, BLayoutContext*)
       BTwoDimensionalLayout::LocalLayouter::AddOwnerToArchive(BArchiver*, BTwoDimensionalLayout::CompoundLayouter*, bool&)
       BTwoDimensionalLayout::LocalLayouter::AlignLayoutsFromArchive(BUnarchiver*, orientation)
       BTwoDimensionalLayout::LocalLayouter::AlignWith(BTwoDimensionalLayout::LocalLayouter*, orientation)
       BTwoDimensionalLayout::LocalLayouter::CountElements(BTwoDimensionalLayout::CompoundLayouter*)
       BTwoDimensionalLayout::LocalLayouter::DoHorizontalLayout(float)
       BTwoDimensionalLayout::LocalLayouter::HasHeightForWidth()
       BTwoDimensionalLayout::LocalLayouter::HasMultiElementItems(BTwoDimensionalLayout::CompoundLayouter*)
       BTwoDimensionalLayout::LocalLayouter::InternalGetHeightForWidth(float, float*, float*, float*)
       BTwoDimensionalLayout::LocalLayouter::InternalInvalidateLayout(BTwoDimensionalLayout::CompoundLayouter*)
       BTwoDimensionalLayout::LocalLayouter::InvalidateLayout()
       BTwoDimensionalLayout::LocalLayouter::ItemFrame(BTwoDimensionalLayout::Dimensions)
       BTwoDimensionalLayout::LocalLayouter::Layout(BSize)
       BTwoDimensionalLayout::LocalLayouter::LayoutContextLeft(BLayoutContext*)
       BTwoDimensionalLayout::LocalLayouter::LocalLayouter(BTwoDimensionalLayout*)
       BTwoDimensionalLayout::LocalLayouter::LocalLayouter(BTwoDimensionalLayout*)
       BTwoDimensionalLayout::LocalLayouter::MaxSize()
       BTwoDimensionalLayout::LocalLayouter::MinSize()
       BTwoDimensionalLayout::LocalLayouter::PreferredSize()
       BTwoDimensionalLayout::LocalLayouter::PrepareItems(BTwoDimensionalLayout::CompoundLayouter*)
       BTwoDimensionalLayout::LocalLayouter::SetCompoundLayouter(BTwoDimensionalLayout::CompoundLayouter*, orientation)
       BTwoDimensionalLayout::LocalLayouter::SetHeightForWidthConstraintsAdded(bool)
       BTwoDimensionalLayout::LocalLayouter::Spacing(BTwoDimensionalLayout::CompoundLayouter*)
       BTwoDimensionalLayout::LocalLayouter::ValidateMinMax()
       BTwoDimensionalLayout::Perform(unsigned int, void*)
       BTwoDimensionalLayout::PrepareItems(orientation)
       BTwoDimensionalLayout::SetFrame(BRect)
       BTwoDimensionalLayout::SetInsets(float, float, float, float)
       BTwoDimensionalLayout::SetInsets(float, float)
       BTwoDimensionalLayout::SetInsets(float)
       BTwoDimensionalLayout::SubtractInsets(BSize)
       BTwoDimensionalLayout::VerticalCompoundLayouter::_HasHeightForWidth()
       BTwoDimensionalLayout::VerticalCompoundLayouter::_SetHeightForWidthLayoutContext(BLayoutContext*)
       BTwoDimensionalLayout::VerticalCompoundLayouter::DoLayout(float, BTwoDimensionalLayout::LocalLayouter*, BLayoutContext*)
       BTwoDimensionalLayout::VerticalCompoundLayouter::GetLayouter(bool)
       BTwoDimensionalLayout::VerticalCompoundLayouter::InternalGetHeightForWidth(BTwoDimensionalLayout::LocalLayouter*, BLayoutContext*, bool, float*, float*, float*)
       BTwoDimensionalLayout::VerticalCompoundLayouter::InvalidateHeightForWidth()
       BTwoDimensionalLayout::VerticalCompoundLayouter::InvalidateLayout()
       BTwoDimensionalLayout::VerticalCompoundLayouter::LayoutContextLeft(BLayoutContext*)
       BTwoDimensionalLayout::VerticalCompoundLayouter::VerticalCompoundLayouter()
       BTwoDimensionalLayout::VerticalCompoundLayouter::VerticalCompoundLayouter()
       BUnarchiver::~BUnarchiver()
       BUnarchiver::~BUnarchiver()
       BUnarchiver::ArchiveMessage() const
       BUnarchiver::AssumeOwnership(BArchivable*)
       BUnarchiver::BUnarchiver(BMessage const*)
       BUnarchiver::BUnarchiver(BMessage const*)
       BUnarchiver::Finish(int)
       BUnarchiver::IsArchiveManaged(BMessage const*)
       BUnarchiver::IsInstantiated(char const*, int)
       BUnarchiver::IsInstantiated(int)
       BUnarchiver::PrepareArchive(BMessage*&)
       BUnarchiver::RegisterArchivable(BArchivable*)
       BUnarchiver::RelinquishOwnership(BArchivable*)
       BUnicodeChar::BUnicodeChar()
       BUnicodeChar::BUnicodeChar()
       BUnicodeChar::DigitValue(unsigned int)
       BUnicodeChar::EastAsianWidth(unsigned int)
       BUnicodeChar::FromUTF8(char const**)
       BUnicodeChar::IsAlNum(unsigned int)
       BUnicodeChar::IsAlpha(unsigned int)
       BUnicodeChar::IsBase(unsigned int)
       BUnicodeChar::IsControl(unsigned int)
       BUnicodeChar::IsDefined(unsigned int)
       BUnicodeChar::IsDigit(unsigned int)
       BUnicodeChar::IsHexDigit(unsigned int)
       BUnicodeChar::IsLower(unsigned int)
       BUnicodeChar::IsPrintable(unsigned int)
       BUnicodeChar::IsPunctuation(unsigned int)
       BUnicodeChar::IsSpace(unsigned int)
       BUnicodeChar::IsTitle(unsigned int)
       BUnicodeChar::IsUpper(unsigned int)
       BUnicodeChar::IsWhitespace(unsigned int)
       BUnicodeChar::ToLower(unsigned int)
       BUnicodeChar::ToTitle(unsigned int)
       BUnicodeChar::ToUpper(unsigned int)
       BUnicodeChar::ToUTF8(unsigned int, char**)
       BUnicodeChar::Type(unsigned int)
       BUnicodeChar::UTF8StringLength(char const*, unsigned long)
       BUnicodeChar::UTF8StringLength(char const*)
       BUrl::_ContainsDelimiter(BString const&)
       BUrl::_DoUrlDecodeChunk(BString const&, bool)
       BUrl::_DoUrlEncodeChunk(BString const&, bool, bool)
       BUrl::_ExplodeUrlString(BString const&, unsigned int)
       BUrl::_IsGenDelim(char)
       BUrl::_IsHostChar(char)
       BUrl::_IsHostIPV6Valid(unsigned long, int) const
       BUrl::_IsHostValid() const
       BUrl::_IsIPV6Char(char)
       BUrl::_IsPasswordChar(char)
       BUrl::_IsPortChar(char)
       BUrl::_IsProtocolValid() const
       BUrl::_IsSubDelim(char)
       BUrl::_IsUnreserved(char)
       BUrl::_IsUsernameChar(char)
       BUrl::_MergePath(BString const&) const
       BUrl::_RemoveLastPathComponent(BString&)
       BUrl::_ResetFields()
       BUrl::_SetPathUnsafe(BString const&)
       BUrl::_UrlMimeType() const
       BUrl::~BUrl()
       BUrl::~BUrl()
       BUrl::~BUrl()
       BUrl::Archive(BMessage*, bool) const
       BUrl::Authority() const
       BUrl::BUrl()
       BUrl::BUrl()
       BUrl::BUrl(BMessage*)
       BUrl::BUrl(BMessage*)
       BUrl::BUrl(BPath const&)
       BUrl::BUrl(BPath const&)
       BUrl::BUrl(BUrl const&, BString const&)
       BUrl::BUrl(BUrl const&, BString const&)
       BUrl::BUrl(BUrl const&)
       BUrl::BUrl(BUrl const&)
       BUrl::BUrl(char const*)
       BUrl::BUrl(char const*)
       BUrl::Fragment() const
       BUrl::HasAuthority() const
       BUrl::HasFragment() const
       BUrl::HasHost() const
       BUrl::HasPassword() const
       BUrl::HasPath() const
       BUrl::HasPort() const
       BUrl::HasPreferredApplication() const
       BUrl::HasProtocol() const
       BUrl::HasRequest() const
       BUrl::HasUserInfo() const
       BUrl::HasUserName() const
       BUrl::Host() const
       BUrl::IDNAToAscii()
       BUrl::IDNAToUnicode()
       BUrl::Instantiate(BMessage*)
       BUrl::IsValid() const
       BUrl::OpenWithPreferredApplication(bool) const
       BUrl::operator char const*() const
       BUrl::operator!=(BUrl&) const
       BUrl::operator=(BString const&)
       BUrl::operator=(BUrl const&)
       BUrl::operator=(char const*)
       BUrl::operator==(BUrl&) const
       BUrl::Password() const
       BUrl::Path() const
       BUrl::Port() const
       BUrl::PreferredApplication() const
       BUrl::Protocol() const
       BUrl::Request() const
       BUrl::SetAuthority(BString const&)
       BUrl::SetFragment(BString const&)
       BUrl::SetHost(BString const&)
       BUrl::SetPassword(BString const&)
       BUrl::SetPath(BString const&)
       BUrl::SetPort(int)
       BUrl::SetProtocol(BString const&)
       BUrl::SetRequest(BString const&)
       BUrl::SetUrlString(BString const&)
       BUrl::SetUserName(BString const&)
       BUrl::UrlDecode(bool)
       BUrl::UrlDecode(BString const&, bool)
       BUrl::UrlEncode(bool)
       BUrl::UrlEncode(BString const&, bool, bool)
       BUrl::UrlString() const
       BUrl::UserInfo() const
       BUrl::UserName() const
       BView::_Activate(bool)
       BView::_AddChild(BView*, BView*)
       BView::_AddChildToList(BView*, BView*)
       BView::_Attach()
       BView::_CheckLock() const
       BView::_CheckLockAndSwitchCurrent() const
       BView::_CheckOwnerLock() const
       BView::_CheckOwnerLockAndSwitchCurrent() const
       BView::_ClipToPicture(BPicture*, BPoint, bool, bool)
       BView::_ClipToRect(BRect, bool)
       BView::_ClipToShape(BShape*, bool)
       BView::_ColorsUpdated(BMessage*)
       BView::_ConvertFromParent(BPoint*, bool) const
       BView::_ConvertFromScreen(BPoint*, bool) const
       BView::_ConvertToParent(BPoint*, bool) const
       BView::_ConvertToScreen(BPoint*, bool) const
       BView::_CreateSelf()
       BView::_Detach()
       BView::_Draw(BRect)
       BView::_DrawAfterChildren(BRect)
       BView::_FlushIfNotInTransaction()
       BView::_FontsUpdated(BMessage*)
       BView::_InitData(BRect, char const*, unsigned int, unsigned int)
       BView::_InvalidateParentLayout()
       BView::_Layout(bool, BLayoutContext*)
       BView::_LayoutLeft(BLayout*)
       BView::_MoveTo(int, int)
       BView::_ParentResizedBy(int, int)
       BView::_PrintToStream()
       BView::_PrintTree()
       BView::_Pulse()
       BView::_RemoveChildFromList(BView*)
       BView::_RemoveCommArray()
       BView::_RemoveLayoutItemsFromLayout(bool)
       BView::_RemoveSelf()
       BView::_ReservedView11()
       BView::_ReservedView12()
       BView::_ReservedView13()
       BView::_ReservedView14()
       BView::_ReservedView15()
       BView::_ReservedView16()
       BView::_ResizeBy(int, int)
       BView::_SetOwner(BWindow*)
       BView::_SetShelf(BShelf*)
       BView::_SetViewBitmap(BBitmap const*, BRect, BRect, unsigned int, unsigned int)
       BView::_Shelf() const
       BView::_SwitchServerCurrentView() const
       BView::_UpdateStateForRemove()
       BView::~BView()
       BView::~BView()
       BView::~BView()
       BView::AddChild(BLayoutItem*)
       BView::AddChild(BView*, BView*)
       BView::AddLine(BPoint, BPoint, rgb_color)
       BView::AdoptParentColors()
       BView::AdoptSystemColors()
       BView::AdoptViewColors(BView*)
       BView::AllArchived(BMessage*) const
       BView::AllAttached()
       BView::AllDetached()
       BView::AllUnarchived(BMessage const*)
       BView::AppendToPicture(BPicture*)
       BView::Archive(BMessage*, bool) const
       BView::AttachedToWindow()
       BView::BeginLayer(unsigned char)
       BView::BeginLineArray(int)
       BView::BeginPicture(BPicture*)
       BView::BeginRectTracking(BRect, unsigned int)
       BView::Bounds() const
       BView::BView(BMessage*)
       BView::BView(BMessage*)
       BView::BView(BRect, char const*, unsigned int, unsigned int)
       BView::BView(BRect, char const*, unsigned int, unsigned int)
       BView::BView(BView const&)
       BView::BView(BView const&)
       BView::BView(char const*, unsigned int, BLayout*)
       BView::BView(char const*, unsigned int, BLayout*)
       BView::ChildAt(int) const
       BView::ClearViewBitmap()
       BView::ClearViewOverlay()
       BView::ClipToInversePicture(BPicture*, BPoint, bool)
       BView::ClipToInverseRect(BRect)
       BView::ClipToInverseShape(BShape*)
       BView::ClipToPicture(BPicture*, BPoint, bool)
       BView::ClipToRect(BRect)
       BView::ClipToShape(BShape*)
       BView::ConstrainClippingRegion(BRegion*)
       BView::ConvertFromParent(BPoint) const
       BView::ConvertFromParent(BPoint*) const
       BView::ConvertFromParent(BRect) const
       BView::ConvertFromParent(BRect*) const
       BView::ConvertFromScreen(BPoint) const
       BView::ConvertFromScreen(BPoint*) const
       BView::ConvertFromScreen(BRect) const
       BView::ConvertFromScreen(BRect*) const
       BView::ConvertToParent(BPoint) const
       BView::ConvertToParent(BPoint*) const
       BView::ConvertToParent(BRect) const
       BView::ConvertToParent(BRect*) const
       BView::ConvertToScreen(BPoint) const
       BView::ConvertToScreen(BPoint*) const
       BView::ConvertToScreen(BRect) const
       BView::ConvertToScreen(BRect*) const
       BView::CopyBits(BRect, BRect)
       BView::CountChildren() const
       BView::DelayedInvalidate(long, BRect)
       BView::DelayedInvalidate(long)
       BView::DetachedFromWindow()
       BView::DisableLayoutInvalidation()
       BView::DoLayout()
       BView::DragMessage(BMessage*, BBitmap*, BPoint, BHandler*)
       BView::DragMessage(BMessage*, BBitmap*, drawing_mode, BPoint, BHandler*)
       BView::DragMessage(BMessage*, BRect, BHandler*)
       BView::Draw(BRect)
       BView::DrawAfterChildren(BRect)
       BView::DrawBitmap(BBitmap const*, BPoint)
       BView::DrawBitmap(BBitmap const*, BRect, BRect, unsigned int)
       BView::DrawBitmap(BBitmap const*, BRect, BRect)
       BView::DrawBitmap(BBitmap const*, BRect)
       BView::DrawBitmap(BBitmap const*)
       BView::DrawBitmapAsync(BBitmap const*, BPoint)
       BView::DrawBitmapAsync(BBitmap const*, BRect, BRect, unsigned int)
       BView::DrawBitmapAsync(BBitmap const*, BRect, BRect)
       BView::DrawBitmapAsync(BBitmap const*, BRect)
       BView::DrawBitmapAsync(BBitmap const*)
       BView::DrawChar(char, BPoint)
       BView::DrawChar(char)
       BView::DrawingMode() const
       BView::DrawPicture(BPicture const*, BPoint)
       BView::DrawPicture(BPicture const*)
       BView::DrawPicture(char const*, long, BPoint)
       BView::DrawPictureAsync(BPicture const*, BPoint)
       BView::DrawPictureAsync(BPicture const*)
       BView::DrawPictureAsync(char const*, long, BPoint)
       BView::DrawString(char const*, BPoint const*, int)
       BView::DrawString(char const*, BPoint, escapement_delta*)
       BView::DrawString(char const*, escapement_delta*)
       BView::DrawString(char const*, int, BPoint const*, int)
       BView::DrawString(char const*, int, BPoint, escapement_delta*)
       BView::DrawString(char const*, int, escapement_delta*)
       BView::DrawTiledBitmap(BBitmap const*, BRect, BPoint)
       BView::DrawTiledBitmapAsync(BBitmap const*, BRect, BPoint)
       BView::EnableLayoutInvalidation()
       BView::EndLayer()
       BView::EndLineArray()
       BView::EndPicture()
       BView::EndRectTracking()
       BView::EventMask()
       BView::ExplicitAlignment() const
       BView::ExplicitMaxSize() const
       BView::ExplicitMinSize() const
       BView::ExplicitPreferredSize() const
       BView::FillArc(BPoint, float, float, float, float, BGradient const&)
       BView::FillArc(BPoint, float, float, float, float, pattern)
       BView::FillArc(BRect, float, float, BGradient const&)
       BView::FillArc(BRect, float, float, pattern)
       BView::FillBezier(BPoint*, BGradient const&)
       BView::FillBezier(BPoint*, pattern)
       BView::FillEllipse(BPoint, float, float, BGradient const&)
       BView::FillEllipse(BPoint, float, float, pattern)
       BView::FillEllipse(BRect, BGradient const&)
       BView::FillEllipse(BRect, pattern)
       BView::FillPolygon(BPoint const*, int, BGradient const&)
       BView::FillPolygon(BPoint const*, int, BRect, BGradient const&)
       BView::FillPolygon(BPoint const*, int, BRect, pattern)
       BView::FillPolygon(BPoint const*, int, pattern)
       BView::FillPolygon(BPolygon const*, BGradient const&)
       BView::FillPolygon(BPolygon const*, pattern)
       BView::FillRect(BRect, BGradient const&)
       BView::FillRect(BRect, pattern)
       BView::FillRegion(BRegion*, BGradient const&)
       BView::FillRegion(BRegion*, pattern)
       BView::FillRoundRect(BRect, float, float, BGradient const&)
       BView::FillRoundRect(BRect, float, float, pattern)
       BView::FillRule() const
       BView::FillShape(BShape*, BGradient const&)
       BView::FillShape(BShape*, pattern)
       BView::FillTriangle(BPoint, BPoint, BPoint, BGradient const&)
       BView::FillTriangle(BPoint, BPoint, BPoint, BRect, BGradient const&)
       BView::FillTriangle(BPoint, BPoint, BPoint, BRect, pattern)
       BView::FillTriangle(BPoint, BPoint, BPoint, pattern)
       BView::FindView(char const*) const
       BView::Flags() const
       BView::Flush() const
       BView::ForceFontAliasing(bool)
       BView::Frame() const
       BView::FrameMoved(BPoint)
       BView::FrameResized(float, float)
       BView::GetBlendingMode(source_alpha*, alpha_function*) const
       BView::GetClippingRegion(BRegion*) const
       BView::GetFont(BFont*) const
       BView::GetFontHeight(font_height*) const
       BView::GetHeightForWidth(float, float*, float*, float*)
       BView::GetLayout() const
       BView::GetMouse(BPoint*, unsigned int*, bool)
       BView::GetPreferredSize(float*, float*)
       BView::GetStringWidths(char**, int*, int, float*) const
       BView::GetSupportedSuites(BMessage*)
       BView::GetToolTipAt(BPoint, BToolTip**)
       BView::HasDefaultColors() const
       BView::HasHeightForWidth()
       BView::HasSystemColors() const
       BView::Hide()
       BView::HideToolTip()
       BView::HighColor() const
       BView::HighUIColor(float*) const
       BView::Instantiate(BMessage*)
       BView::Invalidate()
       BView::Invalidate(BRect)
       BView::Invalidate(BRegion const*)
       BView::InvalidateLayout(bool)
       BView::InvertRect(BRect)
       BView::IsFocus() const
       BView::IsHidden() const
       BView::IsHidden(BView const*) const
       BView::IsLayoutInvalidationDisabled()
       BView::IsLayoutValid() const
       BView::IsPrinting() const
       BView::KeyDown(char const*, int)
       BView::KeyUp(char const*, int)
       BView::Layout(bool)
       BView::LayoutAlignment()
       BView::LayoutChanged()
       BView::LayoutContext() const
       BView::LayoutInvalidated(bool)
       BView::LeftTop() const
       BView::LineCapMode() const
       BView::LineJoinMode() const
       BView::LineMiterLimit() const
       BView::LowColor() const
       BView::LowUIColor(float*) const
       BView::MakeFocus(bool)
       BView::MaxSize()
       BView::MessageReceived(BMessage*)
       BView::MinSize()
       BView::MouseDown(BPoint)
       BView::MouseMoved(BPoint, unsigned int, BMessage const*)
       BView::MouseUp(BPoint)
       BView::MoveBy(float, float)
       BView::MovePenBy(float, float)
       BView::MovePenTo(BPoint)
       BView::MovePenTo(float, float)
       BView::MoveTo(BPoint)
       BView::MoveTo(float, float)
       BView::NextSibling() const
       BView::operator=(BView const&)
       BView::Origin() const
       BView::Parent() const
       BView::PenLocation() const
       BView::PenSize() const
       BView::Perform(unsigned int, void*)
       BView::PopState()
       BView::PreferredSize()
       BView::PreviousSibling() const
       BView::Private::CountLayoutItems()
       BView::Private::DeregisterLayoutItem(BLayoutItem*)
       BView::Private::LayoutItemAt(int)
       BView::Private::MinMaxValid()
       BView::Private::RegisterLayoutItem(BLayoutItem*)
       BView::Private::WillLayout()
       BView::Pulse()
       BView::PushState()
       BView::Relayout()
       BView::RemoveChild(BView*)
       BView::RemoveSelf()
       BView::ResetLayoutInvalidation()
       BView::ResizeBy(float, float)
       BView::ResizeTo(BSize)
       BView::ResizeTo(float, float)
       BView::ResizeToPreferred()
       BView::ResizingMode() const
       BView::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BView::RotateBy(double)
       BView::Scale() const
       BView::ScaleBy(double, double)
       BView::ScrollBar(orientation) const
       BView::ScrollBy(float, float)
       BView::ScrollTo(BPoint)
       BView::ScrollWithMouseWheelDelta(BScrollBar*, float)
       BView::SetBlendingMode(source_alpha, alpha_function)
       BView::SetDiskMode(char*, long)
       BView::SetDrawingMode(drawing_mode)
       BView::SetEventMask(unsigned int, unsigned int)
       BView::SetExplicitAlignment(BAlignment)
       BView::SetExplicitMaxSize(BSize)
       BView::SetExplicitMinSize(BSize)
       BView::SetExplicitPreferredSize(BSize)
       BView::SetExplicitSize(BSize)
       BView::SetFillRule(int)
       BView::SetFlags(unsigned int)
       BView::SetFont(BFont const*, unsigned int)
       BView::SetFontSize(float)
       BView::SetHighColor(rgb_color)
       BView::SetHighUIColor(color_which, float)
       BView::SetLayout(BLayout*)
       BView::SetLineMode(cap_mode, join_mode, float)
       BView::SetLowColor(rgb_color)
       BView::SetLowUIColor(color_which, float)
       BView::SetMouseEventMask(unsigned int, unsigned int)
       BView::SetOrigin(BPoint)
       BView::SetOrigin(float, float)
       BView::SetPenSize(float)
       BView::SetResizingMode(unsigned int)
       BView::SetScale(float) const
       BView::SetToolTip(BToolTip*)
       BView::SetToolTip(char const*)
       BView::SetTransform(BAffineTransform)
       BView::SetViewBitmap(BBitmap const*, BRect, BRect, unsigned int, unsigned int)
       BView::SetViewBitmap(BBitmap const*, unsigned int, unsigned int)
       BView::SetViewColor(rgb_color)
       BView::SetViewCursor(BCursor const*, bool)
       BView::SetViewOverlay(BBitmap const*, BRect, BRect, rgb_color*, unsigned int, unsigned int)
       BView::SetViewOverlay(BBitmap const*, rgb_color*, unsigned int, unsigned int)
       BView::SetViewUIColor(color_which, float)
       BView::Show()
       BView::ShowToolTip(BToolTip*)
       BView::StringWidth(char const*, int) const
       BView::StringWidth(char const*) const
       BView::StrokeArc(BPoint, float, float, float, float, pattern)
       BView::StrokeArc(BRect, float, float, pattern)
       BView::StrokeBezier(BPoint*, pattern)
       BView::StrokeEllipse(BPoint, float, float, pattern)
       BView::StrokeEllipse(BRect, pattern)
       BView::StrokeLine(BPoint, BPoint, pattern)
       BView::StrokeLine(BPoint, pattern)
       BView::StrokePolygon(BPoint const*, int, bool, pattern)
       BView::StrokePolygon(BPoint const*, int, BRect, bool, pattern)
       BView::StrokePolygon(BPolygon const*, bool, pattern)
       BView::StrokeRect(BRect, pattern)
       BView::StrokeRoundRect(BRect, float, float, pattern)
       BView::StrokeShape(BShape*, pattern)
       BView::StrokeTriangle(BPoint, BPoint, BPoint, BRect, pattern)
       BView::StrokeTriangle(BPoint, BPoint, BPoint, pattern)
       BView::Sync() const
       BView::TargetedByScrollView(BScrollView*)
       BView::ToolTip() const
       BView::Transform() const
       BView::TransformTo(coordinate_space) const
       BView::TranslateBy(double, double)
       BView::TruncateString(BString*, unsigned int, float) const
       BView::ViewColor() const
       BView::ViewUIColor(float*) const
       BView::Window() const
       BView::WindowActivated(bool)
       BViewLayoutItem::~BViewLayoutItem()
       BViewLayoutItem::~BViewLayoutItem()
       BViewLayoutItem::~BViewLayoutItem()
       BViewLayoutItem::Alignment()
       BViewLayoutItem::AllArchived(BMessage*) const
       BViewLayoutItem::AllUnarchived(BMessage const*)
       BViewLayoutItem::AncestorVisibilityChanged(bool)
       BViewLayoutItem::Archive(BMessage*, bool) const
       BViewLayoutItem::BViewLayoutItem(BMessage*)
       BViewLayoutItem::BViewLayoutItem(BMessage*)
       BViewLayoutItem::BViewLayoutItem(BView*)
       BViewLayoutItem::BViewLayoutItem(BView*)
       BViewLayoutItem::Frame()
       BViewLayoutItem::GetHeightForWidth(float, float*, float*, float*)
       BViewLayoutItem::HasHeightForWidth()
       BViewLayoutItem::Instantiate(BMessage*)
       BViewLayoutItem::IsVisible()
       BViewLayoutItem::LayoutInvalidated(bool)
       BViewLayoutItem::MaxSize()
       BViewLayoutItem::MinSize()
       BViewLayoutItem::PreferredSize()
       BViewLayoutItem::Relayout(bool)
       BViewLayoutItem::SetExplicitAlignment(BAlignment)
       BViewLayoutItem::SetExplicitMaxSize(BSize)
       BViewLayoutItem::SetExplicitMinSize(BSize)
       BViewLayoutItem::SetExplicitPreferredSize(BSize)
       BViewLayoutItem::SetFrame(BRect)
       BViewLayoutItem::SetVisible(bool)
       BViewLayoutItem::View()
       BVolume::_TurnUpTheVolume1()
       BVolume::_TurnUpTheVolume2()
       BVolume::_TurnUpTheVolume3()
       BVolume::_TurnUpTheVolume4()
       BVolume::_TurnUpTheVolume5()
       BVolume::_TurnUpTheVolume6()
       BVolume::_TurnUpTheVolume7()
       BVolume::_TurnUpTheVolume8()
       BVolume::~BVolume()
       BVolume::~BVolume()
       BVolume::~BVolume()
       BVolume::BlockSize() const
       BVolume::BVolume()
       BVolume::BVolume()
       BVolume::BVolume(BVolume const&)
       BVolume::BVolume(BVolume const&)
       BVolume::BVolume(int)
       BVolume::BVolume(int)
       BVolume::Capacity() const
       BVolume::Device() const
       BVolume::FreeBytes() const
       BVolume::GetIcon(BBitmap*, icon_size) const
       BVolume::GetIcon(unsigned char**, unsigned long*, unsigned int*) const
       BVolume::GetName(char*) const
       BVolume::GetRootDirectory(BDirectory*) const
       BVolume::InitCheck() const
       BVolume::IsPersistent() const
       BVolume::IsReadOnly() const
       BVolume::IsRemovable() const
       BVolume::IsShared() const
       BVolume::KnowsAttr() const
       BVolume::KnowsMime() const
       BVolume::KnowsQuery() const
       BVolume::operator!=(BVolume const&) const
       BVolume::operator=(BVolume const&)
       BVolume::operator==(BVolume const&) const
       BVolume::SetName(char const*)
       BVolume::SetTo(int)
       BVolume::Unset()
       BVolumeRoster::_SeveredVRoster1()
       BVolumeRoster::_SeveredVRoster2()
       BVolumeRoster::~BVolumeRoster()
       BVolumeRoster::~BVolumeRoster()
       BVolumeRoster::~BVolumeRoster()
       BVolumeRoster::BVolumeRoster()
       BVolumeRoster::BVolumeRoster()
       BVolumeRoster::GetBootVolume(BVolume*)
       BVolumeRoster::GetNextVolume(BVolume*)
       BVolumeRoster::Messenger() const
       BVolumeRoster::Rewind()
       BVolumeRoster::StartWatching(BMessenger)
       BVolumeRoster::StopWatching()
       BWindow::_AdoptResize()
       BWindow::_ComposeType(window_look, window_feel) const
       BWindow::_CreateTopView()
       BWindow::_DecomposeType(window_type, window_look*, window_feel*) const
       BWindow::_DequeueAll()
       BWindow::_DetermineTarget(BMessage*, BHandler*)
       BWindow::_FindNextNavigable(BView*, unsigned int)
       BWindow::_FindPreviousNavigable(BView*, unsigned int)
       BWindow::_FindShortcut(unsigned int, unsigned int)
       BWindow::_FindView(BView*, BPoint) const
       BWindow::_FindView(int)
       BWindow::_GetDecoratorSize(float*, float*) const
       BWindow::_HandleKeyDown(BMessage*)
       BWindow::_HandleUnmappedKeyDown(BMessage*)
       BWindow::_InitData(BRect, char const*, window_look, window_feel, unsigned int, unsigned int, int)
       BWindow::_IsFocusMessage(BMessage*)
       BWindow::_KeyboardNavigation()
       BWindow::_LastViewChild(BView*)
       BWindow::_PropagateMessageToChildViews(BMessage*)
       BWindow::_ReservedWindow2()
       BWindow::_ReservedWindow3()
       BWindow::_ReservedWindow4()
       BWindow::_ReservedWindow5()
       BWindow::_ReservedWindow6()
       BWindow::_ReservedWindow7()
       BWindow::_ReservedWindow8()
       BWindow::_SanitizeMessage(BMessage*, BHandler*, bool)
       BWindow::_SendShowOrHideMessage()
       BWindow::_SetFocus(BView*, bool)
       BWindow::_SetName(char const*)
       BWindow::_StealMouseMessage(BMessage*, bool&)
       BWindow::_Switcher(int, unsigned int, bool)
       BWindow::_TransitForMouseMoved(BView*, BView*) const
       BWindow::_UnpackMessage(BWindow::unpack_cookie&, BMessage**, BHandler**, bool*)
       BWindow::~BWindow()
       BWindow::~BWindow()
       BWindow::~BWindow()
       BWindow::Activate(bool)
       BWindow::AddChild(BLayoutItem*)
       BWindow::AddChild(BView*, BView*)
       BWindow::AddShortcut(unsigned int, unsigned int, BMenuItem*)
       BWindow::AddShortcut(unsigned int, unsigned int, BMessage*, BHandler*)
       BWindow::AddShortcut(unsigned int, unsigned int, BMessage*)
       BWindow::AddToSubset(BWindow*)
       BWindow::AlertPosition(BRect const&)
       BWindow::Archive(BMessage*, bool) const
       BWindow::BeginViewTransaction()
       BWindow::Bounds() const
       BWindow::BWindow(BMessage*)
       BWindow::BWindow(BMessage*)
       BWindow::BWindow(BRect, char const*, window_look, window_feel, unsigned int, unsigned int)
       BWindow::BWindow(BRect, char const*, window_look, window_feel, unsigned int, unsigned int)
       BWindow::BWindow(BRect, char const*, window_type, unsigned int, unsigned int)
       BWindow::BWindow(BRect, char const*, window_type, unsigned int, unsigned int)
       BWindow::BWindow(BRect, int)
       BWindow::BWindow(BRect, int)
       BWindow::CenterIn(BRect const&)
       BWindow::CenterOnScreen()
       BWindow::CenterOnScreen(screen_id)
       BWindow::ChildAt(int) const
       BWindow::ConvertFromScreen(BPoint) const
       BWindow::ConvertFromScreen(BPoint*) const
       BWindow::ConvertFromScreen(BRect) const
       BWindow::ConvertFromScreen(BRect*) const
       BWindow::ConvertToMessage(void*, int)
       BWindow::ConvertToScreen(BPoint) const
       BWindow::ConvertToScreen(BPoint*) const
       BWindow::ConvertToScreen(BRect) const
       BWindow::ConvertToScreen(BRect*) const
       BWindow::CountChildren() const
       BWindow::CurrentFocus() const
       BWindow::DecoratorFrame() const
       BWindow::DefaultButton() const
       BWindow::DisableUpdates()
       BWindow::DispatchMessage(BMessage*, BHandler*)
       BWindow::EnableUpdates()
       BWindow::EndViewTransaction()
       BWindow::Feel() const
       BWindow::FindView(BPoint) const
       BWindow::FindView(char const*) const
       BWindow::Flags() const
       BWindow::Flush() const
       BWindow::Frame() const
       BWindow::FrameMoved(BPoint)
       BWindow::FrameResized(float, float)
       BWindow::GetDecoratorSettings(BMessage*) const
       BWindow::GetLayout() const
       BWindow::GetSizeLimits(float*, float*, float*, float*)
       BWindow::GetSupportedSuites(BMessage*)
       BWindow::GetWindowAlignment(window_alignment*, int*, int*, int*, int*, int*, int*, int*, int*) const
       BWindow::HasShortcut(unsigned int, unsigned int)
       BWindow::Hide()
       BWindow::Instantiate(BMessage*)
       BWindow::InvalidateLayout(bool)
       BWindow::InViewTransaction() const
       BWindow::IsActive() const
       BWindow::IsFilePanel() const
       BWindow::IsFloating() const
       BWindow::IsFront() const
       BWindow::IsHidden() const
       BWindow::IsMinimized() const
       BWindow::IsModal() const
       BWindow::IsOffscreenWindow() const
       BWindow::KeyMenuBar() const
       BWindow::LastMouseMovedView() const
       BWindow::Layout(bool)
       BWindow::Look() const
       BWindow::MenusBeginning()
       BWindow::MenusEnded()
       BWindow::MessageReceived(BMessage*)
       BWindow::Minimize(bool)
       BWindow::MoveBy(float, float)
       BWindow::MoveOnScreen(unsigned int)
       BWindow::MoveTo(BPoint)
       BWindow::MoveTo(float, float)
       BWindow::NeedsUpdate() const
       BWindow::Perform(unsigned int, void*)
       BWindow::PulseRate() const
       BWindow::Quit()
       BWindow::QuitRequested()
       BWindow::RemoveChild(BView*)
       BWindow::RemoveFromSubset(BWindow*)
       BWindow::RemoveShortcut(unsigned int, unsigned int)
       BWindow::ResizeBy(float, float)
       BWindow::ResizeTo(float, float)
       BWindow::ResizeToPreferred()
       BWindow::ResolveSpecifier(BMessage*, int, BMessage*, int, char const*)
       BWindow::Run()
       BWindow::ScreenChanged(BRect, color_space)
       BWindow::SendBehind(BWindow const*)
       BWindow::SetDecoratorSettings(BMessage const&)
       BWindow::SetDefaultButton(BButton*)
       BWindow::SetFeel(window_feel)
       BWindow::SetFlags(unsigned int)
       BWindow::SetIsFilePanel(bool)
       BWindow::SetKeyMenuBar(BMenuBar*)
       BWindow::SetLayout(BLayout*)
       BWindow::SetLook(window_look)
       BWindow::SetPulseRate(long)
       BWindow::SetSizeLimits(float, float, float, float)
       BWindow::SetTitle(char const*)
       BWindow::SetType(window_type)
       BWindow::SetWindowAlignment(window_alignment, int, int, int, int, int, int, int, int)
       BWindow::SetWorkspaces(unsigned int)
       BWindow::SetZoomLimits(float, float)
       BWindow::Shortcut::~Shortcut()
       BWindow::Shortcut::~Shortcut()
       BWindow::Shortcut::AllowedModifiers()
       BWindow::Shortcut::Matches(unsigned int, unsigned int) const
       BWindow::Shortcut::PrepareKey(unsigned int)
       BWindow::Shortcut::PrepareModifiers(unsigned int)
       BWindow::Shortcut::Shortcut(unsigned int, unsigned int, BMenuItem*)
       BWindow::Shortcut::Shortcut(unsigned int, unsigned int, BMenuItem*)
       BWindow::Shortcut::Shortcut(unsigned int, unsigned int, BMessage*, BHandler*)
       BWindow::Shortcut::Shortcut(unsigned int, unsigned int, BMessage*, BHandler*)
       BWindow::Show()
       BWindow::Size() const
       BWindow::Sync() const
       BWindow::task_looper()
       BWindow::Title() const
       BWindow::Type() const
       BWindow::unpack_cookie::unpack_cookie()
       BWindow::unpack_cookie::unpack_cookie()
       BWindow::UpdateIfNeeded()
       BWindow::UpdateSizeLimits()
       BWindow::WindowActivated(bool)
       BWindow::WorkspaceActivated(int, bool)
       BWindow::Workspaces() const
       BWindow::WorkspacesChanged(unsigned int, unsigned int)
       BWindow::Zoom()
       BWindow::Zoom(BPoint, float, float)
       BWindowStack::_AttachMessenger(BMessenger const&)
       BWindowStack::_ReadMessenger(BMessenger&)
       BWindowStack::_StartMessage(int)
       BWindowStack::~BWindowStack()
       BWindowStack::~BWindowStack()
       BWindowStack::AddWindow(BMessenger const&)
       BWindowStack::AddWindow(BWindow const*)
       BWindowStack::AddWindowAt(BMessenger const&, int)
       BWindowStack::AddWindowAt(BWindow const*, int)
       BWindowStack::BWindowStack(BWindow*)
       BWindowStack::BWindowStack(BWindow*)
       BWindowStack::CountWindows()
       BWindowStack::HasWindow(BMessenger const&)
       BWindowStack::HasWindow(BWindow const*)
       BWindowStack::RemoveWindow(BMessenger const&)
       BWindowStack::RemoveWindow(BWindow const*)
       BWindowStack::RemoveWindowAt(int, BMessenger*)
       BWindowStack::WindowAt(int, BMessenger&)
       BZlibCompressionAlgorithm::_TranslateZlibError(int)
       BZlibCompressionAlgorithm::~BZlibCompressionAlgorithm()
       BZlibCompressionAlgorithm::~BZlibCompressionAlgorithm()
       BZlibCompressionAlgorithm::~BZlibCompressionAlgorithm()
       BZlibCompressionAlgorithm::BZlibCompressionAlgorithm()
       BZlibCompressionAlgorithm::BZlibCompressionAlgorithm()
       BZlibCompressionAlgorithm::CompressBuffer(void const*, unsigned long, void*, unsigned long, unsigned long&, BCompressionParameters const*)
       BZlibCompressionAlgorithm::CreateCompressingInputStream(BDataIO*, BCompressionParameters const*, BDataIO*&)
       BZlibCompressionAlgorithm::CreateCompressingOutputStream(BDataIO*, BCompressionParameters const*, BDataIO*&)
       BZlibCompressionAlgorithm::CreateDecompressingInputStream(BDataIO*, BDecompressionParameters const*, BDataIO*&)
       BZlibCompressionAlgorithm::CreateDecompressingOutputStream(BDataIO*, BDecompressionParameters const*, BDataIO*&)
       BZlibCompressionAlgorithm::DecompressBuffer(void const*, unsigned long, void*, unsigned long, unsigned long&, BDecompressionParameters const*)
       BZlibCompressionParameters::~BZlibCompressionParameters()
       BZlibCompressionParameters::~BZlibCompressionParameters()
       BZlibCompressionParameters::~BZlibCompressionParameters()
       BZlibCompressionParameters::BufferSize() const
       BZlibCompressionParameters::BZlibCompressionParameters(int)
       BZlibCompressionParameters::BZlibCompressionParameters(int)
       BZlibCompressionParameters::CompressionLevel() const
       BZlibCompressionParameters::IsGzipFormat() const
       BZlibCompressionParameters::SetBufferSize(unsigned long)
       BZlibCompressionParameters::SetCompressionLevel(int)
       BZlibCompressionParameters::SetGzipFormat(bool)
       BZlibDecompressionParameters::~BZlibDecompressionParameters()
       BZlibDecompressionParameters::~BZlibDecompressionParameters()
       BZlibDecompressionParameters::~BZlibDecompressionParameters()
       BZlibDecompressionParameters::BufferSize() const
       BZlibDecompressionParameters::BZlibDecompressionParameters()
       BZlibDecompressionParameters::BZlibDecompressionParameters()
       BZlibDecompressionParameters::SetBufferSize(unsigned long)
       BZstdCompressionAlgorithm::_TranslateZstdError(unsigned long)
       BZstdCompressionAlgorithm::~BZstdCompressionAlgorithm()
       BZstdCompressionAlgorithm::~BZstdCompressionAlgorithm()
       BZstdCompressionAlgorithm::~BZstdCompressionAlgorithm()
       BZstdCompressionAlgorithm::BZstdCompressionAlgorithm()
       BZstdCompressionAlgorithm::BZstdCompressionAlgorithm()
       BZstdCompressionAlgorithm::CompressBuffer(void const*, unsigned long, void*, unsigned long, unsigned long&, BCompressionParameters const*)
       BZstdCompressionAlgorithm::CreateCompressingInputStream(BDataIO*, BCompressionParameters const*, BDataIO*&)
       BZstdCompressionAlgorithm::CreateCompressingOutputStream(BDataIO*, BCompressionParameters const*, BDataIO*&)
       BZstdCompressionAlgorithm::CreateDecompressingInputStream(BDataIO*, BDecompressionParameters const*, BDataIO*&)
       BZstdCompressionAlgorithm::CreateDecompressingOutputStream(BDataIO*, BDecompressionParameters const*, BDataIO*&)
       BZstdCompressionAlgorithm::DecompressBuffer(void const*, unsigned long, void*, unsigned long, unsigned long&, BDecompressionParameters const*)
       BZstdCompressionParameters::~BZstdCompressionParameters()
       BZstdCompressionParameters::~BZstdCompressionParameters()
       BZstdCompressionParameters::~BZstdCompressionParameters()
       BZstdCompressionParameters::BufferSize() const
       BZstdCompressionParameters::BZstdCompressionParameters(int)
       BZstdCompressionParameters::BZstdCompressionParameters(int)
       BZstdCompressionParameters::CompressionLevel() const
       BZstdCompressionParameters::SetBufferSize(unsigned long)
       BZstdCompressionParameters::SetCompressionLevel(int)
       BZstdDecompressionParameters::~BZstdDecompressionParameters()
       BZstdDecompressionParameters::~BZstdDecompressionParameters()
       BZstdDecompressionParameters::~BZstdDecompressionParameters()
       BZstdDecompressionParameters::BufferSize() const
       BZstdDecompressionParameters::BZstdDecompressionParameters()
       BZstdDecompressionParameters::BZstdDecompressionParameters()
       BZstdDecompressionParameters::SetBufferSize(unsigned long)
       Compare(BString const*, BString const*)
       Compare(BString const&, BString const&)
       compute_dependencies(double**, int, int, bool*)
       control_scrollbar(scroll_bar_info*, BScrollBar*)
       count_font_families()
       count_font_styles(char*)
       count_workspaces()
       create_app_meta_mime
       create_directory(char const*, unsigned int)
       current_workspace()
       decode_base64
       default_catalog_get_available_languages
       disable_color(rgb_color, rgb_color)
       do_bring_to_front_team(BRect, int, bool)
       do_mime_update(int, char const*, int, int, int)
       do_minimize_team(BRect, int, bool)
       do_window_action(int, int, BRect, bool)
       dumpStr(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
       encode_base64
       entry_ref::~entry_ref()
       entry_ref::~entry_ref()
       entry_ref::entry_ref()
       entry_ref::entry_ref()
       entry_ref::entry_ref(entry_ref const&)
       entry_ref::entry_ref(entry_ref const&)
       entry_ref::entry_ref(int, long, char const*)
       entry_ref::entry_ref(int, long, char const*)
       entry_ref::operator!=(entry_ref const&) const
       entry_ref::operator=(entry_ref const&)
       entry_ref::operator==(entry_ref const&) const
       entry_ref::set_name(char const*)
       escapeChar(char)
       FilterDeleter(void*)
       find_directory(directory_which, BPath*, bool, BVolume*)
       find_input_device(char const*)
       find_instantiation_func(BMessage*)
       find_instantiation_func(char const*, char const*)
       find_instantiation_func(char const*)
       focus_follows_mouse_mode()
       focus_follows_mouse()
       general_info
       get_architectures(BStringList&)
       get_average_weight(unsigned char*)
       get_click_speed(long*)
       get_deskbar_frame(BRect*)
       get_device_icon
       get_device_icon(char const*, BBitmap*, icon_size)
       get_device_icon(char const*, unsigned char**, unsigned long*, unsigned int*)
       get_font_cache_info(unsigned int, void*)
       get_font_family(int, char (*) [64], unsigned int*)
       get_font_style(char*, int, char (*) [64], unsigned int*)
       get_font_style(char*, int, char (*) [64], unsigned short*, unsigned int*)
       get_hinting_mode(unsigned char*)
       get_input_devices(BList*)
       get_is_subpixel_ordering_regular(bool*)
       get_key_info(key_info*)
       get_key_map(key_map**, char**)
       get_key_repeat_delay(long*)
       get_key_repeat_rate(int*)
       get_keyboard_id(unsigned short*)
       get_menu_info(menu_info*)
       get_modifier_key(unsigned int, unsigned int*)
       get_mouse_acceleration(char const*, int*)
       get_mouse_acceleration(int*)
       get_mouse_bitmap(BBitmap**, BPoint*)
       get_mouse_map(mouse_map*)
       get_mouse_speed(char const*, int*)
       get_mouse_speed(int*)
       get_mouse_type(char const*, int*)
       get_mouse_type(int*)
       get_mouse(BPoint*, unsigned int*)
       get_named_icon(char const*, BBitmap*, icon_size)
       get_named_icon(char const*, unsigned char**, unsigned long*, unsigned int*)
       get_path_storage(agg::path_base<agg::vertex_block_storage<double, 8u, 256u> >&, BPrivate::Icon::control_point const*, int, bool)
       get_pixel_size_for(color_space, unsigned long*, unsigned long*, unsigned long*)
       get_ref_for_path(char const*, entry_ref*)
       get_scroll_bar_info(scroll_bar_info*)
       get_secondary_architectures(BStringList&)
       get_subpixel_antialiasing(bool*)
       get_token_list(int, int*)
       get_window_info(int)
       GetTrackerIcon__9BNodeInfoP9entry_refP7BBitmap9icon_size
       hexToChar(char, char)
       hexToChar(char)
       ICompare(BString const*, BString const*)
       ICompare(BString const&, BString const&)
       idle_time()
       initialize_after
       initialize_before
       instantiate_object(BMessage*, int*)
       instantiate_object(BMessage*)
       int BUnarchiver::FindObject<BArchivable>(char const*, int, BUnarchiver::ownership_policy, BArchivable*&)
       int BUnarchiver::GetObject<BArchivable>(int, BUnarchiver::ownership_policy, BArchivable*&)
       int BUnarchiver::InstantiateObject<BArchivable>(BMessage*, BArchivable*&)
       is_type_swapped
       isDecimalChar(char)
       isHexChar(char)
       isOctalChar(char)
       isPunctuation(char)
       isWhiteSpace(char)
       kDeviceTypeFloppyDisk
       kDeviceTypeHardDisk
       kDeviceTypeOptical
       keyboard_navigation_color()
       kPartitionTypeAmiga
       kPartitionTypeAmigaFFS
       kPartitionTypeApple
       kPartitionTypeAudioSession
       kPartitionTypeBFS
       kPartitionTypeBTRFS
       kPartitionTypeDataSession
       kPartitionTypeEFI
       kPartitionTypeEXFAT
       kPartitionTypeEXT2
       kPartitionTypeEXT3
       kPartitionTypeFAT12
       kPartitionTypeFAT32
       kPartitionTypeHFS
       kPartitionTypeHFSPlus
       kPartitionTypeIntel
       kPartitionTypeIntelExtended
       kPartitionTypeISO9660
       kPartitionTypeMultisession
       kPartitionTypeReiser
       kPartitionTypeUDF
       kPartitionTypeUnrecognized
       kPartitionTypeVMDK
       kUTF8ControlMap
       LARGE_ICON_TYPE
       LIBBE_1_ALPHA1
       LIBBE_1_ALPHA1
       LIBBE_BASE
       LIBBE_BASE
       MINI_ICON_TYPE
       mix_color(rgb_color, rgb_color, unsigned char)
       modifiers()
       mouse_mode()
       node_ref::node_ref()
       node_ref::node_ref()
       node_ref::node_ref(int, long)
       node_ref::node_ref(int, long)
       node_ref::node_ref(node_ref const&)
       node_ref::node_ref(node_ref const&)
       node_ref::operator!=(node_ref const&) const
       node_ref::operator<(node_ref const&) const
       node_ref::operator=(node_ref const&)
       node_ref::operator==(node_ref const&) const
       non-virtual thunk to BAbstractSpinner::~BAbstractSpinner()
       non-virtual thunk to BAbstractSpinner::~BAbstractSpinner()
       non-virtual thunk to BButton::~BButton()
       non-virtual thunk to BButton::~BButton()
       non-virtual thunk to BButton::Invoke(BMessage*)
       non-virtual thunk to BChannelControl::~BChannelControl()
       non-virtual thunk to BChannelControl::~BChannelControl()
       non-virtual thunk to BChannelControl::Invoke(BMessage*)
       non-virtual thunk to BChannelSlider::~BChannelSlider()
       non-virtual thunk to BChannelSlider::~BChannelSlider()
       non-virtual thunk to BCheckBox::~BCheckBox()
       non-virtual thunk to BCheckBox::~BCheckBox()
       non-virtual thunk to BCheckBox::Invoke(BMessage*)
       non-virtual thunk to BColorControl::~BColorControl()
       non-virtual thunk to BColorControl::~BColorControl()
       non-virtual thunk to BColorControl::Invoke(BMessage*)
       non-virtual thunk to BControl::~BControl()
       non-virtual thunk to BControl::~BControl()
       non-virtual thunk to BControl::Invoke(BMessage*)
       non-virtual thunk to BDecimalSpinner::~BDecimalSpinner()
       non-virtual thunk to BDecimalSpinner::~BDecimalSpinner()
       non-virtual thunk to BDirectory::~BDirectory()
       non-virtual thunk to BDirectory::~BDirectory()
       non-virtual thunk to BDirectory::CountEntries()
       non-virtual thunk to BDirectory::GetNextDirents(dirent*, unsigned long, int)
       non-virtual thunk to BDirectory::GetNextEntry(BEntry*, bool)
       non-virtual thunk to BDirectory::GetNextRef(entry_ref*)
       non-virtual thunk to BDirectory::Rewind()
       non-virtual thunk to BFile::~BFile()
       non-virtual thunk to BFile::~BFile()
       non-virtual thunk to BFile::GetSize(long*) const
       non-virtual thunk to BFile::Position() const
       non-virtual thunk to BFile::Read(void*, unsigned long)
       non-virtual thunk to BFile::ReadAt(long, void*, unsigned long)
       non-virtual thunk to BFile::Seek(long, unsigned int)
       non-virtual thunk to BFile::SetSize(long)
       non-virtual thunk to BFile::Write(void const*, unsigned long)
       non-virtual thunk to BFile::WriteAt(long, void const*, unsigned long)
       non-virtual thunk to BListView::~BListView()
       non-virtual thunk to BListView::~BListView()
       non-virtual thunk to BListView::Invoke(BMessage*)
       non-virtual thunk to BMenuItem::~BMenuItem()
       non-virtual thunk to BMenuItem::~BMenuItem()
       non-virtual thunk to BMenuItem::Invoke(BMessage*)
       non-virtual thunk to BOptionControl::~BOptionControl()
       non-virtual thunk to BOptionControl::~BOptionControl()
       non-virtual thunk to BOptionPopUp::~BOptionPopUp()
       non-virtual thunk to BOptionPopUp::~BOptionPopUp()
       non-virtual thunk to BOutlineListView::~BOutlineListView()
       non-virtual thunk to BOutlineListView::~BOutlineListView()
       non-virtual thunk to BPictureButton::~BPictureButton()
       non-virtual thunk to BPictureButton::~BPictureButton()
       non-virtual thunk to BPictureButton::Invoke(BMessage*)
       non-virtual thunk to BRadioButton::~BRadioButton()
       non-virtual thunk to BRadioButton::~BRadioButton()
       non-virtual thunk to BRadioButton::Invoke(BMessage*)
       non-virtual thunk to BSeparatorItem::~BSeparatorItem()
       non-virtual thunk to BSeparatorItem::~BSeparatorItem()
       non-virtual thunk to BSlider::~BSlider()
       non-virtual thunk to BSlider::~BSlider()
       non-virtual thunk to BSlider::Invoke(BMessage*)
       non-virtual thunk to BSpinner::~BSpinner()
       non-virtual thunk to BSpinner::~BSpinner()
       non-virtual thunk to BTextControl::~BTextControl()
       non-virtual thunk to BTextControl::~BTextControl()
       non-virtual thunk to BTextControl::Invoke(BMessage*)
       non-virtual thunk to BTextToolTip::~BTextToolTip()
       non-virtual thunk to BTextToolTip::~BTextToolTip()
       non-virtual thunk to BToolTip::~BToolTip()
       non-virtual thunk to BToolTip::~BToolTip()
       non-virtual thunk to BTwoDimensionalLayout::VerticalCompoundLayouter::LayoutContextLeft(BLayoutContext*)
       octalToChar(char, char, char)
       octalToChar(char, char)
       octalToChar(char)
       operator!=(BMessenger const&, BMessenger const&)
       operator<(BMessenger const&, BMessenger const&)
       operator<(entry_ref const&, entry_ref const&)
       PictureDataWriter::~PictureDataWriter()
       PictureDataWriter::~PictureDataWriter()
       PictureDataWriter::~PictureDataWriter()
       PictureDataWriter::BeginOp(short const&)
       PictureDataWriter::EndOp()
       PictureDataWriter::PictureDataWriter()
       PictureDataWriter::PictureDataWriter()
       PictureDataWriter::PictureDataWriter(BPositionIO*)
       PictureDataWriter::PictureDataWriter(BPositionIO*)
       PictureDataWriter::SetTo(BPositionIO*)
       PictureDataWriter::WriteBlendLayer(Layer*)
       PictureDataWriter::WriteClearClipping()
       PictureDataWriter::WriteClipToPicture(int, BPoint const&, bool)
       PictureDataWriter::WriteClipToRect(BRect const&, bool)
       PictureDataWriter::WriteClipToShape(int, void const*, int, void const*, bool)
       PictureDataWriter::WriteData(void const*, unsigned long)
       PictureDataWriter::WriteDrawArc(BPoint const&, BPoint const&, float const&, float const&, bool const&)
       PictureDataWriter::WriteDrawArcGradient(BPoint const&, BPoint const&, float const&, float const&, BGradient const&, bool const&)
       PictureDataWriter::WriteDrawBezier(BPoint const*, bool const&)
       PictureDataWriter::WriteDrawBezierGradient(BPoint const*, BGradient const&, bool const&)
       PictureDataWriter::WriteDrawBitmap(BRect const&, BRect const&, int const&, int const&, int const&, int const&, int const&, void const*, int const&)
       PictureDataWriter::WriteDrawEllipse(BRect const&, bool const&)
       PictureDataWriter::WriteDrawEllipseGradient(BRect const&, BGradient const&, bool const&)
       PictureDataWriter::WriteDrawPicture(BPoint const&, int const&)
       PictureDataWriter::WriteDrawPolygon(int const&, BPoint*, bool const&, bool const&)
       PictureDataWriter::WriteDrawPolygonGradient(int const&, BPoint*, bool const&, BGradient const&, bool const&)
       PictureDataWriter::WriteDrawRect(BRect const&, bool const&)
       PictureDataWriter::WriteDrawRectGradient(BRect const&, BGradient const&, bool const&)
       PictureDataWriter::WriteDrawRoundRect(BRect const&, BPoint const&, bool const&)
       PictureDataWriter::WriteDrawRoundRectGradient(BRect const&, BPoint const&, BGradient const&, bool const&)
       PictureDataWriter::WriteDrawShape(int const&, void const*, int const&, void const*, bool const&)
       PictureDataWriter::WriteDrawShapeGradient(int const&, void const*, int const&, void const*, BGradient const&, bool const&)
       PictureDataWriter::WriteDrawString(BPoint const&, char const*, int const&, escapement_delta const&)
       PictureDataWriter::WriteDrawString(char const*, int, BPoint const*, int)
       PictureDataWriter::WriteInvertRect(BRect const&)
       PictureDataWriter::WritePopState()
       PictureDataWriter::WritePushState()
       PictureDataWriter::WriteRotateBy(double)
       PictureDataWriter::WriteScaleBy(double, double)
       PictureDataWriter::WriteSetClipping(BRegion const&)
       PictureDataWriter::WriteSetDrawingMode(drawing_mode const&)
       PictureDataWriter::WriteSetFillRule(int)
       PictureDataWriter::WriteSetFontEncoding(int const&)
       PictureDataWriter::WriteSetFontFace(int const&)
       PictureDataWriter::WriteSetFontFamily(char const*)
       PictureDataWriter::WriteSetFontFlags(int const&)
       PictureDataWriter::WriteSetFontRotation(float const&)
       PictureDataWriter::WriteSetFontShear(float const&)
       PictureDataWriter::WriteSetFontSize(float const&)
       PictureDataWriter::WriteSetFontSpacing(int const&)
       PictureDataWriter::WriteSetFontStyle(char const*)
       PictureDataWriter::WriteSetHighColor(rgb_color const&)
       PictureDataWriter::WriteSetLineMode(cap_mode const&, join_mode const&, float const&)
       PictureDataWriter::WriteSetLowColor(rgb_color const&)
       PictureDataWriter::WriteSetOrigin(BPoint const&)
       PictureDataWriter::WriteSetPattern(pattern const&)
       PictureDataWriter::WriteSetPenLocation(BPoint const&)
       PictureDataWriter::WriteSetPenSize(float const&)
       PictureDataWriter::WriteSetScale(float const&)
       PictureDataWriter::WriteSetTransform(BAffineTransform)
       PictureDataWriter::WriteStrokeLine(BPoint const&, BPoint const&)
       PictureDataWriter::WriteTranslateBy(double, double)
       qr_decomposition(double**, int, int, double*, double**)
       reconnect_bitmaps_to_app_server()
       reconnect_pictures_to_app_server()
       rgb_color::Brightness() const
       run_add_printer_panel()
       run_be_about()
       run_select_printer_panel()
       sAppResourcesInitOnce
       set_accept_first_click(bool)
       set_average_weight(unsigned char)
       set_click_speed(long)
       set_focus_follows_mouse_mode(mode_focus_follows_mouse)
       set_focus_follows_mouse(bool)
       set_font_cache_info(unsigned int, void*)
       set_hinting_mode(unsigned char)
       set_is_subpixel_ordering_regular(bool)
       set_key_repeat_delay(long)
       set_key_repeat_rate(int)
       set_keyboard_locks(unsigned int)
       set_menu_info(menu_info*)
       set_modifier_key(unsigned int, unsigned int)
       set_mouse_acceleration(char const*, int)
       set_mouse_acceleration(int)
       set_mouse_map(mouse_map*)
       set_mouse_mode(mode_mouse)
       set_mouse_speed(char const*, int)
       set_mouse_speed(int)
       set_mouse_type(char const*, int)
       set_mouse_type(int)
       set_screen_space(int, unsigned int, bool)
       set_scroll_bar_info(scroll_bar_info*)
       set_subpixel_antialiasing(bool)
       set_ui_color(color_which const&, rgb_color const&)
       set_ui_colors(BMessage const*)
       set_workspace_count(int)
       shift_color(rgb_color, float)
       solve(double**, int, double*)
       sOnQuitLooperList
       SpinnerButton::~SpinnerButton()
       SpinnerButton::~SpinnerButton()
       SpinnerButton::~SpinnerButton()
       SpinnerButton::AttachedToWindow()
       SpinnerButton::DetachedFromWindow()
       SpinnerButton::Draw(BRect)
       SpinnerButton::MessageReceived(BMessage*)
       SpinnerButton::MouseDown(BPoint)
       SpinnerButton::MouseMoved(BPoint, unsigned int, BMessage const*)
       SpinnerButton::MouseUp(BPoint)
       SpinnerButton::SpinnerButton(BRect, char const*, spinner_direction)
       SpinnerButton::SpinnerButton(BRect, char const*, spinner_direction)
       SpinnerTextView::~SpinnerTextView()
       SpinnerTextView::~SpinnerTextView()
       SpinnerTextView::~SpinnerTextView()
       SpinnerTextView::AttachedToWindow()
       SpinnerTextView::DetachedFromWindow()
       SpinnerTextView::KeyDown(char const*, int)
       SpinnerTextView::MakeFocus(bool)
       SpinnerTextView::SpinnerTextView(BRect, BRect)
       SpinnerTextView::SpinnerTextView(BRect, BRect)
       stop_watching(BHandler const*, BLooper const*)
       stop_watching(BMessenger)
       swap_data
       system_beep(char const*)
       system_colors()
       TAlertView::~TAlertView()
       TAlertView::~TAlertView()
       TAlertView::~TAlertView()
       TAlertView::Archive(BMessage*, bool) const
       TAlertView::Draw(BRect)
       TAlertView::GetPreferredSize(float*, float*)
       TAlertView::Instantiate(BMessage*)
       TAlertView::MaxSize()
       TAlertView::SetBitmap(BBitmap*)
       TAlertView::TAlertView()
       TAlertView::TAlertView()
       TAlertView::TAlertView(BMessage*)
       TAlertView::TAlertView(BMessage*)
       terminate_after
       tint_color(rgb_color, float)
       truncate_string(BString&, unsigned int, float, float const*, float, float, int)
       ui_color_name(color_which)
       ui_color(color_which)
       update_font_families(bool)
       update_mime_info
       validate_instantiation(BMessage*, char const*)
       watch_input_devices(BMessenger, bool)
       watch_node(node_ref const*, unsigned int, BHandler const*, BLooper const*)
       watch_node(node_ref const*, unsigned int, BMessenger)
       watch_volume(int, unsigned int, BHandler const*, BLooper const*)
       watch_volume(int, unsigned int, BMessenger)
       which_ui_color(char const*)
